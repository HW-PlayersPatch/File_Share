--
--  Generated\Mission05OEM.c
--
--  Finite state machine routines for "Mission05OEM" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission05OEM.kp by KAS2C Version 2.05
--


--#include "Generated\Mission05OEM.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfReinforce
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_ByeByeLove = 0
G_MyPath = 0
G_WeGetIonz = 0
G_WeGetPlaz = 0
SetCapitalChassis = 0
SetMediumGuns = 0
SetTechOnce1 = 0
SetTechOnce2 = 0
_VIFONCE053 = 0
_VIFONCE054 = 0
_VIFONCE055 = 0
_VIFONCE056 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.

--Following are Team-Scoped variables: referenced differently than globals.
WhichPath = {["TuranicCarrier1"] = 0, ["TuranicCarrier2"] = 0}
_VIFONCE001 = {["DummyTeam"] = 0}
_VIFONCE002 = {["DummyTeam"] = 0}
_VIFONCE003 = {["DummyTeam"] = 0}
_VIFONCE004 = {["DummyTeam"] = 0}
_VIFONCE005 = {["DummyTeam"] = 0}
_VIFONCE006 = {["DummyTeam"] = 0}
_VIFONCE007 = {["DummyTeam"] = 0}
_VIFONCE008 = {["DummyTeam"] = 0}
_VIFONCE009 = {["DummyTeam"] = 0}
_VIFONCE010 = {["TuranicFrigs1"] = 0}
_VIFONCE011 = {["TuranicFrigs1"] = 0}
_VIFONCE012 = {["TuranicFrigs1"] = 0}
_VIFONCE013 = {["TuranicFrigs2"] = 0}
_VIFONCE014 = {["TuranicFrigs2"] = 0}
_VIFONCE015 = {["TuranicFrigs2"] = 0}
_VIFONCE016 = {["ProtFightersC1a"] = 0}
_VIFONCE017 = {["ProtFightersC1a"] = 0}
_VIFONCE018 = {["ProtFightersC1b"] = 0}
_VIFONCE019 = {["ProtFightersC1b"] = 0}
_VIFONCE020 = {["ProtFightersC2a"] = 0}
_VIFONCE021 = {["ProtFightersC2a"] = 0}
_VIFONCE022 = {["ProtFightersC2b"] = 0}
_VIFONCE023 = {["ProtFightersC2b"] = 0}
_VIFONCE024 = {["ProtCorvettesC1"] = 0}
_VIFONCE025 = {["ProtCorvettesC1"] = 0}
_VIFONCE026 = {["ProtCorvettesC2"] = 0}
_VIFONCE027 = {["ProtCorvettesC2"] = 0}
_VIFONCE028 = {["AttackFighters1"] = 0}
_VIFONCE029 = {["AttackFighters1"] = 0}
_VIFONCE030 = {["AttackFighters1"] = 0}
_VIFONCE031 = {["AttackFighters2"] = 0}
_VIFONCE032 = {["AttackFighters2"] = 0}
_VIFONCE033 = {["AttackFighters2"] = 0}
_VIFONCE034 = {["AttackMslCorvettes1"] = 0}
_VIFONCE035 = {["AttackMslCorvettes1"] = 0}
_VIFONCE036 = {["AttackMslCorvettes1"] = 0}
_VIFONCE037 = {["AttackMslCorvettes2"] = 0}
_VIFONCE038 = {["AttackMslCorvettes2"] = 0}
_VIFONCE039 = {["AttackMslCorvettes2"] = 0}
_VIFONCE040 = {["ResourceHaters"] = 0}
_VIFONCE041 = {["ResourceHaters"] = 0}
_VIFONCE042 = {["ResourceHaters"] = 0}
_VIFONCE043 = {["PDefenseS1"] = 0, ["PDefenseS10"] = 0, ["PDefenseS11"] = 0, ["PDefenseS12"] = 0, ["PDefenseS13"] = 0, ["PDefenseS14"] = 0, ["PDefenseS15"] = 0, ["PDefenseS16"] = 0, ["PDefenseS17"] = 0, ["PDefenseS18"] = 0, ["PDefenseS2"] = 0, ["PDefenseS21"] = 0, ["PDefenseS22"] = 0, ["PDefenseS23"] = 0, ["PDefenseS24"] = 0, ["PDefenseS25"] = 0, ["PDefenseS26"] = 0, ["PDefenseS27"] = 0, ["PDefenseS28"] = 0, ["PDefenseS29"] = 0, ["PDefenseS3"] = 0, ["PDefenseS30"] = 0, ["PDefenseS31"] = 0, ["PDefenseS32"] = 0, ["PDefenseS33"] = 0, ["PDefenseS34"] = 0, ["PDefenseS35"] = 0, ["PDefenseS36"] = 0, ["PDefenseS37"] = 0, ["PDefenseS38"] = 0, ["PDefenseS4"] = 0, ["PDefenseS41"] = 0, ["PDefenseS42"] = 0, ["PDefenseS43"] = 0, ["PDefenseS44"] = 0, ["PDefenseS45"] = 0, ["PDefenseS46"] = 0, ["PDefenseS47"] = 0, ["PDefenseS48"] = 0, ["PDefenseS49"] = 0, ["PDefenseS5"] = 0, ["PDefenseS50"] = 0, ["PDefenseS51"] = 0, ["PDefenseS52"] = 0, ["PDefenseS53"] = 0, ["PDefenseS54"] = 0, ["PDefenseS55"] = 0, ["PDefenseS56"] = 0, ["PDefenseS57"] = 0, ["PDefenseS58"] = 0, ["PDefenseS6"] = 0, ["PDefenseS7"] = 0, ["PDefenseS8"] = 0, ["PDefenseS9"] = 0}
_VIFONCE044 = {["PDefenseL1"] = 0, ["PDefenseL10"] = 0, ["PDefenseL11"] = 0, ["PDefenseL12"] = 0, ["PDefenseL13"] = 0, ["PDefenseL14"] = 0, ["PDefenseL15"] = 0, ["PDefenseL16"] = 0, ["PDefenseL17"] = 0, ["PDefenseL18"] = 0, ["PDefenseL2"] = 0, ["PDefenseL21"] = 0, ["PDefenseL22"] = 0, ["PDefenseL23"] = 0, ["PDefenseL24"] = 0, ["PDefenseL25"] = 0, ["PDefenseL26"] = 0, ["PDefenseL27"] = 0, ["PDefenseL28"] = 0, ["PDefenseL29"] = 0, ["PDefenseL3"] = 0, ["PDefenseL30"] = 0, ["PDefenseL31"] = 0, ["PDefenseL32"] = 0, ["PDefenseL33"] = 0, ["PDefenseL34"] = 0, ["PDefenseL35"] = 0, ["PDefenseL36"] = 0, ["PDefenseL37"] = 0, ["PDefenseL38"] = 0, ["PDefenseL4"] = 0, ["PDefenseL41"] = 0, ["PDefenseL42"] = 0, ["PDefenseL43"] = 0, ["PDefenseL44"] = 0, ["PDefenseL45"] = 0, ["PDefenseL46"] = 0, ["PDefenseL47"] = 0, ["PDefenseL48"] = 0, ["PDefenseL49"] = 0, ["PDefenseL5"] = 0, ["PDefenseL50"] = 0, ["PDefenseL51"] = 0, ["PDefenseL52"] = 0, ["PDefenseL53"] = 0, ["PDefenseL54"] = 0, ["PDefenseL55"] = 0, ["PDefenseL56"] = 0, ["PDefenseL57"] = 0, ["PDefenseL58"] = 0, ["PDefenseL6"] = 0, ["PDefenseL7"] = 0, ["PDefenseL8"] = 0, ["PDefenseL9"] = 0}
_VIFONCE045 = {["TuranicCarrier1"] = 0}
_VIFONCE046 = {["TuranicCarrier1"] = 0}
_VIFONCE047 = {["TuranicCarrier1"] = 0}
_VIFONCE048 = {["TuranicCarrier1"] = 0}
_VIFONCE049 = {["TuranicCarrier2"] = 0}
_VIFONCE050 = {["TuranicCarrier2"] = 0}
_VIFONCE051 = {["TuranicCarrier2"] = 0}
_VIFONCE052 = {["TuranicCarrier2"] = 0}
needed = {["ProtFightersC1a"] = 0, ["ProtFightersC1b"] = 0, ["ProtFightersC2a"] = 0, ["ProtFightersC2b"] = 0, ["ProtCorvettesC1"] = 0, ["ProtCorvettesC2"] = 0}
newships = {["ProtFightersC1a"] = 0, ["ProtFightersC1b"] = 0, ["ProtFightersC2a"] = 0, ["ProtFightersC2b"] = 0, ["ProtCorvettesC1"] = 0, ["ProtCorvettesC2"] = 0}
requested = {["ProtFightersC1a"] = 0, ["ProtFightersC1b"] = 0, ["ProtFightersC2a"] = 0, ["ProtFightersC2b"] = 0, ["ProtCorvettesC1"] = 0, ["ProtCorvettesC2"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
FIOpenSensorsTimer = {["DummyTeam"] = 1}
FakeNISTimer = {["DummyTeam"] = 2}
FuckTimer = {["DummyTeam"] = 3}
GettingYoursTimer = {["DummyTeam"] = 4}
WaitForDocking = {["TuranicCarrier1"] = 5, ["TuranicCarrier2"] = 6}


--kas timer names, with mappings to indices
TimerID_G_PlayIonOrPlasmaEvent = 0


--KAS objective names, set by KASObjective_Add
ObjectiveID_DestroyEnemyCarriers = 0
ObjectiveID_Hyperspace = 1
ObjectiveID_Count = 2


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_CarrierPOINTER1 = 0
PointerID_CarrierPOINTER2 = 1
PointerID_DefensePOINTER = 4
PointerID_FrigPOINTER1 = 2
PointerID_FrigPOINTER2 = 3


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"05 - Turanic Raider Planetoid",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_LocationCard = {  -- multilingual strings
	"Deep Space - Turanic Raider Planetoid",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_Objective1 = {  -- multilingual strings
	"Destroy Enemy Carriers",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FcHyperspaceSuccessful = {  -- multilingual strings
	"Hyperspace successful.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiIonTech = {  -- multilingual strings
	"Research Division reports it is now equipped for Ion Cannon technology.  We advise commencing research immediately.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiPlasmaTech = {  -- multilingual strings
	"Research Division reports it is now equipped for Plasma Bomb technology.  We advise commencing research immediately",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiPlanetoidHere = {  -- multilingual strings
	"Sensors indicate a heavily armed planetary defense system which we cannot penetrate.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiTuranicFleet = {  -- multilingual strings
	"The planetary garrison must have alerted the main Turanic Raider Fleet which is currently Hyperspacing in here.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiStopCarriers = {  -- multilingual strings
	"They are retreating to the planetoid. We must stop their Carriers from reaching the safety of the planetary defenses.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiPrepare = {  -- multilingual strings
	"The Turanic Carriers are launching Strike Craft.  Prepare for assault.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiYouLoose = {  -- multilingual strings
	"A Turanic Raider Carrier has reached the planetary defense zone.  They will remain a serious threat to us.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiPlanetaryDefensesHere = {  -- multilingual strings
	"The planetary defense system covers this area. Any of our ships entering its range will be destroyed.  Avoid this area at all costs.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_FiYouWin = {  -- multilingual strings
	"We have destroyed the body of the Turanic Raider fleet. We can now proceed on our journey. Hyperspace when ready.",
	"French version goes here",
	"German version goes here",
	"Spanish Version goes here",
	"Italian Version goes here", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                HYPERSPACE",
	"                HYPERESPACE",
	"        HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission05OEM MissionFlow FSM
--
function Init_Mission05OEM_MissionFlow(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FuckTimer[TeamName], 2)
	
end


--
--  "watch" code for Mission05OEM MissionFlow FSM
--
function Watch_Mission05OEM_MissionFlow(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE001[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	--kasJump("TransIn")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_TransIn", "Watch_Mission05OEM_MissionFlow")
	Init_Mission05OEM_MissionFlow_TransIn(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow Intro state
--
function Init_Mission05OEM_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60512", 3)    --kasfSpeechEvent((512 + 2048 + 268435456), 0)
	KASTimer_Start(FuckTimer[TeamName], 4)
	
end


--
--  "watch" code for Mission05OEM MissionFlow Intro state
--
function Watch_Mission05OEM_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE002[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	--kasJump("TechAvailable")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Intro")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_TechAvailable", "Watch_Mission05OEM_MissionFlow_Intro")
	Init_Mission05OEM_MissionFlow_TechAvailable(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow TechAvailable state
--
function Init_Mission05OEM_MissionFlow_TechAvailable(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (G_WeGetPlaz == 1) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60519", 3)    --kasfSpeechEvent((519 + 4096 + 268435456), 0)
	elseif (G_WeGetIonz == 1) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60518", 3)    --kasfSpeechEvent((518 + 4096 + 268435456), 0)
	end
	KASTimer_Start(FuckTimer[TeamName], 7)
	
end


--
--  "watch" code for Mission05OEM MissionFlow TechAvailable state
--
function Watch_Mission05OEM_MissionFlow_TechAvailable(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_TechAvailable")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_Done", "Watch_Mission05OEM_MissionFlow_TechAvailable")
	Init_Mission05OEM_MissionFlow_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow TransIn state
--
function Init_Mission05OEM_MissionFlow_TransIn(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("OpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_OpenSensors", "Init_Mission05OEM_MissionFlow_TransIn")
	Init_Mission05OEM_MissionFlow_OpenSensors(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM MissionFlow TransIn state
--
function Watch_Mission05OEM_MissionFlow_TransIn(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	
end


--
--  "initialize" code for Mission05OEM MissionFlow OpenSensors state
--
function Init_Mission05OEM_MissionFlow_OpenSensors(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 2)
	
end


--
--  "watch" code for Mission05OEM MissionFlow OpenSensors state
--
function Watch_Mission05OEM_MissionFlow_OpenSensors(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE003[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIPlanetoid")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_OpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_FIPlanetoid", "Watch_Mission05OEM_MissionFlow_OpenSensors")
	Init_Mission05OEM_MissionFlow_FIPlanetoid(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow FIPlanetoid state
--
function Init_Mission05OEM_MissionFlow_FIPlanetoid(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62809", 3)    --kasfSpeechEvent((809 + 4096 + 268435456), 0)
	KASTimer_Start(FuckTimer[TeamName], 1)
	
end


--
--  "watch" code for Mission05OEM MissionFlow FIPlanetoid state
--
function Watch_Mission05OEM_MissionFlow_FIPlanetoid(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	--kasJump("FIPlanetoidPointer")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_FIPlanetoid")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_FIPlanetoidPointer", "Watch_Mission05OEM_MissionFlow_FIPlanetoid")
	Init_Mission05OEM_MissionFlow_FIPlanetoidPointer(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow FIPlanetoidPointer state
--
function Init_Mission05OEM_MissionFlow_FIPlanetoidPointer(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	
end


--
--  "watch" code for Mission05OEM MissionFlow FIPlanetoidPointer state
--
function Watch_Mission05OEM_MissionFlow_FIPlanetoidPointer(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_MessageSendToAll(TeamName, "ComeOnDown")    --kasfMsgSendAll("ComeOnDown")
	--kasJump("FITuranicFleet")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_FIPlanetoidPointer")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_FITuranicFleet", "Watch_Mission05OEM_MissionFlow_FIPlanetoidPointer")
	Init_Mission05OEM_MissionFlow_FITuranicFleet(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow FITuranicFleet state
--
function Init_Mission05OEM_MissionFlow_FITuranicFleet(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62810", 3)    --kasfSpeechEvent((810 + 4096 + 268435456), 0)
	KASTimer_Start(FuckTimer[TeamName], 1)
	
end


--
--  "watch" code for Mission05OEM MissionFlow FITuranicFleet state
--
function Watch_Mission05OEM_MissionFlow_FITuranicFleet(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	--kasJump("FITuranicFleetPointer")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_FITuranicFleet")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_FITuranicFleetPointer", "Watch_Mission05OEM_MissionFlow_FITuranicFleet")
	Init_Mission05OEM_MissionFlow_FITuranicFleetPointer(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow FITuranicFleetPointer state
--
function Init_Mission05OEM_MissionFlow_FITuranicFleetPointer(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_CarrierPOINTER1 = KASPointer_AddShip("TuranicCarrier1")    --kasfTutSetPointerTargetShip("CarrierPOINTER1", kasAITeamShipsPtr("TuranicCarrier1"))
	PointerID_CarrierPOINTER2 = KASPointer_AddShip("TuranicCarrier2")    --kasfTutSetPointerTargetShip("CarrierPOINTER2", kasAITeamShipsPtr("TuranicCarrier2"))
	PointerID_FrigPOINTER1 = KASPointer_AddShip("TuranicFrigs1")    --kasfTutSetPointerTargetShip("FrigPOINTER1", kasAITeamShipsPtr("TuranicFrigs1"))
	PointerID_FrigPOINTER2 = KASPointer_AddShip("TuranicFrigs2")    --kasfTutSetPointerTargetShip("FrigPOINTER2", kasAITeamShipsPtr("TuranicFrigs2"))
	KAS_PingAddShips("TuranicCarrier1", "TuranicCarrier1PING", "$62823")
	KAS_PingAddShips("TuranicCarrier2", "TuranicCarrier2PING", "$62823")
end


--
--  "watch" code for Mission05OEM MissionFlow FITuranicFleetPointer state
--
function Watch_Mission05OEM_MissionFlow_FITuranicFleetPointer(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FIDestroyBadGuys")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_FITuranicFleetPointer")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_FIDestroyBadGuys", "Watch_Mission05OEM_MissionFlow_FITuranicFleetPointer")
	Init_Mission05OEM_MissionFlow_FIDestroyBadGuys(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow FIDestroyBadGuys state
--
function Init_Mission05OEM_MissionFlow_FIDestroyBadGuys(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62811", 3)    --kasfSpeechEvent((811 + 4096 + 268435456), 0)
	KASObjective_Add(ObjectiveID_DestroyEnemyCarriers, "$62252", OT_Primary)    --kasfObjectiveCreate("DestroyEnemyCarriers", LSTRING_Objective1[strCurLanguage], LSTRING_Objective1[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyEnemyCarriers, "$62816")
    KAS_PingAddPoint("LoosePoint", "LoosePointPING", "$62824")
	
end


--
--  "watch" code for Mission05OEM MissionFlow FIDestroyBadGuys state
--
function Watch_Mission05OEM_MissionFlow_FIDestroyBadGuys(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_FIDestroyBadGuys")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_AlmostDone", "Watch_Mission05OEM_MissionFlow_FIDestroyBadGuys")
	Init_Mission05OEM_MissionFlow_AlmostDone(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow StartNIS state
--
function Init_Mission05OEM_MissionFlow_StartNIS(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 2)    --kasfWideScreenIn(60)
	KASTimer_Start(FakeNISTimer[TeamName], 2)
	
end


--
--  "watch" code for Mission05OEM MissionFlow StartNIS state
--
function Watch_Mission05OEM_MissionFlow_StartNIS(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FakeNISTimer[TeamName]) ~= 0) then
	
	ignoredFunction()    --kasfSoundEvent(262)

    --make the other carriers visible too
	KAS_FocusShipsAndNearby("TuranicCarrier2", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier1"))

	KAS_FocusShipsAndNearby("TuranicCarrier1", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier1"))
	KAS_FocusShipsAndNearby("TuranicCarrier1", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier1"))
	KAS_MessageSendToAll(TeamName, "LaunchYourFighters")    --kasfMsgSendAll("LaunchYourFighters")
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62812", 3)    --kasfSpeechEvent((812 + 4096 + 268435456), 0)
	KASTimer_Start(FakeNISTimer[TeamName], 15)
	--kasJump("WaitForFightersLaunched")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_StartNIS")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_WaitForFightersLaunched", "Watch_Mission05OEM_MissionFlow_StartNIS")
	Init_Mission05OEM_MissionFlow_WaitForFightersLaunched(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow WaitForFightersLaunched state
--
function Init_Mission05OEM_MissionFlow_WaitForFightersLaunched(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_MessageSendToAll(TeamName, "LaunchMoreFighters")    --kasfMsgSendAll("LaunchMoreFighters")
	
end


--
--  "watch" code for Mission05OEM MissionFlow WaitForFightersLaunched state
--
function Watch_Mission05OEM_MissionFlow_WaitForFightersLaunched(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FakeNISTimer[TeamName]) ~= 0) then
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_SetLetterboxState(0, 1.5)    --kasfWideScreenOut(45)
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_WaitForFightersLaunched")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_Done", "Watch_Mission05OEM_MissionFlow_WaitForFightersLaunched")
	Init_Mission05OEM_MissionFlow_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow YouLoose state
--
function Init_Mission05OEM_MissionFlow_YouLoose(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_FindShipsNearPoint("GrowSelection_WinnerShips", "LoosePoint", 450)    --kasfFindShipsNearPoint(kasGrowSelectionPtr("WinnerShips"), kasVectorPtr("LoosePoint"), 1000)
	if ((SobGroup_Count("GrowSelection_WinnerShips")) > (SobGroup_FillSubtract("GrowSelection_WinnerShips", "GrowSelection_WinnerShips", "TuranicCarrier1"))) then     --kasfShipsCount(kasGrowSelectionPtr("WinnerShips"))    --kasfShipsRemove(kasGrowSelectionPtr("WinnerShips"), kasAITeamShipsPtr("TuranicCarrier1"))
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShipsAndNearby("TuranicCarrier1", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier1"))
	KAS_FocusShipsAndNearby("TuranicCarrier1", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier1"))
	else
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShipsAndNearby("TuranicCarrier2", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier2"))
	KAS_FocusShipsAndNearby("TuranicCarrier2", 2000)    --kasfTutCameraFocus(kasAITeamShipsPtr("TuranicCarrier2"))
	end
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62813", 3)    --kasfSpeechEvent((813 + 4096 + 268435456), 0)
	
end


--
--  "watch" code for Mission05OEM MissionFlow YouLoose state
--
function Watch_Mission05OEM_MissionFlow_YouLoose(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_MissionFailed()    --kasfMissionFailed()
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow YoullGetYours state
--
function Init_Mission05OEM_MissionFlow_YoullGetYours(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KASTimer_Start(GettingYoursTimer[TeamName], 4)
	
end


--
--  "watch" code for Mission05OEM MissionFlow YoullGetYours state
--
function Watch_Mission05OEM_MissionFlow_YoullGetYours(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(GettingYoursTimer[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(2, 1.5)    --kasfWideScreenIn(45)
	--kasJump("DontGoThere")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_YoullGetYours")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_DontGoThere", "Watch_Mission05OEM_MissionFlow_YoullGetYours")
	Init_Mission05OEM_MissionFlow_DontGoThere(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow DontGoThere state
--
function Init_Mission05OEM_MissionFlow_DontGoThere(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62814", 3)    --kasfSpeechEvent((814 + 4096 + 268435456), 0)
	KASTimer_Start(FuckTimer[TeamName], 1)
	
end


--
--  "watch" code for Mission05OEM MissionFlow DontGoThere state
--
function Watch_Mission05OEM_MissionFlow_DontGoThere(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	--kasJump("DontGoHere")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_DontGoThere")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_DontGoHere", "Watch_Mission05OEM_MissionFlow_DontGoThere")
	Init_Mission05OEM_MissionFlow_DontGoHere(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow DontGoHere state
--
function Init_Mission05OEM_MissionFlow_DontGoHere(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_DefensePOINTER = KASPointer_AddVolume("DefenceRange")    --kasfTutSetPointerTargetAIVolume("DefensePOINTER", kasVolumePtr("DefenceRange"))
	KASTimer_Start(FuckTimer[TeamName], 9)
	
end


--
--  "watch" code for Mission05OEM MissionFlow DontGoHere state
--
function Watch_Mission05OEM_MissionFlow_DontGoHere(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_DontGoHere")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_AlmostDone", "Watch_Mission05OEM_MissionFlow_DontGoHere")
	Init_Mission05OEM_MissionFlow_AlmostDone(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow ItsOverBetweenUs state
--
function Init_Mission05OEM_MissionFlow_ItsOverBetweenUs(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FuckTimer[TeamName], 6)
	
end


--
--  "watch" code for Mission05OEM MissionFlow ItsOverBetweenUs state
--
function Watch_Mission05OEM_MissionFlow_ItsOverBetweenUs(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then
	
	--kasJump("IllMissYou")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_ItsOverBetweenUs")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_IllMissYou", "Watch_Mission05OEM_MissionFlow_ItsOverBetweenUs")
	Init_Mission05OEM_MissionFlow_IllMissYou(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM MissionFlow IllMissYou state
--
function Init_Mission05OEM_MissionFlow_IllMissYou(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$62815", 3)    --kasfSpeechEvent((815 + 4096 + 268435456), 0)
	
end


--
--  "watch" code for Mission05OEM MissionFlow IllMissYou state
--
function Watch_Mission05OEM_MissionFlow_IllMissYou(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	
end


--
--  "initialize" code for Mission05OEM MissionFlow AlmostDone state
--
function Init_Mission05OEM_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	--kasJump("Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_Done", "Init_Mission05OEM_MissionFlow_AlmostDone")
	Init_Mission05OEM_MissionFlow_Done(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM MissionFlow AlmostDone state
--
function Watch_Mission05OEM_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	
end


--
--  "initialize" code for Mission05OEM MissionFlow Done state
--
function Init_Mission05OEM_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	
end


--
--  "watch" code for Mission05OEM MissionFlow Done state
--
function Watch_Mission05OEM_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission05OEM_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE004[TeamName] == 0 and (G_WeGetPlaz ~= 0 or G_WeGetIonz ~= 0)) then  -- "ifonce" #4
	
	_VIFONCE004[TeamName] = 1 --created,set;
	--kasJump("TechAvailable")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_TechAvailable", "Watch_Mission05OEM_MissionFlow_Done")
	Init_Mission05OEM_MissionFlow_TechAvailable(TeamName)
	return
	end
	if (_VIFONCE005[TeamName] == 0 and (KAS_MessageReceived(TeamName, "PlayFakeNIS") ~= 0)) then  -- "ifonce" #5    --kasfMsgReceived("PlayFakeNIS")
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("StartNIS")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_StartNIS", "Watch_Mission05OEM_MissionFlow_Done")
	Init_Mission05OEM_MissionFlow_StartNIS(TeamName)
	return
	end
	if (_VIFONCE006[TeamName] == 0 and (KAS_MessageReceived(TeamName, "MusicIsaWorldWithinItself") ~= 0)) then  -- "ifonce" #6    --kasfMsgReceived("MusicIsaWorldWithinItself")
	
	_VIFONCE006[TeamName] = 1 --created,set;
	KAS_MusicPlayType("data:sound/music/battle/B01_TuranicRaidersLong", MUS_Ambient)    --kasfMusicPlay(12)
	end
	if (_VIFONCE007[TeamName] == 0 and (KAS_MessageReceived(TeamName, "WeMadeItHere") ~= 0)) then  -- "ifonce" #7    --kasfMsgReceived("WeMadeItHere")
	
	_VIFONCE007[TeamName] = 1 --created,set;
	--kasJump("YouLoose")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_YouLoose", "Watch_Mission05OEM_MissionFlow_Done")
	Init_Mission05OEM_MissionFlow_YouLoose(TeamName)
	return
	end
	if (_VIFONCE008[TeamName] == 0 and (KAS_FindEnemiesInside("DefenceRange", "GrowSelection_YoullGetYours") ~= 0)) then  -- "ifonce" #8    --kasfFindEnemiesInside(kasVolumePtr("DefenceRange"), kasGrowSelectionPtr("YoullGetYours"), 1000)
	
	_VIFONCE008[TeamName] = 1 --created,set;
	--kasJump("YoullGetYours")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_YoullGetYours", "Watch_Mission05OEM_MissionFlow_Done")
	Init_Mission05OEM_MissionFlow_YoullGetYours(TeamName)
	return
	end
	if (_VIFONCE009[TeamName] == 0 and (G_ByeByeLove == 1)) then  -- "ifonce" #9
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("ItsOverBetweenUs")
	--KASRule_Remove("FSM_Mission05OEM_MissionFlow", "Watch_Mission05OEM_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission05OEM_MissionFlow_ItsOverBetweenUs", "Watch_Mission05OEM_MissionFlow_Done")
	Init_Mission05OEM_MissionFlow_ItsOverBetweenUs(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs1 FSM
--
function Init_Mission05OEM_TuranicFrigs1(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs1_Wait", "Init_Mission05OEM_TuranicFrigs1")
	Init_Mission05OEM_TuranicFrigs1_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs1 FSM
--
function Watch_Mission05OEM_TuranicFrigs1(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	if (_VIFONCE010[TeamName] == 0 and (SobGroup_Count("TuranicCarrier1") < 1)) then  -- "ifonce" #10    --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier1"))
	
	_VIFONCE010[TeamName] = 1 --created,set;
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs1", "Watch_Mission05OEM_TuranicFrigs1")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs1_Done", "Watch_Mission05OEM_TuranicFrigs1")
	Init_Mission05OEM_TuranicFrigs1_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs1 Wait state
--
function Init_Mission05OEM_TuranicFrigs1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs1 Wait state
--
function Watch_Mission05OEM_TuranicFrigs1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	if (_VIFONCE011[TeamName] == 0 and (KAS_MessageReceived(TeamName, "ComeOnDown") ~= 0)) then  -- "ifonce" #11    --kasfMsgReceived("ComeOnDown")
	
	_VIFONCE011[TeamName] = 1 --created,set;
	KAS_TeamHyperspaceIn(TeamName, "Frig1In")    --kasfTeamHyperspaceIn(kasVectorPtr("Frig1In"))
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs1", "Watch_Mission05OEM_TuranicFrigs1_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs1_Guard", "Watch_Mission05OEM_TuranicFrigs1_Wait")
	Init_Mission05OEM_TuranicFrigs1_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs1 Guard state
--
function Init_Mission05OEM_TuranicFrigs1_Guard(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier1")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier1"))
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs1 Guard state
--
function Watch_Mission05OEM_TuranicFrigs1_Guard(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	if ((KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemFrig1") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearFrig1", 1750) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearFrig1"), 5000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemFrig1"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs1", "Watch_Mission05OEM_TuranicFrigs1_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs1_Attack", "Watch_Mission05OEM_TuranicFrigs1_Guard")
	Init_Mission05OEM_TuranicFrigs1_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs1 Attack state
--
function Init_Mission05OEM_TuranicFrigs1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	if (_VIFONCE012[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #12
	
	_VIFONCE012[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs1 Attack state
--
function Watch_Mission05OEM_TuranicFrigs1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemFrig1")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemFrig1"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearFrig1", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearFrig1"), 10000)
	KAS_FillShipsByType_Normal("GrowSelection_NastyCaps1", "GrowSelection_NearFrig1", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("NastyCaps1"), kasGrowSelectionPtr("NearFrig1"), "SalCapCorvette")
	KAS_FillShipsByCapital("GrowSelection_CapsVictemFrig1", "GrowSelection_VictemFrig1")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsVictemFrig1"), kasGrowSelectionPtr("VictemFrig1"))
	KAS_FillShipsByCapital("GrowSelection_CapsNearFrig1", "GrowSelection_NearFrig1")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsNearFrig1"), kasGrowSelectionPtr("NearFrig1"))
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxCapsVictemFrig1", "GrowSelection_CapsVictemFrig1", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxCapsVictemFrig1"), kasGrowSelectionPtr("CapsVictemFrig1"), 0)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxCapsNearFrig1", "GrowSelection_CapsNearFrig1", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxCapsNearFrig1"), kasGrowSelectionPtr("CapsNearFrig1"), 0)
	if (SobGroup_Count("GrowSelection_NastyCaps1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NastyCaps1"))
	
	KAS_Attack(TeamName, "GrowSelection_NastyCaps1")    --kasfAttack(kasGrowSelectionPtr("NastyCaps1"))
	elseif (SobGroup_Count("GrowSelection_CapsVictemFrig1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsVictemFrig1"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	KAS_Attack(TeamName, "GrowSelection_IndxCapsVictemFrig1")    --kasfAttack(kasGrowSelectionPtr("IndxCapsVictemFrig1"))
	elseif (SobGroup_Count("GrowSelection_CapsNearFrig1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsNearFrig1"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	KAS_Attack(TeamName, "GrowSelection_IndxCapsNearFrig1")    --kasfAttack(kasGrowSelectionPtr("IndxCapsNearFrig1"))
	elseif (SobGroup_Count("GrowSelection_NearFrig1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearFrig1"))
	
	KAS_Attack(TeamName, "GrowSelection_NearFrig1")    --kasfAttack(kasGrowSelectionPtr("NearFrig1"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs1", "Watch_Mission05OEM_TuranicFrigs1_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs1_Guard", "Watch_Mission05OEM_TuranicFrigs1_Attack")
	Init_Mission05OEM_TuranicFrigs1_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs1 Done state
--
function Init_Mission05OEM_TuranicFrigs1_Done(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	ignoredFunction()    --kasfReinforce(kasAITeamPtr("TuranicFrigs2"))
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs1 Done state
--
function Watch_Mission05OEM_TuranicFrigs1_Done(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs1
	--TeamName = TuranicFrigs1
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs2 FSM
--
function Init_Mission05OEM_TuranicFrigs2(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs2_Wait", "Init_Mission05OEM_TuranicFrigs2")
	Init_Mission05OEM_TuranicFrigs2_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs2 FSM
--
function Watch_Mission05OEM_TuranicFrigs2(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	if (_VIFONCE013[TeamName] == 0 and (SobGroup_Count("TuranicCarrier2") < 1)) then  -- "ifonce" #13    --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier2"))
	
	_VIFONCE013[TeamName] = 1 --created,set;
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs2", "Watch_Mission05OEM_TuranicFrigs2")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs2_Done", "Watch_Mission05OEM_TuranicFrigs2")
	Init_Mission05OEM_TuranicFrigs2_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs2 Wait state
--
function Init_Mission05OEM_TuranicFrigs2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs2 Wait state
--
function Watch_Mission05OEM_TuranicFrigs2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	if (_VIFONCE014[TeamName] == 0 and (KAS_MessageReceived(TeamName, "ComeOnDown") ~= 0)) then  -- "ifonce" #14    --kasfMsgReceived("ComeOnDown")
	
	_VIFONCE014[TeamName] = 1 --created,set;
	KAS_TeamHyperspaceIn(TeamName, "Frig2In")    --kasfTeamHyperspaceIn(kasVectorPtr("Frig2In"))
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs2", "Watch_Mission05OEM_TuranicFrigs2_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs2_Guard", "Watch_Mission05OEM_TuranicFrigs2_Wait")
	Init_Mission05OEM_TuranicFrigs2_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs2 Guard state
--
function Init_Mission05OEM_TuranicFrigs2_Guard(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier2")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier2"))
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs2 Guard state
--
function Watch_Mission05OEM_TuranicFrigs2_Guard(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	if ((KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemFrig2") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearFrig2", 1750) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearFrig2"), 5000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemFrig2"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs2", "Watch_Mission05OEM_TuranicFrigs2_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs2_Attack", "Watch_Mission05OEM_TuranicFrigs2_Guard")
	Init_Mission05OEM_TuranicFrigs2_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs2 Attack state
--
function Init_Mission05OEM_TuranicFrigs2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	if (_VIFONCE015[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #15
	
	_VIFONCE015[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs2 Attack state
--
function Watch_Mission05OEM_TuranicFrigs2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemFrig2")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemFrig2"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearFrig2", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearFrig2"), 10000)
	KAS_FillShipsByType_Normal("GrowSelection_NastyCaps2", "GrowSelection_NearFrig2", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("NastyCaps2"), kasGrowSelectionPtr("NearFrig2"), "SalCapCorvette")
	KAS_FillShipsByCapital("GrowSelection_CapsVictemFrig2", "GrowSelection_VictemFrig2")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsVictemFrig2"), kasGrowSelectionPtr("VictemFrig2"))
	KAS_FillShipsByCapital("GrowSelection_CapsNearFrig2", "GrowSelection_NearFrig2")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsNearFrig2"), kasGrowSelectionPtr("NearFrig2"))
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxCapsVictemFrig2", "GrowSelection_CapsVictemFrig2", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxCapsVictemFrig2"), kasGrowSelectionPtr("CapsVictemFrig2"), 0)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxCapsNearFrig2", "GrowSelection_CapsNearFrig2", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxCapsNearFrig2"), kasGrowSelectionPtr("CapsNearFrig2"), 0)
	if (SobGroup_Count("GrowSelection_NastyCaps2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NastyCaps2"))
	
	KAS_Attack(TeamName, "GrowSelection_NastyCaps2")    --kasfAttack(kasGrowSelectionPtr("NastyCaps2"))
	elseif (SobGroup_Count("GrowSelection_CapsVictemFrig2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsVictemFrig2"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	KAS_Attack(TeamName, "GrowSelection_IndxCapsVictemFrig2")    --kasfAttack(kasGrowSelectionPtr("IndxCapsVictemFrig2"))
	elseif (SobGroup_Count("GrowSelection_CapsNearFrig2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsNearFrig2"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	KAS_Attack(TeamName, "GrowSelection_IndxCapsNearFrig2")    --kasfAttack(kasGrowSelectionPtr("IndxCapsNearFrig2"))
	elseif (SobGroup_Count("GrowSelection_NearFrig2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearFrig2"))
	
	KAS_Attack(TeamName, "GrowSelection_NearFrig2")    --kasfAttack(kasGrowSelectionPtr("NearFrig2"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_TuranicFrigs2", "Watch_Mission05OEM_TuranicFrigs2_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicFrigs2_Guard", "Watch_Mission05OEM_TuranicFrigs2_Attack")
	Init_Mission05OEM_TuranicFrigs2_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicFrigs2 Done state
--
function Init_Mission05OEM_TuranicFrigs2_Done(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	ignoredFunction()    --kasfReinforce(kasAITeamPtr("TuranicFrigs1"))
	
end


--
--  "watch" code for Mission05OEM TuranicFrigs2 Done state
--
function Watch_Mission05OEM_TuranicFrigs2_Done(TeamName)
	--FSM: FSM_Mission05OEM_TuranicFrigs2
	--TeamName = TuranicFrigs2
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1a FSM
--
function Init_Mission05OEM_ProtFightersC1a(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier1")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier1"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1a_Wait", "Init_Mission05OEM_ProtFightersC1a")
	Init_Mission05OEM_ProtFightersC1a_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1a FSM
--
function Watch_Mission05OEM_ProtFightersC1a(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	if (SobGroup_Count("TuranicCarrier1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier1"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1a Wait state
--
function Init_Mission05OEM_ProtFightersC1a_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1a Wait state
--
function Watch_Mission05OEM_ProtFightersC1a_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	if (_VIFONCE016[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #16    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE016[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1a", "Watch_Mission05OEM_ProtFightersC1a_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1a_Launching", "Watch_Mission05OEM_ProtFightersC1a_Wait")
	Init_Mission05OEM_ProtFightersC1a_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1a Launching state
--
function Init_Mission05OEM_ProtFightersC1a_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1a Launching state
--
function Watch_Mission05OEM_ProtFightersC1a_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1a", "Watch_Mission05OEM_ProtFightersC1a_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1a_Guard", "Watch_Mission05OEM_ProtFightersC1a_Launching")
	Init_Mission05OEM_ProtFightersC1a_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1a Guard state
--
function Init_Mission05OEM_ProtFightersC1a_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	SobGroup_Clear("GrowSelection_VictemProtFightersC1a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtFightersC1a"))
	SobGroup_Clear("GrowSelection_NearProtFightersC1a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtFightersC1a"))
	SobGroup_Clear("GrowSelection_DamVictemProtFightersC1a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamVictemProtFightersC1a"))
	SobGroup_Clear("GrowSelection_DamNearProtFightersC1a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamNearProtFightersC1a"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier1")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier1"))
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1a Guard state
--
function Watch_Mission05OEM_ProtFightersC1a_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	if ((KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtFightersC1a") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC1a", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC1a"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtFightersC1a"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1a", "Watch_Mission05OEM_ProtFightersC1a_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1a_Attack", "Watch_Mission05OEM_ProtFightersC1a_Guard")
	Init_Mission05OEM_ProtFightersC1a_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1a Attack state
--
function Init_Mission05OEM_ProtFightersC1a_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	if (_VIFONCE017[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #17
	
	_VIFONCE017[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1a Attack state
--
function Watch_Mission05OEM_ProtFightersC1a_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1a
	--TeamName = ProtFightersC1a
	KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtFightersC1a")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtFightersC1a"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC1a", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC1a"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemProtFightersC1a", "GrowSelection_VictemProtFightersC1a", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemProtFightersC1a"), kasGrowSelectionPtr("VictemProtFightersC1a"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamNearProtFightersC1a", "GrowSelection_NearProtFightersC1a", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamNearProtFightersC1a"), kasGrowSelectionPtr("NearProtFightersC1a"), 99)
	if (SobGroup_Count("GrowSelection_DamVictemProtFightersC1a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemProtFightersC1a"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemProtFightersC1a")    --kasfAttack(kasGrowSelectionPtr("DamVictemProtFightersC1a"))
	elseif (SobGroup_Count("GrowSelection_VictemProtFightersC1a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtFightersC1a"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtFightersC1a")    --kasfAttack(kasGrowSelectionPtr("VictemProtFightersC1a"))
	elseif (SobGroup_Count("GrowSelection_DamNearProtFightersC1a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamNearProtFightersC1a"))
	
	KAS_Attack(TeamName, "GrowSelection_DamNearProtFightersC1a")    --kasfAttack(kasGrowSelectionPtr("DamNearProtFightersC1a"))
	elseif (SobGroup_Count("GrowSelection_NearProtFightersC1a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtFightersC1a"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtFightersC1a")    --kasfAttack(kasGrowSelectionPtr("NearProtFightersC1a"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1a", "Watch_Mission05OEM_ProtFightersC1a_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1a_Guard", "Watch_Mission05OEM_ProtFightersC1a_Attack")
	Init_Mission05OEM_ProtFightersC1a_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1b FSM
--
function Init_Mission05OEM_ProtFightersC1b(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier1")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier1"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1b_Wait", "Init_Mission05OEM_ProtFightersC1b")
	Init_Mission05OEM_ProtFightersC1b_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1b FSM
--
function Watch_Mission05OEM_ProtFightersC1b(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	if (SobGroup_Count("TuranicCarrier1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier1"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1b Wait state
--
function Init_Mission05OEM_ProtFightersC1b_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1b Wait state
--
function Watch_Mission05OEM_ProtFightersC1b_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	if (_VIFONCE018[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #18    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE018[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1b", "Watch_Mission05OEM_ProtFightersC1b_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1b_Launching", "Watch_Mission05OEM_ProtFightersC1b_Wait")
	Init_Mission05OEM_ProtFightersC1b_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1b Launching state
--
function Init_Mission05OEM_ProtFightersC1b_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1b Launching state
--
function Watch_Mission05OEM_ProtFightersC1b_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1b", "Watch_Mission05OEM_ProtFightersC1b_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1b_Guard", "Watch_Mission05OEM_ProtFightersC1b_Launching")
	Init_Mission05OEM_ProtFightersC1b_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1b Guard state
--
function Init_Mission05OEM_ProtFightersC1b_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	SobGroup_Clear("GrowSelection_VictemProtFightersC1b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtFightersC1b"))
	SobGroup_Clear("GrowSelection_NearProtFightersC1b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtFightersC1b"))
	SobGroup_Clear("GrowSelection_DamVictemProtFightersC1b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamVictemProtFightersC1b"))
	SobGroup_Clear("GrowSelection_DamNearProtFightersC1b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamNearProtFightersC1b"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier1")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier1"))
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1b Guard state
--
function Watch_Mission05OEM_ProtFightersC1b_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	if ((KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtFightersC1b") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC1b", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC1b"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtFightersC1b"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1b", "Watch_Mission05OEM_ProtFightersC1b_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1b_Attack", "Watch_Mission05OEM_ProtFightersC1b_Guard")
	Init_Mission05OEM_ProtFightersC1b_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC1b Attack state
--
function Init_Mission05OEM_ProtFightersC1b_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	if (_VIFONCE019[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #19
	
	_VIFONCE019[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtFightersC1b Attack state
--
function Watch_Mission05OEM_ProtFightersC1b_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC1b
	--TeamName = ProtFightersC1b
	KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtFightersC1b")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtFightersC1b"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC1b", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC1b"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemProtFightersC1b", "GrowSelection_VictemProtFightersC1b", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemProtFightersC1b"), kasGrowSelectionPtr("VictemProtFightersC1b"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamNearProtFightersC1b", "GrowSelection_NearProtFightersC1b", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamNearProtFightersC1b"), kasGrowSelectionPtr("NearProtFightersC1b"), 99)
	if (SobGroup_Count("GrowSelection_DamVictemProtFightersC1b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemProtFightersC1b"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemProtFightersC1b")    --kasfAttack(kasGrowSelectionPtr("DamVictemProtFightersC1b"))
	elseif (SobGroup_Count("GrowSelection_VictemProtFightersC1b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtFightersC1b"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtFightersC1b")    --kasfAttack(kasGrowSelectionPtr("VictemProtFightersC1b"))
	elseif (SobGroup_Count("GrowSelection_DamNearProtFightersC1b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamNearProtFightersC1b"))
	
	KAS_Attack(TeamName, "GrowSelection_DamNearProtFightersC1b")    --kasfAttack(kasGrowSelectionPtr("DamNearProtFightersC1b"))
	elseif (SobGroup_Count("GrowSelection_NearProtFightersC1b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtFightersC1b"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtFightersC1b")    --kasfAttack(kasGrowSelectionPtr("NearProtFightersC1b"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC1b", "Watch_Mission05OEM_ProtFightersC1b_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC1b_Guard", "Watch_Mission05OEM_ProtFightersC1b_Attack")
	Init_Mission05OEM_ProtFightersC1b_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2a FSM
--
function Init_Mission05OEM_ProtFightersC2a(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier2")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier2"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2a_Wait", "Init_Mission05OEM_ProtFightersC2a")
	Init_Mission05OEM_ProtFightersC2a_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2a FSM
--
function Watch_Mission05OEM_ProtFightersC2a(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	if (SobGroup_Count("TuranicCarrier2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier2"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2a Wait state
--
function Init_Mission05OEM_ProtFightersC2a_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2a Wait state
--
function Watch_Mission05OEM_ProtFightersC2a_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	if (_VIFONCE020[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #20    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE020[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2a", "Watch_Mission05OEM_ProtFightersC2a_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2a_Launching", "Watch_Mission05OEM_ProtFightersC2a_Wait")
	Init_Mission05OEM_ProtFightersC2a_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2a Launching state
--
function Init_Mission05OEM_ProtFightersC2a_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2a Launching state
--
function Watch_Mission05OEM_ProtFightersC2a_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2a", "Watch_Mission05OEM_ProtFightersC2a_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2a_Guard", "Watch_Mission05OEM_ProtFightersC2a_Launching")
	Init_Mission05OEM_ProtFightersC2a_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2a Guard state
--
function Init_Mission05OEM_ProtFightersC2a_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	SobGroup_Clear("GrowSelection_VictemProtFightersC2a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtFightersC2a"))
	SobGroup_Clear("GrowSelection_NearProtFightersC2a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtFightersC2a"))
	SobGroup_Clear("GrowSelection_DamVictemProtFightersC2a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamVictemProtFightersC2a"))
	SobGroup_Clear("GrowSelection_DamNearProtFightersC2a")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamNearProtFightersC2a"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier2")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier2"))
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2a Guard state
--
function Watch_Mission05OEM_ProtFightersC2a_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	if ((KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtFightersC2a") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC2a", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC2a"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtFightersC2a"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2a", "Watch_Mission05OEM_ProtFightersC2a_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2a_Attack", "Watch_Mission05OEM_ProtFightersC2a_Guard")
	Init_Mission05OEM_ProtFightersC2a_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2a Attack state
--
function Init_Mission05OEM_ProtFightersC2a_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	if (_VIFONCE021[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #21
	
	_VIFONCE021[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2a Attack state
--
function Watch_Mission05OEM_ProtFightersC2a_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2a
	--TeamName = ProtFightersC2a
	KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtFightersC2a")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtFightersC2a"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC2a", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC2a"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemProtFightersC2a", "GrowSelection_VictemProtFightersC2a", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemProtFightersC2a"), kasGrowSelectionPtr("VictemProtFightersC2a"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamNearProtFightersC2a", "GrowSelection_NearProtFightersC2a", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamNearProtFightersC2a"), kasGrowSelectionPtr("NearProtFightersC2a"), 99)
	if (SobGroup_Count("GrowSelection_DamVictemProtFightersC2a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemProtFightersC2a"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemProtFightersC2a")    --kasfAttack(kasGrowSelectionPtr("DamVictemProtFightersC2a"))
	elseif (SobGroup_Count("GrowSelection_VictemProtFightersC2a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtFightersC2a"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtFightersC2a")    --kasfAttack(kasGrowSelectionPtr("VictemProtFightersC2a"))
	elseif (SobGroup_Count("GrowSelection_DamNearProtFightersC2a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamNearProtFightersC2a"))
	
	KAS_Attack(TeamName, "GrowSelection_DamNearProtFightersC2a")    --kasfAttack(kasGrowSelectionPtr("DamNearProtFightersC2a"))
	elseif (SobGroup_Count("GrowSelection_NearProtFightersC2a") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtFightersC2a"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtFightersC2a")    --kasfAttack(kasGrowSelectionPtr("NearProtFightersC2a"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2a", "Watch_Mission05OEM_ProtFightersC2a_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2a_Guard", "Watch_Mission05OEM_ProtFightersC2a_Attack")
	Init_Mission05OEM_ProtFightersC2a_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2b FSM
--
function Init_Mission05OEM_ProtFightersC2b(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier2")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier2"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2b_Wait", "Init_Mission05OEM_ProtFightersC2b")
	Init_Mission05OEM_ProtFightersC2b_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2b FSM
--
function Watch_Mission05OEM_ProtFightersC2b(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	if (SobGroup_Count("TuranicCarrier2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier2"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2b Wait state
--
function Init_Mission05OEM_ProtFightersC2b_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2b Wait state
--
function Watch_Mission05OEM_ProtFightersC2b_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	if (_VIFONCE022[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #22    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE022[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2b", "Watch_Mission05OEM_ProtFightersC2b_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2b_Launching", "Watch_Mission05OEM_ProtFightersC2b_Wait")
	Init_Mission05OEM_ProtFightersC2b_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2b Launching state
--
function Init_Mission05OEM_ProtFightersC2b_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2b Launching state
--
function Watch_Mission05OEM_ProtFightersC2b_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2b", "Watch_Mission05OEM_ProtFightersC2b_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2b_Guard", "Watch_Mission05OEM_ProtFightersC2b_Launching")
	Init_Mission05OEM_ProtFightersC2b_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2b Guard state
--
function Init_Mission05OEM_ProtFightersC2b_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	SobGroup_Clear("GrowSelection_VictemProtFightersC2b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtFightersC2b"))
	SobGroup_Clear("GrowSelection_NearProtFightersC2b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtFightersC2b"))
	SobGroup_Clear("GrowSelection_DamVictemProtFightersC2b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamVictemProtFightersC2b"))
	SobGroup_Clear("GrowSelection_DamNearProtFightersC2b")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamNearProtFightersC2b"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier2")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier2"))
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2b Guard state
--
function Watch_Mission05OEM_ProtFightersC2b_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	if ((KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtFightersC2b") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC2b", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC2b"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtFightersC2b"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2b", "Watch_Mission05OEM_ProtFightersC2b_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2b_Attack", "Watch_Mission05OEM_ProtFightersC2b_Guard")
	Init_Mission05OEM_ProtFightersC2b_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtFightersC2b Attack state
--
function Init_Mission05OEM_ProtFightersC2b_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	if (_VIFONCE023[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #23
	
	_VIFONCE023[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtFightersC2b Attack state
--
function Watch_Mission05OEM_ProtFightersC2b_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtFightersC2b
	--TeamName = ProtFightersC2b
	KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtFightersC2b")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtFightersC2b"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtFightersC2b", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtFightersC2b"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemProtFightersC2b", "GrowSelection_VictemProtFightersC2b", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemProtFightersC2b"), kasGrowSelectionPtr("VictemProtFightersC2b"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamNearProtFightersC2b", "GrowSelection_NearProtFightersC2b", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamNearProtFightersC2b"), kasGrowSelectionPtr("NearProtFightersC2b"), 99)
	if (SobGroup_Count("GrowSelection_DamVictemProtFightersC2b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemProtFightersC2b"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemProtFightersC2b")    --kasfAttack(kasGrowSelectionPtr("DamVictemProtFightersC2b"))
	elseif (SobGroup_Count("GrowSelection_VictemProtFightersC2b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtFightersC2b"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtFightersC2b")    --kasfAttack(kasGrowSelectionPtr("VictemProtFightersC2b"))
	elseif (SobGroup_Count("GrowSelection_DamNearProtFightersC2b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamNearProtFightersC2b"))
	
	KAS_Attack(TeamName, "GrowSelection_DamNearProtFightersC2b")    --kasfAttack(kasGrowSelectionPtr("DamNearProtFightersC2b"))
	elseif (SobGroup_Count("GrowSelection_NearProtFightersC2b") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtFightersC2b"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtFightersC2b")    --kasfAttack(kasGrowSelectionPtr("NearProtFightersC2b"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtFightersC2b", "Watch_Mission05OEM_ProtFightersC2b_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtFightersC2b_Guard", "Watch_Mission05OEM_ProtFightersC2b_Attack")
	Init_Mission05OEM_ProtFightersC2b_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC1 FSM
--
function Init_Mission05OEM_ProtCorvettesC1(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier1")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier1"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC1_Wait", "Init_Mission05OEM_ProtCorvettesC1")
	Init_Mission05OEM_ProtCorvettesC1_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC1 FSM
--
function Watch_Mission05OEM_ProtCorvettesC1(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	if (SobGroup_Count("TuranicCarrier1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier1"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC1 Wait state
--
function Init_Mission05OEM_ProtCorvettesC1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC1 Wait state
--
function Watch_Mission05OEM_ProtCorvettesC1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	if (_VIFONCE024[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #24    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE024[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC1", "Watch_Mission05OEM_ProtCorvettesC1_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC1_Launching", "Watch_Mission05OEM_ProtCorvettesC1_Wait")
	Init_Mission05OEM_ProtCorvettesC1_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC1 Launching state
--
function Init_Mission05OEM_ProtCorvettesC1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC1 Launching state
--
function Watch_Mission05OEM_ProtCorvettesC1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC1", "Watch_Mission05OEM_ProtCorvettesC1_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC1_Guard", "Watch_Mission05OEM_ProtCorvettesC1_Launching")
	Init_Mission05OEM_ProtCorvettesC1_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC1 Guard state
--
function Init_Mission05OEM_ProtCorvettesC1_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	SobGroup_Clear("GrowSelection_VictemProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtCorvC1"))
	SobGroup_Clear("GrowSelection_NearProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtCorvC1"))
	SobGroup_Clear("GrowSelection_StrkVictemProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkVictemProtCorvC1"))
	SobGroup_Clear("GrowSelection_StrkNearProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkNearProtCorvC1"))
	SobGroup_Clear("GrowSelection_DamStrkVictemProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamStrkVictemProtCorvC1"))
	SobGroup_Clear("GrowSelection_DamStrkNearProtCorvC1")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamStrkNearProtCorvC1"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier1")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier1"))
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC1 Guard state
--
function Watch_Mission05OEM_ProtCorvettesC1_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	if ((KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtCorvC1") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtCorvC1", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtCorvC1"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtCorvC1"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC1", "Watch_Mission05OEM_ProtCorvettesC1_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC1_Attack", "Watch_Mission05OEM_ProtCorvettesC1_Guard")
	Init_Mission05OEM_ProtCorvettesC1_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC1 Attack state
--
function Init_Mission05OEM_ProtCorvettesC1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	if (_VIFONCE025[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #25
	
	_VIFONCE025[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC1 Attack state
--
function Watch_Mission05OEM_ProtCorvettesC1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC1
	--TeamName = ProtCorvettesC1
	KAS_UnderAttack("TuranicCarrier1", "GrowSelection_VictemProtCorvC1")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier1"), kasGrowSelectionPtr("VictemProtCorvC1"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtCorvC1", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtCorvC1"), 10000)
	KAS_FillShipsByNonCapital("GrowSelection_StrkVictemProtCorvC1", "GrowSelection_VictemProtCorvC1")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkVictemProtCorvC1"), kasGrowSelectionPtr("VictemProtCorvC1"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkNearProtCorvC1", "GrowSelection_NearProtCorvC1")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkNearProtCorvC1"), kasGrowSelectionPtr("NearProtCorvC1"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkVictemProtCorvC1", "GrowSelection_StrkVictemProtCorvC1", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkVictemProtCorvC1"), kasGrowSelectionPtr("StrkVictemProtCorvC1"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkNearProtCorvC1", "GrowSelection_StrkNearProtCorvC1", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkNearProtCorvC1"), kasGrowSelectionPtr("StrkNearProtCorvC1"), 99)
	if (SobGroup_Count("GrowSelection_DamStrkVictemProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkVictemProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkVictemProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("DamStrkVictemProtCorvC1"))
	elseif (SobGroup_Count("GrowSelection_DamStrkNearProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkNearProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkNearProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("DamStrkNearProtCorvC1"))
	elseif (SobGroup_Count("GrowSelection_StrkVictemProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkVictemProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkVictemProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("StrkVictemProtCorvC1"))
	elseif (SobGroup_Count("GrowSelection_StrkNearProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkNearProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkNearProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("StrkNearProtCorvC1"))
	elseif (SobGroup_Count("GrowSelection_VictemProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("VictemProtCorvC1"))
	elseif (SobGroup_Count("GrowSelection_NearProtCorvC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtCorvC1"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtCorvC1")    --kasfAttack(kasGrowSelectionPtr("NearProtCorvC1"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC1", "Watch_Mission05OEM_ProtCorvettesC1_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC1_Guard", "Watch_Mission05OEM_ProtCorvettesC1_Attack")
	Init_Mission05OEM_ProtCorvettesC1_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC2 FSM
--
function Init_Mission05OEM_ProtCorvettesC2(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier2")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier2"))
	requested[TeamName] = 0 --created,set
	needed[TeamName] = 0 --created,set
	newships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC2_Wait", "Init_Mission05OEM_ProtCorvettesC2")
	Init_Mission05OEM_ProtCorvettesC2_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC2 FSM
--
function Watch_Mission05OEM_ProtCorvettesC2(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	if (SobGroup_Count("TuranicCarrier2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier2"))
	
	if (SobGroup_Count(TeamName) + requested[TeamName] < KAS_TeamCountOriginal(TeamName)) then     --kasfTeamCount()    --kasfTeamCountOriginal()
	
	needed[TeamName] = KAS_TeamCountOriginal(TeamName) - (SobGroup_Count(TeamName) + requested[TeamName]) --set    --kasfTeamCount()    --kasfTeamCountOriginal()
	KAS_RequestShipsOriginal(TeamName, needed[TeamName])    --kasfRequestShipsOriginal(___KAS_SCOPED_VAR____needed_)
	requested[TeamName] = requested[TeamName] + needed[TeamName] --set
	end
	newships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (newships[TeamName] ~= 0) then
	
	requested[TeamName] = requested[TeamName] - newships[TeamName] --set
	end
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC2 Wait state
--
function Init_Mission05OEM_ProtCorvettesC2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC2 Wait state
--
function Watch_Mission05OEM_ProtCorvettesC2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	if (_VIFONCE026[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchMoreFighters") ~= 0)) then  -- "ifonce" #26    --kasfMsgReceived("LaunchMoreFighters")
	
	_VIFONCE026[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC2", "Watch_Mission05OEM_ProtCorvettesC2_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC2_Launching", "Watch_Mission05OEM_ProtCorvettesC2_Wait")
	Init_Mission05OEM_ProtCorvettesC2_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC2 Launching state
--
function Init_Mission05OEM_ProtCorvettesC2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC2 Launching state
--
function Watch_Mission05OEM_ProtCorvettesC2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC2", "Watch_Mission05OEM_ProtCorvettesC2_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC2_Guard", "Watch_Mission05OEM_ProtCorvettesC2_Launching")
	Init_Mission05OEM_ProtCorvettesC2_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC2 Guard state
--
function Init_Mission05OEM_ProtCorvettesC2_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	SobGroup_Clear("GrowSelection_VictemProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("VictemProtCorvC2"))
	SobGroup_Clear("GrowSelection_NearProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearProtCorvC2"))
	SobGroup_Clear("GrowSelection_StrkVictemProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkVictemProtCorvC2"))
	SobGroup_Clear("GrowSelection_StrkNearProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkNearProtCorvC2"))
	SobGroup_Clear("GrowSelection_DamStrkVictemProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamStrkVictemProtCorvC2"))
	SobGroup_Clear("GrowSelection_DamStrkNearProtCorvC2")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamStrkNearProtCorvC2"))
	SobGroup_GuardSobGroup(TeamName, "TuranicCarrier2")    --kasfGuardShips(kasAITeamShipsPtr("TuranicCarrier2"))
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC2 Guard state
--
function Watch_Mission05OEM_ProtCorvettesC2_Guard(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	if ((KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtCorvC2") > 0) or (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtCorvC2", 5250) > 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtCorvC2"), 15000)    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtCorvC2"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC2", "Watch_Mission05OEM_ProtCorvettesC2_Guard")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC2_Attack", "Watch_Mission05OEM_ProtCorvettesC2_Guard")
	Init_Mission05OEM_ProtCorvettesC2_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ProtCorvettesC2 Attack state
--
function Init_Mission05OEM_ProtCorvettesC2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	if (_VIFONCE027[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #27
	
	_VIFONCE027[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ProtCorvettesC2 Attack state
--
function Watch_Mission05OEM_ProtCorvettesC2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ProtCorvettesC2
	--TeamName = ProtCorvettesC2
	KAS_UnderAttack("TuranicCarrier2", "GrowSelection_VictemProtCorvC2")    --kasfUnderAttackElsewhere(kasAITeamPtr("TuranicCarrier2"), kasGrowSelectionPtr("VictemProtCorvC2"))
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearProtCorvC2", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearProtCorvC2"), 10000)
	KAS_FillShipsByNonCapital("GrowSelection_StrkVictemProtCorvC2", "GrowSelection_VictemProtCorvC2")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkVictemProtCorvC2"), kasGrowSelectionPtr("VictemProtCorvC2"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkNearProtCorvC2", "GrowSelection_NearProtCorvC2")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkNearProtCorvC2"), kasGrowSelectionPtr("NearProtCorvC2"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkVictemProtCorvC2", "GrowSelection_StrkVictemProtCorvC2", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkVictemProtCorvC2"), kasGrowSelectionPtr("StrkVictemProtCorvC2"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkNearProtCorvC2", "GrowSelection_StrkNearProtCorvC2", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkNearProtCorvC2"), kasGrowSelectionPtr("StrkNearProtCorvC2"), 99)
	if (SobGroup_Count("GrowSelection_DamStrkVictemProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkVictemProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkVictemProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("DamStrkVictemProtCorvC2"))
	elseif (SobGroup_Count("GrowSelection_DamStrkNearProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkNearProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkNearProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("DamStrkNearProtCorvC2"))
	elseif (SobGroup_Count("GrowSelection_StrkVictemProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkVictemProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkVictemProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("StrkVictemProtCorvC2"))
	elseif (SobGroup_Count("GrowSelection_StrkNearProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkNearProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkNearProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("StrkNearProtCorvC2"))
	elseif (SobGroup_Count("GrowSelection_VictemProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("VictemProtCorvC2"))
	elseif (SobGroup_Count("GrowSelection_NearProtCorvC2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearProtCorvC2"))
	
	KAS_Attack(TeamName, "GrowSelection_NearProtCorvC2")    --kasfAttack(kasGrowSelectionPtr("NearProtCorvC2"))
	else
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05OEM_ProtCorvettesC2", "Watch_Mission05OEM_ProtCorvettesC2_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ProtCorvettesC2_Guard", "Watch_Mission05OEM_ProtCorvettesC2_Attack")
	Init_Mission05OEM_ProtCorvettesC2_Guard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters1 FSM
--
function Init_Mission05OEM_AttackFighters1(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier1")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier1"))
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters1_Wait", "Init_Mission05OEM_AttackFighters1")
	Init_Mission05OEM_AttackFighters1_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM AttackFighters1 FSM
--
function Watch_Mission05OEM_AttackFighters1(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	if (_VIFONCE028[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #28    --kasfTeamCount()
	
	_VIFONCE028[TeamName] = 1 --created,set;
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters1", "Watch_Mission05OEM_AttackFighters1")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters1_Done", "Watch_Mission05OEM_AttackFighters1")
	Init_Mission05OEM_AttackFighters1_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters1 Wait state
--
function Init_Mission05OEM_AttackFighters1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	
end


--
--  "watch" code for Mission05OEM AttackFighters1 Wait state
--
function Watch_Mission05OEM_AttackFighters1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	if (_VIFONCE029[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchYourFighters") ~= 0)) then  -- "ifonce" #29    --kasfMsgReceived("LaunchYourFighters")
	
	_VIFONCE029[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters1", "Watch_Mission05OEM_AttackFighters1_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters1_Launching", "Watch_Mission05OEM_AttackFighters1_Wait")
	Init_Mission05OEM_AttackFighters1_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters1 Launching state
--
function Init_Mission05OEM_AttackFighters1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	
end


--
--  "watch" code for Mission05OEM AttackFighters1 Launching state
--
function Watch_Mission05OEM_AttackFighters1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters1", "Watch_Mission05OEM_AttackFighters1_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters1_Attack", "Watch_Mission05OEM_AttackFighters1_Launching")
	Init_Mission05OEM_AttackFighters1_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters1 Attack state
--
function Init_Mission05OEM_AttackFighters1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	if (_VIFONCE030[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #30
	
	_VIFONCE030[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM AttackFighters1 Attack state
--
function Watch_Mission05OEM_AttackFighters1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	KAS_FindEnemiesInside("WorldSphere", "GrowSelection_VictemsAF1")    --kasfFindEnemiesInside(kasVolumePtr("WorldSphere"), kasGrowSelectionPtr("VictemsAF1"), 1000)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearAF1", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearAF1"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemsAF1", "GrowSelection_VictemsAF1", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemsAF1"), kasGrowSelectionPtr("VictemsAF1"), 99)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxVictemsAF1", "GrowSelection_VictemsAF1", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxVictemsAF1"), kasGrowSelectionPtr("VictemsAF1"), 0)
	if (SobGroup_Count("GrowSelection_NearAF1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearAF1"))
	
	KAS_Attack(TeamName, "GrowSelection_NearAF1")    --kasfAttack(kasGrowSelectionPtr("NearAF1"))
	elseif (SobGroup_Count("GrowSelection_DamVictemsAF1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemsAF1"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemsAF1")    --kasfAttack(kasGrowSelectionPtr("DamVictemsAF1"))
	elseif (SobGroup_Count("GrowSelection_IndxVictemsAF1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxVictemsAF1"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxVictemsAF1")    --kasfAttack(kasGrowSelectionPtr("IndxVictemsAF1"))
	elseif (SobGroup_Count("GrowSelection_VictemsAF1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemsAF1"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemsAF1")    --kasfAttack(kasGrowSelectionPtr("VictemsAF1"))
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters1 Done state
--
function Init_Mission05OEM_AttackFighters1_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	
end


--
--  "watch" code for Mission05OEM AttackFighters1 Done state
--
function Watch_Mission05OEM_AttackFighters1_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters1
	--TeamName = AttackFighters1
	
end


--
--  "initialize" code for Mission05OEM AttackFighters2 FSM
--
function Init_Mission05OEM_AttackFighters2(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier2")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier2"))
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters2_Wait", "Init_Mission05OEM_AttackFighters2")
	Init_Mission05OEM_AttackFighters2_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM AttackFighters2 FSM
--
function Watch_Mission05OEM_AttackFighters2(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	if (_VIFONCE031[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #31    --kasfTeamCount()
	
	_VIFONCE031[TeamName] = 1 --created,set;
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters2", "Watch_Mission05OEM_AttackFighters2")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters2_Done", "Watch_Mission05OEM_AttackFighters2")
	Init_Mission05OEM_AttackFighters2_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters2 Wait state
--
function Init_Mission05OEM_AttackFighters2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	
end


--
--  "watch" code for Mission05OEM AttackFighters2 Wait state
--
function Watch_Mission05OEM_AttackFighters2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	if (_VIFONCE032[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchYourFighters") ~= 0)) then  -- "ifonce" #32    --kasfMsgReceived("LaunchYourFighters")
	
	_VIFONCE032[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters2", "Watch_Mission05OEM_AttackFighters2_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters2_Launching", "Watch_Mission05OEM_AttackFighters2_Wait")
	Init_Mission05OEM_AttackFighters2_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters2 Launching state
--
function Init_Mission05OEM_AttackFighters2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	
end


--
--  "watch" code for Mission05OEM AttackFighters2 Launching state
--
function Watch_Mission05OEM_AttackFighters2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_AttackFighters2", "Watch_Mission05OEM_AttackFighters2_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackFighters2_Attack", "Watch_Mission05OEM_AttackFighters2_Launching")
	Init_Mission05OEM_AttackFighters2_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters2 Attack state
--
function Init_Mission05OEM_AttackFighters2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	if (_VIFONCE033[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #33
	
	_VIFONCE033[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM AttackFighters2 Attack state
--
function Watch_Mission05OEM_AttackFighters2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	KAS_FindEnemiesInside("WorldSphere", "GrowSelection_VictemsAF2")    --kasfFindEnemiesInside(kasVolumePtr("WorldSphere"), kasGrowSelectionPtr("VictemsAF2"), 1000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemsAF2", "GrowSelection_VictemsAF2", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemsAF2"), kasGrowSelectionPtr("VictemsAF2"), 99)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxVictemsAF2", "GrowSelection_VictemsAF2", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxVictemsAF2"), kasGrowSelectionPtr("VictemsAF2"), 0)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearAF2", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearAF2"), 10000)
	if (SobGroup_Count("GrowSelection_NearAF2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearAF2"))
	
	KAS_Attack(TeamName, "GrowSelection_NearAF2")    --kasfAttack(kasGrowSelectionPtr("NearAF2"))
	elseif (SobGroup_Count("GrowSelection_DamVictemsAF2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemsAF2"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemsAF2")    --kasfAttack(kasGrowSelectionPtr("DamVictemsAF2"))
	elseif (SobGroup_Count("GrowSelection_IndxVictemsAF2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxVictemsAF2"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxVictemsAF2")    --kasfAttack(kasGrowSelectionPtr("IndxVictemsAF2"))
	elseif (SobGroup_Count("GrowSelection_VictemsAF2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemsAF2"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemsAF2")    --kasfAttack(kasGrowSelectionPtr("VictemsAF2"))
	end
	
end


--
--  "initialize" code for Mission05OEM AttackFighters2 Done state
--
function Init_Mission05OEM_AttackFighters2_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	
end


--
--  "watch" code for Mission05OEM AttackFighters2 Done state
--
function Watch_Mission05OEM_AttackFighters2_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackFighters2
	--TeamName = AttackFighters2
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes1 FSM
--
function Init_Mission05OEM_AttackMslCorvettes1(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier1")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier1"))
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes1_Wait", "Init_Mission05OEM_AttackMslCorvettes1")
	Init_Mission05OEM_AttackMslCorvettes1_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes1 FSM
--
function Watch_Mission05OEM_AttackMslCorvettes1(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	if (_VIFONCE034[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #34    --kasfTeamCount()
	
	_VIFONCE034[TeamName] = 1 --created,set;
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes1", "Watch_Mission05OEM_AttackMslCorvettes1")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes1_Done", "Watch_Mission05OEM_AttackMslCorvettes1")
	Init_Mission05OEM_AttackMslCorvettes1_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes1 Wait state
--
function Init_Mission05OEM_AttackMslCorvettes1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes1 Wait state
--
function Watch_Mission05OEM_AttackMslCorvettes1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	if (_VIFONCE035[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchYourFighters") ~= 0)) then  -- "ifonce" #35    --kasfMsgReceived("LaunchYourFighters")
	
	_VIFONCE035[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes1", "Watch_Mission05OEM_AttackMslCorvettes1_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes1_Launching", "Watch_Mission05OEM_AttackMslCorvettes1_Wait")
	Init_Mission05OEM_AttackMslCorvettes1_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes1 Launching state
--
function Init_Mission05OEM_AttackMslCorvettes1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes1 Launching state
--
function Watch_Mission05OEM_AttackMslCorvettes1_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes1", "Watch_Mission05OEM_AttackMslCorvettes1_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes1_Attack", "Watch_Mission05OEM_AttackMslCorvettes1_Launching")
	Init_Mission05OEM_AttackMslCorvettes1_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes1 Attack state
--
function Init_Mission05OEM_AttackMslCorvettes1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	if (_VIFONCE036[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #36
	
	_VIFONCE036[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes1 Attack state
--
function Watch_Mission05OEM_AttackMslCorvettes1_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	KAS_FindEnemiesInside("WorldSphere", "GrowSelection_VictemsMc1")    --kasfFindEnemiesInside(kasVolumePtr("WorldSphere"), kasGrowSelectionPtr("VictemsMc1"), 1000)
	KAS_FillShipsByNonCapital("GrowSelection_StrkVictemsMc1", "GrowSelection_VictemsMc1")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkVictemsMc1"), kasGrowSelectionPtr("VictemsMc1"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkVictemsMc1", "GrowSelection_StrkVictemsMc1", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkVictemsMc1"), kasGrowSelectionPtr("StrkVictemsMc1"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemsMc1", "GrowSelection_VictemsMc1", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemsMc1"), kasGrowSelectionPtr("VictemsMc1"), 99)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxVictemsMc1", "GrowSelection_VictemsMc1", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxVictemsMc1"), kasGrowSelectionPtr("VictemsMc1"), 0)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearAMC1", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearAMC1"), 10000)
	if (SobGroup_Count("GrowSelection_NearAMC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearAMC1"))
	
	KAS_Attack(TeamName, "GrowSelection_NearAMC1")    --kasfAttack(kasGrowSelectionPtr("NearAMC1"))
	elseif (SobGroup_Count("GrowSelection_DamStrkVictemsMc1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkVictemsMc1"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkVictemsMc1")    --kasfAttack(kasGrowSelectionPtr("DamStrkVictemsMc1"))
	elseif (SobGroup_Count("GrowSelection_StrkVictemsMc1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkVictemsMc1"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkVictemsMc1")    --kasfAttack(kasGrowSelectionPtr("StrkVictemsMc1"))
	elseif (SobGroup_Count("GrowSelection_DamVictemsMc1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemsMc1"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemsMc1")    --kasfAttack(kasGrowSelectionPtr("DamVictemsMc1"))
	elseif (SobGroup_Count("GrowSelection_IndxVictemsMc1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxVictemsMc1"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxVictemsMc1")    --kasfAttack(kasGrowSelectionPtr("IndxVictemsMc1"))
	elseif (SobGroup_Count("GrowSelection_VictemsMc1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemsMc1"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemsMc1")    --kasfAttack(kasGrowSelectionPtr("VictemsMc1"))
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes1 Done state
--
function Init_Mission05OEM_AttackMslCorvettes1_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes1 Done state
--
function Watch_Mission05OEM_AttackMslCorvettes1_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes1
	--TeamName = AttackMslCorvettes1
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes2 FSM
--
function Init_Mission05OEM_AttackMslCorvettes2(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	SobGroup_DockSobGroupInstant(TeamName, "TuranicCarrier2")    --kasfDockInstant(kasAITeamPtr("TuranicCarrier2"))
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes2_Wait", "Init_Mission05OEM_AttackMslCorvettes2")
	Init_Mission05OEM_AttackMslCorvettes2_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes2 FSM
--
function Watch_Mission05OEM_AttackMslCorvettes2(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	if (_VIFONCE037[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #37    --kasfTeamCount()
	
	_VIFONCE037[TeamName] = 1 --created,set;
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes2", "Watch_Mission05OEM_AttackMslCorvettes2")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes2_Done", "Watch_Mission05OEM_AttackMslCorvettes2")
	Init_Mission05OEM_AttackMslCorvettes2_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes2 Wait state
--
function Init_Mission05OEM_AttackMslCorvettes2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes2 Wait state
--
function Watch_Mission05OEM_AttackMslCorvettes2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	if (_VIFONCE038[TeamName] == 0 and (KAS_MessageReceived(TeamName, "LaunchYourFighters") ~= 0)) then  -- "ifonce" #38    --kasfMsgReceived("LaunchYourFighters")
	
	_VIFONCE038[TeamName] = 1 --created,set;
	KAS_Launch(TeamName)    --kasfLaunch()
	--kasJump("Launching")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes2", "Watch_Mission05OEM_AttackMslCorvettes2_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes2_Launching", "Watch_Mission05OEM_AttackMslCorvettes2_Wait")
	Init_Mission05OEM_AttackMslCorvettes2_Launching(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes2 Launching state
--
function Init_Mission05OEM_AttackMslCorvettes2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes2 Launching state
--
function Watch_Mission05OEM_AttackMslCorvettes2_Launching(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	if (KAS_TeamFinishedLaunching(TeamName) == 1) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_AttackMslCorvettes2", "Watch_Mission05OEM_AttackMslCorvettes2_Launching")
	KASRule_Add(TeamName, "Watch_Mission05OEM_AttackMslCorvettes2_Attack", "Watch_Mission05OEM_AttackMslCorvettes2_Launching")
	Init_Mission05OEM_AttackMslCorvettes2_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes2 Attack state
--
function Init_Mission05OEM_AttackMslCorvettes2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	if (_VIFONCE039[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #39
	
	_VIFONCE039[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes2 Attack state
--
function Watch_Mission05OEM_AttackMslCorvettes2_Attack(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	KAS_FindEnemiesInside("WorldSphere", "GrowSelection_VictemsMc2")    --kasfFindEnemiesInside(kasVolumePtr("WorldSphere"), kasGrowSelectionPtr("VictemsMc2"), 1000)
	KAS_FillShipsByNonCapital("GrowSelection_StrkVictemsMc2", "GrowSelection_VictemsMc2")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkVictemsMc2"), kasGrowSelectionPtr("VictemsMc2"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkVictemsMc2", "GrowSelection_StrkVictemsMc2", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkVictemsMc2"), kasGrowSelectionPtr("StrkVictemsMc2"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamVictemsMc2", "GrowSelection_VictemsMc2", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamVictemsMc2"), kasGrowSelectionPtr("VictemsMc2"), 99)
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxVictemsMc2", "GrowSelection_VictemsMc2", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxVictemsMc2"), kasGrowSelectionPtr("VictemsMc2"), 0)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearAMC1", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearAMC1"), 10000)
	if (SobGroup_Count("GrowSelection_NearAMC1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearAMC1"))
	
	KAS_Attack(TeamName, "GrowSelection_NearAMC1")    --kasfAttack(kasGrowSelectionPtr("NearAMC1"))
	elseif (SobGroup_Count("GrowSelection_DamStrkVictemsMc2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkVictemsMc2"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkVictemsMc2")    --kasfAttack(kasGrowSelectionPtr("DamStrkVictemsMc2"))
	elseif (SobGroup_Count("GrowSelection_StrkVictemsMc2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkVictemsMc2"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkVictemsMc2")    --kasfAttack(kasGrowSelectionPtr("StrkVictemsMc2"))
	elseif (SobGroup_Count("GrowSelection_DamVictemsMc2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamVictemsMc2"))
	
	KAS_Attack(TeamName, "GrowSelection_DamVictemsMc2")    --kasfAttack(kasGrowSelectionPtr("DamVictemsMc2"))
	elseif (SobGroup_Count("GrowSelection_IndxVictemsMc2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxVictemsMc2"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxVictemsMc2")    --kasfAttack(kasGrowSelectionPtr("IndxVictemsMc2"))
	elseif (SobGroup_Count("GrowSelection_VictemsMc2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemsMc2"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemsMc2")    --kasfAttack(kasGrowSelectionPtr("VictemsMc2"))
	end
	
end


--
--  "initialize" code for Mission05OEM AttackMslCorvettes2 Done state
--
function Init_Mission05OEM_AttackMslCorvettes2_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	
end


--
--  "watch" code for Mission05OEM AttackMslCorvettes2 Done state
--
function Watch_Mission05OEM_AttackMslCorvettes2_Done(TeamName)
	--FSM: FSM_Mission05OEM_AttackMslCorvettes2
	--TeamName = AttackMslCorvettes2
	
end


--
--  "initialize" code for Mission05OEM ResourceHaters FSM
--
function Init_Mission05OEM_ResourceHaters(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ResourceHaters_Wait", "Init_Mission05OEM_ResourceHaters")
	Init_Mission05OEM_ResourceHaters_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM ResourceHaters FSM
--
function Watch_Mission05OEM_ResourceHaters(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	if (_VIFONCE040[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #40    --kasfTeamCount()
	
	_VIFONCE040[TeamName] = 1 --created,set;
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission05OEM_ResourceHaters", "Watch_Mission05OEM_ResourceHaters")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ResourceHaters_Done", "Watch_Mission05OEM_ResourceHaters")
	Init_Mission05OEM_ResourceHaters_Done(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ResourceHaters Wait state
--
function Init_Mission05OEM_ResourceHaters_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	
end


--
--  "watch" code for Mission05OEM ResourceHaters Wait state
--
function Watch_Mission05OEM_ResourceHaters_Wait(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	if (_VIFONCE041[TeamName] == 0 and (KAS_GatheredRUs() > 300)) then  -- "ifonce" #41    --kasfRUsEnemyCollected()
	
	_VIFONCE041[TeamName] = 1 --created,set;
	KAS_TeamHyperspaceIn(TeamName, "HaterPoint")    --kasfTeamHyperspaceIn(kasVectorPtr("HaterPoint"))
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_ResourceHaters", "Watch_Mission05OEM_ResourceHaters_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_ResourceHaters_Attack", "Watch_Mission05OEM_ResourceHaters_Wait")
	Init_Mission05OEM_ResourceHaters_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM ResourceHaters Attack state
--
function Init_Mission05OEM_ResourceHaters_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	if (_VIFONCE042[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #42
	
	_VIFONCE042[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM ResourceHaters Attack state
--
function Watch_Mission05OEM_ResourceHaters_Attack(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	KAS_FindEnemiesInside("WorldSphere", "GrowSelection_VictemsHaters")    --kasfFindEnemiesInside(kasVolumePtr("WorldSphere"), kasGrowSelectionPtr("VictemsHaters"), 1000)
	KAS_FillShipsByType_Normal("GrowSelection_HatedResourcers", "GrowSelection_VictemsHaters", "ResourceCollector")    --kasfShipsSelectType(kasGrowSelectionPtr("HatedResourcers"), kasGrowSelectionPtr("VictemsHaters"), "ResourceCollector")
	KAS_FillShipsByType_Normal("GrowSelection_HatedController", "GrowSelection_VictemsHaters", "ResourceController")    --kasfShipsSelectType(kasGrowSelectionPtr("HatedController"), kasGrowSelectionPtr("VictemsHaters"), "ResourceController")
	KAS_FillShipsByNonCapital("GrowSelection_HatedStrk", "GrowSelection_VictemsHaters")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("HatedStrk"), kasGrowSelectionPtr("VictemsHaters"))
	if (SobGroup_Count("GrowSelection_HatedResourcers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("HatedResourcers"))
	
	KAS_Attack(TeamName, "GrowSelection_HatedResourcers")    --kasfAttack(kasGrowSelectionPtr("HatedResourcers"))
	elseif (SobGroup_Count("GrowSelection_HatedController") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("HatedController"))
	
	KAS_Attack(TeamName, "GrowSelection_HatedController")    --kasfAttack(kasGrowSelectionPtr("HatedController"))
	elseif (SobGroup_Count("GrowSelection_HatedStrk") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("HatedStrk"))
	
	KAS_Attack(TeamName, "GrowSelection_HatedStrk")    --kasfAttack(kasGrowSelectionPtr("HatedStrk"))
	elseif (SobGroup_Count("GrowSelection_VictemsHaters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("VictemsHaters"))
	
	KAS_Attack(TeamName, "GrowSelection_VictemsHaters")    --kasfAttack(kasGrowSelectionPtr("VictemsHaters"))
	end
	
end


--
--  "initialize" code for Mission05OEM ResourceHaters Done state
--
function Init_Mission05OEM_ResourceHaters_Done(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	
end


--
--  "watch" code for Mission05OEM ResourceHaters Done state
--
function Watch_Mission05OEM_ResourceHaters_Done(TeamName)
	--FSM: FSM_Mission05OEM_ResourceHaters
	--TeamName = ResourceHaters
	
end


--
--  "initialize" code for Mission05OEM PDefenseS FSM
--
function Init_Mission05OEM_PDefenseS(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	KAS_TeamAttributesSet(TeamName, 4096)    --kasfTeamAttributesBitSet(4096)
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseS_Wait", "Init_Mission05OEM_PDefenseS")
	Init_Mission05OEM_PDefenseS_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM PDefenseS FSM
--
function Watch_Mission05OEM_PDefenseS(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	
end


--
--  "initialize" code for Mission05OEM PDefenseS Wait state
--
function Init_Mission05OEM_PDefenseS_Wait(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	SobGroup_Clear("GrowSelection_SYerDead")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SYerDead"))
	
end


--
--  "watch" code for Mission05OEM PDefenseS Wait state
--
function Watch_Mission05OEM_PDefenseS_Wait(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	KAS_FindEnemiesInside("DefenceRange", "GrowSelection_SYerDead")    --kasfFindEnemiesInside(kasVolumePtr("DefenceRange"), kasGrowSelectionPtr("SYerDead"), 1000)
	if (SobGroup_Count("GrowSelection_SYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("SYerDead"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_PDefenseS", "Watch_Mission05OEM_PDefenseS_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseS_Attack", "Watch_Mission05OEM_PDefenseS_Wait")
	Init_Mission05OEM_PDefenseS_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM PDefenseS Attack state
--
function Init_Mission05OEM_PDefenseS_Attack(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	if (_VIFONCE043[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #43
	
	_VIFONCE043[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM PDefenseS Attack state
--
function Watch_Mission05OEM_PDefenseS_Attack(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseS
	--TeamName = "PDefenseS1"
	KAS_FindEnemiesInside("DefenceRange", "GrowSelection_SYerDead")    --kasfFindEnemiesInside(kasVolumePtr("DefenceRange"), kasGrowSelectionPtr("SYerDead"), 1000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamSYerDead", "GrowSelection_SYerDead", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamSYerDead"), kasGrowSelectionPtr("SYerDead"), 99)
	KAS_FillShipsByNonCapital("GrowSelection_StrkSYerDead", "GrowSelection_SYerDead")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkSYerDead"), kasGrowSelectionPtr("SYerDead"))
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxSYerDead", "GrowSelection_SYerDead", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxSYerDead"), kasGrowSelectionPtr("SYerDead"), 0)
	if (SobGroup_Count("GrowSelection_DamSYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamSYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_DamSYerDead")    --kasfAttack(kasGrowSelectionPtr("DamSYerDead"))
	elseif (SobGroup_Count("GrowSelection_StrkSYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkSYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkSYerDead")    --kasfAttack(kasGrowSelectionPtr("StrkSYerDead"))
	elseif (SobGroup_Count("GrowSelection_IndxSYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxSYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxSYerDead")    --kasfAttack(kasGrowSelectionPtr("IndxSYerDead"))
	else
	
	--kasJump("Wait")
	--KASRule_Remove("FSM_Mission05OEM_PDefenseS", "Watch_Mission05OEM_PDefenseS_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseS_Wait", "Watch_Mission05OEM_PDefenseS_Attack")
	Init_Mission05OEM_PDefenseS_Wait(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM PDefenseL FSM
--
function Init_Mission05OEM_PDefenseL(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	KAS_TeamAttributesSet(TeamName, 4096)    --kasfTeamAttributesBitSet(4096)
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseL_Wait", "Init_Mission05OEM_PDefenseL")
	Init_Mission05OEM_PDefenseL_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM PDefenseL FSM
--
function Watch_Mission05OEM_PDefenseL(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	
end


--
--  "initialize" code for Mission05OEM PDefenseL Wait state
--
function Init_Mission05OEM_PDefenseL_Wait(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	
end


--
--  "watch" code for Mission05OEM PDefenseL Wait state
--
function Watch_Mission05OEM_PDefenseL_Wait(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	KAS_FindEnemiesInside("DefenceRange", "GrowSelection_LYerDead")    --kasfFindEnemiesInside(kasVolumePtr("DefenceRange"), kasGrowSelectionPtr("LYerDead"), 1000)
	if (SobGroup_Count("GrowSelection_LYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("LYerDead"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission05OEM_PDefenseL", "Watch_Mission05OEM_PDefenseL_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseL_Attack", "Watch_Mission05OEM_PDefenseL_Wait")
	Init_Mission05OEM_PDefenseL_Attack(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM PDefenseL Attack state
--
function Init_Mission05OEM_PDefenseL_Attack(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	if (_VIFONCE044[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #44
	
	_VIFONCE044[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "MusicIsaWorldWithinItself")    --kasfMsgSendAll("MusicIsaWorldWithinItself")
	end
	
end


--
--  "watch" code for Mission05OEM PDefenseL Attack state
--
function Watch_Mission05OEM_PDefenseL_Attack(TeamName)
	--FSM: FSM_Mission05OEM_PDefenseL
	--TeamName = "PDefenseL1"
	KAS_FindEnemiesInside("DefenceRange", "GrowSelection_LYerDead")    --kasfFindEnemiesInside(kasVolumePtr("DefenceRange"), kasGrowSelectionPtr("LYerDead"), 1000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamLYerDead", "GrowSelection_LYerDead", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamLYerDead"), kasGrowSelectionPtr("LYerDead"), 99)
	KAS_FillShipsByNonCapital("GrowSelection_StrkLYerDead", "GrowSelection_LYerDead")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkLYerDead"), kasGrowSelectionPtr("LYerDead"))
	SobGroup_FillShipsByIndexRange("GrowSelection_IndxLYerDead", "GrowSelection_LYerDead", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("IndxLYerDead"), kasGrowSelectionPtr("LYerDead"), 0)
	if (SobGroup_Count("GrowSelection_DamLYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamLYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_DamLYerDead")    --kasfAttack(kasGrowSelectionPtr("DamLYerDead"))
	elseif (SobGroup_Count("GrowSelection_StrkLYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkLYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkLYerDead")    --kasfAttack(kasGrowSelectionPtr("StrkLYerDead"))
	elseif (SobGroup_Count("GrowSelection_IndxLYerDead") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("IndxLYerDead"))
	
	KAS_Attack(TeamName, "GrowSelection_IndxLYerDead")    --kasfAttack(kasGrowSelectionPtr("IndxLYerDead"))
	else
	
	--kasJump("Wait")
	--KASRule_Remove("FSM_Mission05OEM_PDefenseL", "Watch_Mission05OEM_PDefenseL_Attack")
	KASRule_Add(TeamName, "Watch_Mission05OEM_PDefenseL_Wait", "Watch_Mission05OEM_PDefenseL_Attack")
	Init_Mission05OEM_PDefenseL_Wait(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier1 FSM
--
function Init_Mission05OEM_TuranicCarrier1(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_Wait", "Init_Mission05OEM_TuranicCarrier1")
	Init_Mission05OEM_TuranicCarrier1_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier1 FSM
--
function Watch_Mission05OEM_TuranicCarrier1(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier1 Wait state
--
function Init_Mission05OEM_TuranicCarrier1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	KASTimer_Start(WaitForDocking[TeamName], 2)
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier1 Wait state
--
function Watch_Mission05OEM_TuranicCarrier1_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	if (KASTimer_IsExpiredIfSoDestroy(WaitForDocking[TeamName]) ~= 0) then
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	end
	if (_VIFONCE045[TeamName] == 0 and (KAS_MessageReceived(TeamName, "ComeOnDown") ~= 0)) then  -- "ifonce" #45    --kasfMsgReceived("ComeOnDown")
	
	_VIFONCE045[TeamName] = 1 --created,set;
	KAS_TeamHyperspaceIn(TeamName, "Carrier1In")    --kasfTeamHyperspaceIn(kasVectorPtr("Carrier1In"))
	--kasJump("HeadForTheHills")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_HeadForTheHills", "Watch_Mission05OEM_TuranicCarrier1_Wait")
	Init_Mission05OEM_TuranicCarrier1_HeadForTheHills(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier1 HeadForTheHills state
--
function Init_Mission05OEM_TuranicCarrier1_HeadForTheHills(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	SobGroup_SetMaxSpeed(TeamName, 64.75)    --kasfTeamSetMaxVelocity(185)
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("PathPoint1"))    --kasfMoveTo(kasVectorPtr("PathPoint1"))
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier1 HeadForTheHills state
--
function Watch_Mission05OEM_TuranicCarrier1_HeadForTheHills(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	if (_VIFONCE046[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, "PathPoint1", 175) ~= 0)) then  -- "ifonce" #46    --kasfNearby(kasVectorPtr("PathPoint1"), 500)
	
	_VIFONCE046[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "PlayFakeNIS")    --kasfMsgSendAll("PlayFakeNIS")
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_HeadForTheHills")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_Choose", "Watch_Mission05OEM_TuranicCarrier1_HeadForTheHills")
	Init_Mission05OEM_TuranicCarrier1_Choose(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier1 Choose state
--
function Init_Mission05OEM_TuranicCarrier1_Choose(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	WhichPath[TeamName] = 0 --destroyed
	WhichPath[TeamName] = (RandomIntRange(1, 6)) --created,set    --kasfRandom(1, 6)
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier1 Choose state
--
function Watch_Mission05OEM_TuranicCarrier1_Choose(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	if (WhichPath[TeamName] == 1) then
	
	G_MyPath = 1 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier1", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier1"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	elseif (WhichPath[TeamName] == 2) then
	
	G_MyPath = 2 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier2", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier2"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	elseif (WhichPath[TeamName] == 3) then
	
	G_MyPath = 3 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier3", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier3"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	elseif (WhichPath[TeamName] == 4) then
	
	G_MyPath = 4 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier4", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier4"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	elseif (WhichPath[TeamName] == 5) then
	
	G_MyPath = 5 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier5", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier5"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	elseif (WhichPath[TeamName] == 6) then
	
	G_MyPath = 6 --created,set
	SobGroup_FollowPath(TeamName, "TuranicCarrier6", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier6"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier1_Choose")
	Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier1 MovinRightAlong state
--
function Init_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier1 MovinRightAlong state
--
function Watch_Mission05OEM_TuranicCarrier1_MovinRightAlong(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier1
	--TeamName = TuranicCarrier1
	if (_VIFONCE047[TeamName] == 0 and (SobGroup_GetNextPathPoint(TeamName) == 0)) then  -- "ifonce" #47    --kasfPathNextPoint()
	
	_VIFONCE047[TeamName] = 1 --created,set;
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("LoosePoint"))    --kasfMoveTo(kasVectorPtr("LoosePoint"))
	end
	if (_VIFONCE048[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, "LoosePoint", 420) ~= 0)) then  -- "ifonce" #48    --kasfNearby(kasVectorPtr("LoosePoint"), 1200)
	
	_VIFONCE048[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "WeMadeItHere")    --kasfMsgSendAll("WeMadeItHere")
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier2 FSM
--
function Init_Mission05OEM_TuranicCarrier2(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Wait", "Init_Mission05OEM_TuranicCarrier2")
	Init_Mission05OEM_TuranicCarrier2_Wait(TeamName)
	return
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier2 FSM
--
function Watch_Mission05OEM_TuranicCarrier2(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier2 Wait state
--
function Init_Mission05OEM_TuranicCarrier2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	KASTimer_Start(WaitForDocking[TeamName], 2)
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier2 Wait state
--
function Watch_Mission05OEM_TuranicCarrier2_Wait(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	if (KASTimer_IsExpiredIfSoDestroy(WaitForDocking[TeamName]) ~= 0) then
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	end
	if (_VIFONCE049[TeamName] == 0 and (KAS_MessageReceived(TeamName, "ComeOnDown") ~= 0)) then  -- "ifonce" #49    --kasfMsgReceived("ComeOnDown")
	
	_VIFONCE049[TeamName] = 1 --created,set;
	KAS_TeamHyperspaceIn(TeamName, "Carrier2In")    --kasfTeamHyperspaceIn(kasVectorPtr("Carrier2In"))
	--kasJump("HeadForTheHills")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Wait")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_HeadForTheHills", "Watch_Mission05OEM_TuranicCarrier2_Wait")
	Init_Mission05OEM_TuranicCarrier2_HeadForTheHills(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier2 HeadForTheHills state
--
function Init_Mission05OEM_TuranicCarrier2_HeadForTheHills(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	SobGroup_SetMaxSpeed(TeamName, 63)    --kasfTeamSetMaxVelocity(180)
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("PathPoint2"))    --kasfMoveTo(kasVectorPtr("PathPoint2"))
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier2 HeadForTheHills state
--
function Watch_Mission05OEM_TuranicCarrier2_HeadForTheHills(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	if (_VIFONCE050[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, "PathPoint2", 350) ~= 0)) then  -- "ifonce" #50    --kasfNearby(kasVectorPtr("PathPoint2"), 1000)
	
	_VIFONCE050[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "PlayFakeNIS")    --kasfMsgSendAll("PlayFakeNIS")
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_HeadForTheHills")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_HeadForTheHills")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier2 Choose state
--
function Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	WhichPath[TeamName] = 0 --destroyed
	WhichPath[TeamName] = (RandomIntRange(1, 6)) --created,set    --kasfRandom(1, 6)
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier2 Choose state
--
function Watch_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	if (WhichPath[TeamName] == 1) then
	
	if (G_MyPath == 1) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier1", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier1"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	elseif (WhichPath[TeamName] == 2) then
	
	if (G_MyPath == 2) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier2", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier2"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	elseif (WhichPath[TeamName] == 3) then
	
	if (G_MyPath == 3) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier3", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier3"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	elseif (WhichPath[TeamName] == 4) then
	
	if (G_MyPath == 4) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier4", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier4"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	elseif (WhichPath[TeamName] == 5) then
	
	if (G_MyPath == 5) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier5", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier5"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	elseif (WhichPath[TeamName] == 6) then
	
	if (G_MyPath == 6) then
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_Choose", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_Choose(TeamName)
	return
	else
	
	SobGroup_FollowPath(TeamName, "TuranicCarrier6", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("TuranicCarrier6"))
	--kasJump("MovinRightAlong")
	--KASRule_Remove("FSM_Mission05OEM_TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	KASRule_Add(TeamName, "Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong", "Watch_Mission05OEM_TuranicCarrier2_Choose")
	Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	return
	end
	end
	
end


--
--  "initialize" code for Mission05OEM TuranicCarrier2 MovinRightAlong state
--
function Init_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	
end


--
--  "watch" code for Mission05OEM TuranicCarrier2 MovinRightAlong state
--
function Watch_Mission05OEM_TuranicCarrier2_MovinRightAlong(TeamName)
	--FSM: FSM_Mission05OEM_TuranicCarrier2
	--TeamName = TuranicCarrier2
	if (_VIFONCE051[TeamName] == 0 and (SobGroup_GetNextPathPoint(TeamName) == 0)) then  -- "ifonce" #51    --kasfPathNextPoint()
	
	_VIFONCE051[TeamName] = 1 --created,set;
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("LoosePoint"))    --kasfMoveTo(kasVectorPtr("LoosePoint"))
	end
	if (_VIFONCE052[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, "LoosePoint", 420) ~= 0)) then  -- "ifonce" #52    --kasfNearby(kasVectorPtr("LoosePoint"), 1200)
	
	_VIFONCE052[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "WeMadeItHere")    --kasfMsgSendAll("WeMadeItHere")
	end
	
end


--
--  "initialize" code for Mission05OEM mission
--
function Init_Mission05OEM(MissionName)
	--FSM: FSM_Mission05OEM
	--MissionName = "Mission05OEM"
	--kasFSMCreate("MissionFlow")
	KASRule_AddFSM("DummyTeam", "Watch_Mission05OEM_MissionFlow", "Init_Mission05OEM")
	Init_Mission05OEM_MissionFlow("DummyTeam")
	--kasFSMCreate("TuranicCarrier1")
	KASRule_AddFSM("TuranicCarrier1", "Watch_Mission05OEM_TuranicCarrier1", "Init_Mission05OEM")
	Init_Mission05OEM_TuranicCarrier1("TuranicCarrier1")
	--kasFSMCreate("TuranicCarrier2")
	KASRule_AddFSM("TuranicCarrier2", "Watch_Mission05OEM_TuranicCarrier2", "Init_Mission05OEM")
	Init_Mission05OEM_TuranicCarrier2("TuranicCarrier2")
	--kasFSMCreate("TuranicFrigs1")
	KASRule_AddFSM("TuranicFrigs1", "Watch_Mission05OEM_TuranicFrigs1", "Init_Mission05OEM")
	Init_Mission05OEM_TuranicFrigs1("TuranicFrigs1")
	--kasFSMCreate("TuranicFrigs2")
	KASRule_AddFSM("TuranicFrigs2", "Watch_Mission05OEM_TuranicFrigs2", "Init_Mission05OEM")
	Init_Mission05OEM_TuranicFrigs2("TuranicFrigs2")
	--kasFSMCreate("ProtFightersC1a")
	KASRule_AddFSM("ProtFightersC1a", "Watch_Mission05OEM_ProtFightersC1a", "Init_Mission05OEM")
	Init_Mission05OEM_ProtFightersC1a("ProtFightersC1a")
	--kasFSMCreate("ProtFightersC1b")
	KASRule_AddFSM("ProtFightersC1b", "Watch_Mission05OEM_ProtFightersC1b", "Init_Mission05OEM")
	Init_Mission05OEM_ProtFightersC1b("ProtFightersC1b")
	--kasFSMCreate("ProtFightersC2a")
	KASRule_AddFSM("ProtFightersC2a", "Watch_Mission05OEM_ProtFightersC2a", "Init_Mission05OEM")
	Init_Mission05OEM_ProtFightersC2a("ProtFightersC2a")
	--kasFSMCreate("ProtFightersC2b")
	KASRule_AddFSM("ProtFightersC2b", "Watch_Mission05OEM_ProtFightersC2b", "Init_Mission05OEM")
	Init_Mission05OEM_ProtFightersC2b("ProtFightersC2b")
	--kasFSMCreate("ProtCorvettesC1")
	KASRule_AddFSM("ProtCorvettesC1", "Watch_Mission05OEM_ProtCorvettesC1", "Init_Mission05OEM")
	Init_Mission05OEM_ProtCorvettesC1("ProtCorvettesC1")
	--kasFSMCreate("ProtCorvettesC2")
	KASRule_AddFSM("ProtCorvettesC2", "Watch_Mission05OEM_ProtCorvettesC2", "Init_Mission05OEM")
	Init_Mission05OEM_ProtCorvettesC2("ProtCorvettesC2")
	--kasFSMCreate("AttackFighters1")
	KASRule_AddFSM("AttackFighters1", "Watch_Mission05OEM_AttackFighters1", "Init_Mission05OEM")
	Init_Mission05OEM_AttackFighters1("AttackFighters1")
	--kasFSMCreate("AttackFighters2")
	KASRule_AddFSM("AttackFighters2", "Watch_Mission05OEM_AttackFighters2", "Init_Mission05OEM")
	Init_Mission05OEM_AttackFighters2("AttackFighters2")
	--kasFSMCreate("AttackMslCorvettes1")
	KASRule_AddFSM("AttackMslCorvettes1", "Watch_Mission05OEM_AttackMslCorvettes1", "Init_Mission05OEM")
	Init_Mission05OEM_AttackMslCorvettes1("AttackMslCorvettes1")
	--kasFSMCreate("AttackMslCorvettes2")
	KASRule_AddFSM("AttackMslCorvettes2", "Watch_Mission05OEM_AttackMslCorvettes2", "Init_Mission05OEM")
	Init_Mission05OEM_AttackMslCorvettes2("AttackMslCorvettes2")
	--kasFSMCreate("ResourceHaters")
	KASRule_AddFSM("ResourceHaters", "Watch_Mission05OEM_ResourceHaters", "Init_Mission05OEM")
	Init_Mission05OEM_ResourceHaters("ResourceHaters")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS1", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS1")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS2", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS2")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS3", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS3")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS4", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS4")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS5", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS5")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS6", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS6")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS7", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS7")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS8", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS8")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS9", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS9")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS10", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS10")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS11", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS11")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS12", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS12")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS13", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS13")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS14", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS14")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS15", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS15")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS16", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS16")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS17", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS17")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS18", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS18")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS21", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS21")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS22", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS22")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS23", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS23")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS24", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS24")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS25", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS25")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS26", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS26")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS27", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS27")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS28", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS28")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS29", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS29")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS30", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS30")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS31", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS31")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS32", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS32")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS33", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS33")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS34", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS34")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS35", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS35")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS36", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS36")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS37", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS37")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS38", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS38")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS41", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS41")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS42", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS42")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS43", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS43")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS44", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS44")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS45", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS45")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS46", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS46")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS47", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS47")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS48", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS48")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS49", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS49")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS50", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS50")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS51", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS51")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS52", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS52")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS53", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS53")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS54", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS54")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS55", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS55")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS56", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS56")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS57", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS57")
	--kasFSMCreate("PDefenseS")
	KASRule_AddFSM("PDefenseS58", "Watch_Mission05OEM_PDefenseS", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseS("PDefenseS58")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL1", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL1")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL2", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL2")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL3", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL3")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL4", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL4")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL5", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL5")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL6", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL6")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL7", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL7")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL8", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL8")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL9", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL9")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL10", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL10")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL11", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL11")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL12", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL12")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL13", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL13")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL14", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL14")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL15", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL15")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL16", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL16")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL17", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL17")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL18", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL18")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL21", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL21")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL22", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL22")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL23", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL23")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL24", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL24")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL25", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL25")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL26", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL26")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL27", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL27")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL28", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL28")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL29", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL29")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL30", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL30")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL31", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL31")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL32", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL32")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL33", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL33")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL34", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL34")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL35", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL35")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL36", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL36")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL37", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL37")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL38", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL38")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL41", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL41")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL42", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL42")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL43", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL43")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL44", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL44")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL45", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL45")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL46", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL46")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL47", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL47")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL48", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL48")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL49", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL49")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL50", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL50")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL51", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL51")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL52", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL52")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL53", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL53")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL54", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL54")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL55", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL55")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL56", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL56")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL57", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL57")
	--kasFSMCreate("PDefenseL")
	KASRule_AddFSM("PDefenseL58", "Watch_Mission05OEM_PDefenseL", "Init_Mission05OEM")
	Init_Mission05OEM_PDefenseL("PDefenseL58")
	KAS_CampaignAutoSave(10, "$62250")    --kasfSaveLevel(10, LSTRING_Savegame[strCurLanguage])
	
end


--
--  "watch" code for Mission05OEM mission
--
function Watch_Mission05OEM(MissionName)
	--FSM: FSM_Mission05OEM
	--MissionName = "Mission05OEM"
	if (_VIFONCE053 == 0 and (1 ~= 0)) then  -- "ifonce" #53
	
	_VIFONCE053 = 1 --created,set;
	singlePlayerLocationCard("$62251", 10)    --kasfLocationCard(10000, LSTRING_LocationCard[strCurLanguage])
	end
	if (_VIFONCE054 == 0 and ((SobGroup_Count("TuranicCarrier1") < 1) and (SobGroup_Count("TuranicCarrier2") < 1))) then  -- "ifonce" #54    --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier2"))    --kasfShipsCount(kasAITeamShipsPtr("TuranicCarrier1"))
	
	_VIFONCE054 = 1 --created,set;
	KAS_MusicStop(12)    --kasfMusicStop(12)
	G_ByeByeLove = 1 --created,set
	KASObjective_SetState(ObjectiveID_DestroyEnemyCarriers, 1)    --kasfObjectiveSet("DestroyEnemyCarriers", 1)
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end
	if ((KAS_PlayerHasResearch(0, "FighterDrive") ~= 0) and (SetTechOnce1 == 0)) then     --kasfDoesPlayerHave("MassDrive1Kt")
	
	KAS_UnrestrictResearchOption(0, "FighterChassis")    --kasfAllowPlayerToResearch("Chassis1")
	SetTechOnce1 = 1 --created,set
	end
	if ((KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0) and (SetTechOnce2 == 0)) then     --kasfDoesPlayerHave("MassDrive10Kt")
	
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	SetTechOnce2 = 1 --created,set
	end
	if ((KAS_PlayerHasResearch(0, "CapitalShipDrive") ~= 0) and (SetCapitalChassis == 0)) then     --kasfDoesPlayerHave("MassDrive100Kt")
	
	KAS_UnrestrictResearchOption(0, "CapitalShipChassis")    --kasfAllowPlayerToResearch("Chassis3")
	SetCapitalChassis = 1 --set
	end
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end
	if (_VIFONCE055 == 0 and (1 ~= 0)) then  -- "ifonce" #55
	
	_VIFONCE055 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayIonOrPlasmaEvent, 20)
	end
	if (_VIFONCE056 == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_PlayIonOrPlasmaEvent) ~= 0)) then  -- "ifonce" #56
	
	_VIFONCE056 = 1 --created,set;
	if ((Player_CanResearch(0, "IonCannons") ~= 0) or (KAS_PlayerHasResearch(0, "IonCannons") ~= 0)) then     --kasfCanPlayerResearch("IonWeapons")    --kasfDoesPlayerHave("IonWeapons")
	
	G_WeGetPlaz = 1 --created,set
	KAS_UnrestrictResearchOption(0, "PlasmaBombLauncher")    --kasfAllowPlayerToResearch("PlasmaWeapons")
	elseif ((Player_CanResearch(0, "PlasmaBombLauncher") ~= 0) or (KAS_PlayerHasResearch(0, "PlasmaBombLauncher") ~= 0)) then     --kasfCanPlayerResearch("PlasmaWeapons")    --kasfDoesPlayerHave("PlasmaWeapons")
	
	G_WeGetIonz = 1 --created,set
	KAS_UnrestrictResearchOption(0, "IonCannons")    --kasfAllowPlayerToResearch("IonWeapons")
	end
	end
	
end

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_CapsNearFrig1")
    KASSobGroup_Create("GrowSelection_CapsNearFrig2")
    KASSobGroup_Create("GrowSelection_CapsVictemFrig1")
    KASSobGroup_Create("GrowSelection_CapsVictemFrig2")
    KASSobGroup_Create("GrowSelection_DamLYerDead")
    KASSobGroup_Create("GrowSelection_DamNearProtFightersC1a")
    KASSobGroup_Create("GrowSelection_DamNearProtFightersC1b")
    KASSobGroup_Create("GrowSelection_DamNearProtFightersC2a")
    KASSobGroup_Create("GrowSelection_DamNearProtFightersC2b")
    KASSobGroup_Create("GrowSelection_DamSYerDead")
    KASSobGroup_Create("GrowSelection_DamStrkNearProtCorvC1")
    KASSobGroup_Create("GrowSelection_DamStrkNearProtCorvC2")
    KASSobGroup_Create("GrowSelection_DamStrkVictemProtCorvC1")
    KASSobGroup_Create("GrowSelection_DamStrkVictemProtCorvC2")
    KASSobGroup_Create("GrowSelection_DamStrkVictemsMc1")
    KASSobGroup_Create("GrowSelection_DamStrkVictemsMc2")
    KASSobGroup_Create("GrowSelection_DamVictemProtFightersC1a")
    KASSobGroup_Create("GrowSelection_DamVictemProtFightersC1b")
    KASSobGroup_Create("GrowSelection_DamVictemProtFightersC2a")
    KASSobGroup_Create("GrowSelection_DamVictemProtFightersC2b")
    KASSobGroup_Create("GrowSelection_DamVictemsAF1")
    KASSobGroup_Create("GrowSelection_DamVictemsAF2")
    KASSobGroup_Create("GrowSelection_DamVictemsMc1")
    KASSobGroup_Create("GrowSelection_DamVictemsMc2")
    KASSobGroup_Create("GrowSelection_HatedController")
    KASSobGroup_Create("GrowSelection_HatedResourcers")
    KASSobGroup_Create("GrowSelection_HatedStrk")
    KASSobGroup_Create("GrowSelection_IndxCapsNearFrig1")
    KASSobGroup_Create("GrowSelection_IndxCapsNearFrig2")
    KASSobGroup_Create("GrowSelection_IndxCapsVictemFrig1")
    KASSobGroup_Create("GrowSelection_IndxCapsVictemFrig2")
    KASSobGroup_Create("GrowSelection_IndxLYerDead")
    KASSobGroup_Create("GrowSelection_IndxSYerDead")
    KASSobGroup_Create("GrowSelection_IndxVictemsAF1")
    KASSobGroup_Create("GrowSelection_IndxVictemsAF2")
    KASSobGroup_Create("GrowSelection_IndxVictemsMc1")
    KASSobGroup_Create("GrowSelection_IndxVictemsMc2")
    KASSobGroup_Create("GrowSelection_LYerDead")
    KASSobGroup_Create("GrowSelection_NastyCaps1")
    KASSobGroup_Create("GrowSelection_NastyCaps2")
    KASSobGroup_Create("GrowSelection_NearAF1")
    KASSobGroup_Create("GrowSelection_NearAF2")
    KASSobGroup_Create("GrowSelection_NearAMC1")
    KASSobGroup_Create("GrowSelection_NearFrig1")
    KASSobGroup_Create("GrowSelection_NearFrig2")
    KASSobGroup_Create("GrowSelection_NearProtCorvC1")
    KASSobGroup_Create("GrowSelection_NearProtCorvC2")
    KASSobGroup_Create("GrowSelection_NearProtFightersC1a")
    KASSobGroup_Create("GrowSelection_NearProtFightersC1b")
    KASSobGroup_Create("GrowSelection_NearProtFightersC2a")
    KASSobGroup_Create("GrowSelection_NearProtFightersC2b")
    KASSobGroup_Create("GrowSelection_SYerDead")
    KASSobGroup_Create("GrowSelection_StrkLYerDead")
    KASSobGroup_Create("GrowSelection_StrkNearProtCorvC1")
    KASSobGroup_Create("GrowSelection_StrkNearProtCorvC2")
    KASSobGroup_Create("GrowSelection_StrkSYerDead")
    KASSobGroup_Create("GrowSelection_StrkVictemProtCorvC1")
    KASSobGroup_Create("GrowSelection_StrkVictemProtCorvC2")
    KASSobGroup_Create("GrowSelection_StrkVictemsMc1")
    KASSobGroup_Create("GrowSelection_StrkVictemsMc2")
    KASSobGroup_Create("GrowSelection_VictemFrig1")
    KASSobGroup_Create("GrowSelection_VictemFrig2")
    KASSobGroup_Create("GrowSelection_VictemProtCorvC1")
    KASSobGroup_Create("GrowSelection_VictemProtCorvC2")
    KASSobGroup_Create("GrowSelection_VictemProtFightersC1a")
    KASSobGroup_Create("GrowSelection_VictemProtFightersC1b")
    KASSobGroup_Create("GrowSelection_VictemProtFightersC2a")
    KASSobGroup_Create("GrowSelection_VictemProtFightersC2b")
    KASSobGroup_Create("GrowSelection_VictemsAF1")
    KASSobGroup_Create("GrowSelection_VictemsAF2")
    KASSobGroup_Create("GrowSelection_VictemsHaters")
    KASSobGroup_Create("GrowSelection_VictemsMc1")
    KASSobGroup_Create("GrowSelection_VictemsMc2")
    KASSobGroup_Create("GrowSelection_WinnerShips")
    KASSobGroup_Create("GrowSelection_YoullGetYours")
    KASSobGroup_CreateIfNotExist("AttackFighters1")
    KASSobGroup_CreateIfNotExist("AttackFighters2")
    KASSobGroup_CreateIfNotExist("AttackMslCorvettes1")
    KASSobGroup_CreateIfNotExist("AttackMslCorvettes2")
    KASSobGroup_CreateIfNotExist("DummyTeam")
    KASSobGroup_CreateIfNotExist("PDefenseL1")
    KASSobGroup_CreateIfNotExist("PDefenseL10")
    KASSobGroup_CreateIfNotExist("PDefenseL11")
    KASSobGroup_CreateIfNotExist("PDefenseL12")
    KASSobGroup_CreateIfNotExist("PDefenseL13")
    KASSobGroup_CreateIfNotExist("PDefenseL14")
    KASSobGroup_CreateIfNotExist("PDefenseL15")
    KASSobGroup_CreateIfNotExist("PDefenseL16")
    KASSobGroup_CreateIfNotExist("PDefenseL17")
    KASSobGroup_CreateIfNotExist("PDefenseL18")
    KASSobGroup_CreateIfNotExist("PDefenseL2")
    KASSobGroup_CreateIfNotExist("PDefenseL21")
    KASSobGroup_CreateIfNotExist("PDefenseL22")
    KASSobGroup_CreateIfNotExist("PDefenseL23")
    KASSobGroup_CreateIfNotExist("PDefenseL24")
    KASSobGroup_CreateIfNotExist("PDefenseL25")
    KASSobGroup_CreateIfNotExist("PDefenseL26")
    KASSobGroup_CreateIfNotExist("PDefenseL27")
    KASSobGroup_CreateIfNotExist("PDefenseL28")
    KASSobGroup_CreateIfNotExist("PDefenseL29")
    KASSobGroup_CreateIfNotExist("PDefenseL3")
    KASSobGroup_CreateIfNotExist("PDefenseL30")
    KASSobGroup_CreateIfNotExist("PDefenseL31")
    KASSobGroup_CreateIfNotExist("PDefenseL32")
    KASSobGroup_CreateIfNotExist("PDefenseL33")
    KASSobGroup_CreateIfNotExist("PDefenseL34")
    KASSobGroup_CreateIfNotExist("PDefenseL35")
    KASSobGroup_CreateIfNotExist("PDefenseL36")
    KASSobGroup_CreateIfNotExist("PDefenseL37")
    KASSobGroup_CreateIfNotExist("PDefenseL38")
    KASSobGroup_CreateIfNotExist("PDefenseL4")
    KASSobGroup_CreateIfNotExist("PDefenseL41")
    KASSobGroup_CreateIfNotExist("PDefenseL42")
    KASSobGroup_CreateIfNotExist("PDefenseL43")
    KASSobGroup_CreateIfNotExist("PDefenseL44")
    KASSobGroup_CreateIfNotExist("PDefenseL45")
    KASSobGroup_CreateIfNotExist("PDefenseL46")
    KASSobGroup_CreateIfNotExist("PDefenseL47")
    KASSobGroup_CreateIfNotExist("PDefenseL48")
    KASSobGroup_CreateIfNotExist("PDefenseL49")
    KASSobGroup_CreateIfNotExist("PDefenseL5")
    KASSobGroup_CreateIfNotExist("PDefenseL50")
    KASSobGroup_CreateIfNotExist("PDefenseL51")
    KASSobGroup_CreateIfNotExist("PDefenseL52")
    KASSobGroup_CreateIfNotExist("PDefenseL53")
    KASSobGroup_CreateIfNotExist("PDefenseL54")
    KASSobGroup_CreateIfNotExist("PDefenseL55")
    KASSobGroup_CreateIfNotExist("PDefenseL56")
    KASSobGroup_CreateIfNotExist("PDefenseL57")
    KASSobGroup_CreateIfNotExist("PDefenseL58")
    KASSobGroup_CreateIfNotExist("PDefenseL6")
    KASSobGroup_CreateIfNotExist("PDefenseL7")
    KASSobGroup_CreateIfNotExist("PDefenseL8")
    KASSobGroup_CreateIfNotExist("PDefenseL9")
    KASSobGroup_CreateIfNotExist("PDefenseS1")
    KASSobGroup_CreateIfNotExist("PDefenseS10")
    KASSobGroup_CreateIfNotExist("PDefenseS11")
    KASSobGroup_CreateIfNotExist("PDefenseS12")
    KASSobGroup_CreateIfNotExist("PDefenseS13")
    KASSobGroup_CreateIfNotExist("PDefenseS14")
    KASSobGroup_CreateIfNotExist("PDefenseS15")
    KASSobGroup_CreateIfNotExist("PDefenseS16")
    KASSobGroup_CreateIfNotExist("PDefenseS17")
    KASSobGroup_CreateIfNotExist("PDefenseS18")
    KASSobGroup_CreateIfNotExist("PDefenseS2")
    KASSobGroup_CreateIfNotExist("PDefenseS21")
    KASSobGroup_CreateIfNotExist("PDefenseS22")
    KASSobGroup_CreateIfNotExist("PDefenseS23")
    KASSobGroup_CreateIfNotExist("PDefenseS24")
    KASSobGroup_CreateIfNotExist("PDefenseS25")
    KASSobGroup_CreateIfNotExist("PDefenseS26")
    KASSobGroup_CreateIfNotExist("PDefenseS27")
    KASSobGroup_CreateIfNotExist("PDefenseS28")
    KASSobGroup_CreateIfNotExist("PDefenseS29")
    KASSobGroup_CreateIfNotExist("PDefenseS3")
    KASSobGroup_CreateIfNotExist("PDefenseS30")
    KASSobGroup_CreateIfNotExist("PDefenseS31")
    KASSobGroup_CreateIfNotExist("PDefenseS32")
    KASSobGroup_CreateIfNotExist("PDefenseS33")
    KASSobGroup_CreateIfNotExist("PDefenseS34")
    KASSobGroup_CreateIfNotExist("PDefenseS35")
    KASSobGroup_CreateIfNotExist("PDefenseS36")
    KASSobGroup_CreateIfNotExist("PDefenseS37")
    KASSobGroup_CreateIfNotExist("PDefenseS38")
    KASSobGroup_CreateIfNotExist("PDefenseS4")
    KASSobGroup_CreateIfNotExist("PDefenseS41")
    KASSobGroup_CreateIfNotExist("PDefenseS42")
    KASSobGroup_CreateIfNotExist("PDefenseS43")
    KASSobGroup_CreateIfNotExist("PDefenseS44")
    KASSobGroup_CreateIfNotExist("PDefenseS45")
    KASSobGroup_CreateIfNotExist("PDefenseS46")
    KASSobGroup_CreateIfNotExist("PDefenseS47")
    KASSobGroup_CreateIfNotExist("PDefenseS48")
    KASSobGroup_CreateIfNotExist("PDefenseS49")
    KASSobGroup_CreateIfNotExist("PDefenseS5")
    KASSobGroup_CreateIfNotExist("PDefenseS50")
    KASSobGroup_CreateIfNotExist("PDefenseS51")
    KASSobGroup_CreateIfNotExist("PDefenseS52")
    KASSobGroup_CreateIfNotExist("PDefenseS53")
    KASSobGroup_CreateIfNotExist("PDefenseS54")
    KASSobGroup_CreateIfNotExist("PDefenseS55")
    KASSobGroup_CreateIfNotExist("PDefenseS56")
    KASSobGroup_CreateIfNotExist("PDefenseS57")
    KASSobGroup_CreateIfNotExist("PDefenseS58")
    KASSobGroup_CreateIfNotExist("PDefenseS6")
    KASSobGroup_CreateIfNotExist("PDefenseS7")
    KASSobGroup_CreateIfNotExist("PDefenseS8")
    KASSobGroup_CreateIfNotExist("PDefenseS9")
    KASSobGroup_CreateIfNotExist("ProtCorvettesC1")
    KASSobGroup_CreateIfNotExist("ProtCorvettesC2")
    KASSobGroup_CreateIfNotExist("ProtFightersC1a")
    KASSobGroup_CreateIfNotExist("ProtFightersC1b")
    KASSobGroup_CreateIfNotExist("ProtFightersC2a")
    KASSobGroup_CreateIfNotExist("ProtFightersC2b")
    KASSobGroup_CreateIfNotExist("ResourceHaters")
    KASSobGroup_CreateIfNotExist("TuranicCarrier1")
    KASSobGroup_CreateIfNotExist("TuranicCarrier2")
    KASSobGroup_CreateIfNotExist("TuranicFrigs1")
    KASSobGroup_CreateIfNotExist("TuranicFrigs2")

    Sound_SpeechSubtitlePath("speech:missions/Mission05OEM/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;AttackFighters1;AttackFighters2;AttackMslCorvettes1;AttackMslCorvettes2;DummyTeam;PDefenseL1;PDefenseL10;PDefenseL11;PDefenseL12;PDefenseL13;PDefenseL14;PDefenseL15;PDefenseL16;PDefenseL17;PDefenseL18;PDefenseL2;PDefenseL21;PDefenseL22;PDefenseL23;PDefenseL24;PDefenseL25;PDefenseL26;PDefenseL27;PDefenseL28;PDefenseL29;PDefenseL3;PDefenseL30;PDefenseL31;PDefenseL32;PDefenseL33;PDefenseL34;PDefenseL35;PDefenseL36;PDefenseL37;PDefenseL38;PDefenseL4;PDefenseL41;PDefenseL42;PDefenseL43;PDefenseL44;PDefenseL45;PDefenseL46;PDefenseL47;PDefenseL48;PDefenseL49;PDefenseL5;PDefenseL50;PDefenseL51;PDefenseL52;PDefenseL53;PDefenseL54;PDefenseL55;PDefenseL56;PDefenseL57;PDefenseL58;PDefenseL6;PDefenseL7;PDefenseL8;PDefenseL9;PDefenseS1;PDefenseS10;PDefenseS11;PDefenseS12;PDefenseS13;PDefenseS14;PDefenseS15;PDefenseS16;PDefenseS17;PDefenseS18;PDefenseS2;PDefenseS21;PDefenseS22;PDefenseS23;PDefenseS24;PDefenseS25;PDefenseS26;PDefenseS27;PDefenseS28;PDefenseS29;PDefenseS3;PDefenseS30;PDefenseS31;PDefenseS32;PDefenseS33;PDefenseS34;PDefenseS35;PDefenseS36;PDefenseS37;PDefenseS38;PDefenseS4;PDefenseS41;PDefenseS42;PDefenseS43;PDefenseS44;PDefenseS45;PDefenseS46;PDefenseS47;PDefenseS48;PDefenseS49;PDefenseS5;PDefenseS50;PDefenseS51;PDefenseS52;PDefenseS53;PDefenseS54;PDefenseS55;PDefenseS56;PDefenseS57;PDefenseS58;PDefenseS6;PDefenseS7;PDefenseS8;PDefenseS9;ProtCorvettesC1;ProtCorvettesC2;ProtFightersC1a;ProtFightersC1b;ProtFightersC2a;ProtFightersC2b;ResourceHaters;TuranicCarrier1;TuranicCarrier2;TuranicFrigs1;TuranicFrigs2;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    KAS_SetColourScheme("AttackFighters1", 1)
    KAS_SetColourScheme("AttackFighters2", 1)
    KAS_SetColourScheme("AttackMslCorvettes1", 1)
    KAS_SetColourScheme("AttackMslCorvettes2", 1)
    KAS_SetColourScheme("PDefenseL1", 1)
    KAS_SetColourScheme("PDefenseL10", 1)
    KAS_SetColourScheme("PDefenseL11", 1)
    KAS_SetColourScheme("PDefenseL12", 1)
    KAS_SetColourScheme("PDefenseL13", 1)
    KAS_SetColourScheme("PDefenseL14", 1)
    KAS_SetColourScheme("PDefenseL15", 1)
    KAS_SetColourScheme("PDefenseL16", 1)
    KAS_SetColourScheme("PDefenseL17", 1)
    KAS_SetColourScheme("PDefenseL18", 1)
    KAS_SetColourScheme("PDefenseL2", 1)
    KAS_SetColourScheme("PDefenseL21", 1)
    KAS_SetColourScheme("PDefenseL22", 1)
    KAS_SetColourScheme("PDefenseL23", 1)
    KAS_SetColourScheme("PDefenseL24", 1)
    KAS_SetColourScheme("PDefenseL25", 1)
    KAS_SetColourScheme("PDefenseL26", 1)
    KAS_SetColourScheme("PDefenseL27", 1)
    KAS_SetColourScheme("PDefenseL28", 1)
    KAS_SetColourScheme("PDefenseL29", 1)
    KAS_SetColourScheme("PDefenseL3", 1)
    KAS_SetColourScheme("PDefenseL30", 1)
    KAS_SetColourScheme("PDefenseL31", 1)
    KAS_SetColourScheme("PDefenseL32", 1)
    KAS_SetColourScheme("PDefenseL33", 1)
    KAS_SetColourScheme("PDefenseL34", 1)
    KAS_SetColourScheme("PDefenseL35", 1)
    KAS_SetColourScheme("PDefenseL36", 1)
    KAS_SetColourScheme("PDefenseL37", 1)
    KAS_SetColourScheme("PDefenseL38", 1)
    KAS_SetColourScheme("PDefenseL4", 1)
    KAS_SetColourScheme("PDefenseL41", 1)
    KAS_SetColourScheme("PDefenseL42", 1)
    KAS_SetColourScheme("PDefenseL43", 1)
    KAS_SetColourScheme("PDefenseL44", 1)
    KAS_SetColourScheme("PDefenseL45", 1)
    KAS_SetColourScheme("PDefenseL46", 1)
    KAS_SetColourScheme("PDefenseL47", 1)
    KAS_SetColourScheme("PDefenseL48", 1)
    KAS_SetColourScheme("PDefenseL49", 1)
    KAS_SetColourScheme("PDefenseL5", 1)
    KAS_SetColourScheme("PDefenseL50", 1)
    KAS_SetColourScheme("PDefenseL51", 1)
    KAS_SetColourScheme("PDefenseL52", 1)
    KAS_SetColourScheme("PDefenseL53", 1)
    KAS_SetColourScheme("PDefenseL54", 1)
    KAS_SetColourScheme("PDefenseL55", 1)
    KAS_SetColourScheme("PDefenseL56", 1)
    KAS_SetColourScheme("PDefenseL57", 1)
    KAS_SetColourScheme("PDefenseL58", 1)
    KAS_SetColourScheme("PDefenseL6", 1)
    KAS_SetColourScheme("PDefenseL7", 1)
    KAS_SetColourScheme("PDefenseL8", 1)
    KAS_SetColourScheme("PDefenseL9", 1)
    KAS_SetColourScheme("PDefenseS1", 1)
    KAS_SetColourScheme("PDefenseS10", 1)
    KAS_SetColourScheme("PDefenseS11", 1)
    KAS_SetColourScheme("PDefenseS12", 1)
    KAS_SetColourScheme("PDefenseS13", 1)
    KAS_SetColourScheme("PDefenseS14", 1)
    KAS_SetColourScheme("PDefenseS15", 1)
    KAS_SetColourScheme("PDefenseS16", 1)
    KAS_SetColourScheme("PDefenseS17", 1)
    KAS_SetColourScheme("PDefenseS18", 1)
    KAS_SetColourScheme("PDefenseS2", 1)
    KAS_SetColourScheme("PDefenseS21", 1)
    KAS_SetColourScheme("PDefenseS22", 1)
    KAS_SetColourScheme("PDefenseS23", 1)
    KAS_SetColourScheme("PDefenseS24", 1)
    KAS_SetColourScheme("PDefenseS25", 1)
    KAS_SetColourScheme("PDefenseS26", 1)
    KAS_SetColourScheme("PDefenseS27", 1)
    KAS_SetColourScheme("PDefenseS28", 1)
    KAS_SetColourScheme("PDefenseS29", 1)
    KAS_SetColourScheme("PDefenseS3", 1)
    KAS_SetColourScheme("PDefenseS30", 1)
    KAS_SetColourScheme("PDefenseS31", 1)
    KAS_SetColourScheme("PDefenseS32", 1)
    KAS_SetColourScheme("PDefenseS33", 1)
    KAS_SetColourScheme("PDefenseS34", 1)
    KAS_SetColourScheme("PDefenseS35", 1)
    KAS_SetColourScheme("PDefenseS36", 1)
    KAS_SetColourScheme("PDefenseS37", 1)
    KAS_SetColourScheme("PDefenseS38", 1)
    KAS_SetColourScheme("PDefenseS4", 1)
    KAS_SetColourScheme("PDefenseS41", 1)
    KAS_SetColourScheme("PDefenseS42", 1)
    KAS_SetColourScheme("PDefenseS43", 1)
    KAS_SetColourScheme("PDefenseS44", 1)
    KAS_SetColourScheme("PDefenseS45", 1)
    KAS_SetColourScheme("PDefenseS46", 1)
    KAS_SetColourScheme("PDefenseS47", 1)
    KAS_SetColourScheme("PDefenseS48", 1)
    KAS_SetColourScheme("PDefenseS49", 1)
    KAS_SetColourScheme("PDefenseS5", 1)
    KAS_SetColourScheme("PDefenseS50", 1)
    KAS_SetColourScheme("PDefenseS51", 1)
    KAS_SetColourScheme("PDefenseS52", 1)
    KAS_SetColourScheme("PDefenseS53", 1)
    KAS_SetColourScheme("PDefenseS54", 1)
    KAS_SetColourScheme("PDefenseS55", 1)
    KAS_SetColourScheme("PDefenseS56", 1)
    KAS_SetColourScheme("PDefenseS57", 1)
    KAS_SetColourScheme("PDefenseS58", 1)
    KAS_SetColourScheme("PDefenseS6", 1)
    KAS_SetColourScheme("PDefenseS7", 1)
    KAS_SetColourScheme("PDefenseS8", 1)
    KAS_SetColourScheme("PDefenseS9", 1)
    KAS_SetColourScheme("ProtCorvettesC1", 1)
    KAS_SetColourScheme("ProtCorvettesC2", 1)
    KAS_SetColourScheme("ProtFightersC1a", 1)
    KAS_SetColourScheme("ProtFightersC1b", 1)
    KAS_SetColourScheme("ProtFightersC2a", 1)
    KAS_SetColourScheme("ProtFightersC2b", 1)
    KAS_SetColourScheme("ResourceHaters", 1)
    KAS_SetColourScheme("TuranicCarrier1", 1)
    KAS_SetColourScheme("TuranicCarrier2", 1)
    KAS_SetColourScheme("TuranicFrigs1", 1)
    KAS_SetColourScheme("TuranicFrigs2", 1)
    Player_SetPlayerName(1, "$62825")
    Player_SetPlayerName(3, "$60505")

    singlePlayerOnStartOrLoad(05)
end

function OnInit()
    print("OnInit issued")

    KAS_TeamCountRegister("ProtCorvettesC1")
    KAS_TeamCountRegister("ProtCorvettesC2")
    KAS_TeamCountRegister("ProtFightersC1a")
    KAS_TeamCountRegister("ProtFightersC1b")
    KAS_TeamCountRegister("ProtFightersC2a")
    KAS_TeamCountRegister("ProtFightersC2b")
    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(05)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission05OEM", "Watch_Mission05OEM", "OnInit")
    Init_Mission05OEM("Mission05OEM")
    KAS_SetLetterboxStart(1, 5, 1, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A04_mission5", MUS_Ambient )
    KAS_SetFormation("TuranicFrigs1", "Claw")
    KAS_SetFormation("TuranicFrigs2", "Claw")
end

