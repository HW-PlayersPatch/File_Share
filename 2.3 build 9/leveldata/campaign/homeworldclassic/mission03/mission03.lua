--
--  Generated\Mission03.c
--
--  Finite state machine routines for "Mission03" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission03.kp by KAS2C Version 2.05
--


--#include "Generated\Mission03.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_CLICK_CaptureOne = 0
G_CLICK_DefendCryos = 0
G_CLICK_GoForCryos = 0
G_EF1BusyCorvettes = 0
G_EF1BusyFighters = 0
G_EF1BusySalCap = 0
G_EnemyFrig01Captured = 0
G_EnemyFrig01Escaped = 0
G_EnemyFrig02Captured = 0
G_EnemyFrig02Escaped = 0
G_Escaping = 0
G_HelpEnemyFrig01 = 0
G_ImNotDeadYetCaptured = 0
G_ImNotDeadYetEscaped = 0
G_SalCapNearby = 0
G_SalcapKilled = 0
G_TechnologyStolen = 0
SalcapCurCount = 0
SalcapLastCount = 0
_VIFONCE017 = 0
_VIFONCE018 = 0
_VIFONCE019 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.
--G_Nis3Complete : see SinglePlayerFlow.lua, nReferences: 2
--G_PlayNis : see SinglePlayerFlow.lua, nReferences: 1
--G_SalvageCryoTray : see SinglePlayerFlow.lua, nReferences: 2
--G_SalvageFrigate : see SinglePlayerFlow.lua, nReferences: 2
--G_SalvageHandOff : see SinglePlayerFlow.lua, nReferences: 3

--Following are Team-Scoped variables: referenced differently than globals.
AttackReissued = {["ImNotDeadYet"] = 0}
AvoidingFire = {["ImNotDeadYet"] = 0}
CryosSalvaged = {["ImNotHere"] = 0}
FrigatesOutOfThePicture = {["ImNotHere"] = 0}
GameOver = {["ImNotHere"] = 0}
InNULLState = {["EnemyFrig01"] = 0, ["EnemyFrig02"] = 0, ["ImNotDeadYet"] = 0}
InNullState = {["ImNotHere"] = 0}
Intel = {["ImNotHere"] = 0}
NumSalCaps = {["EnemyFrig01"] = 0, ["EnemyFrig02"] = 0, ["ImNotDeadYet"] = 0}
ObjectiveCreated = {["ImNotHere"] = 0}
Replay = {["ImNotHere"] = 0}
Skip = {["ImNotHere"] = 0}
_VIFONCE001 = {["ImNotHere"] = 0}
_VIFONCE002 = {["ImNotHere"] = 0}
_VIFONCE003 = {["ImNotHere"] = 0}
_VIFONCE004 = {["ImNotHere"] = 0}
_VIFONCE005 = {["ImNotHere"] = 0}
_VIFONCE006 = {["ImNotHere"] = 0}
_VIFONCE007 = {["ImNotHere"] = 0}
_VIFONCE008 = {["ImNotHere"] = 0}
_VIFONCE009 = {["EnemyFrig01"] = 0}
_VIFONCE010 = {["EnemyFrig01"] = 0}
_VIFONCE011 = {["EnemyFrig01"] = 0}
_VIFONCE012 = {["EnemyFrig02"] = 0}
_VIFONCE013 = {["EnemyFrig02"] = 0}
_VIFONCE014 = {["EnemyFrig02"] = 0}
_VIFONCE015 = {["ImNotDeadYet"] = 0}
_VIFONCE016 = {["ImNotDeadYet"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
AnalysePause = {["ImNotHere"] = 1}
AttackTimer = {["EnemyFrig01"] = 2, ["EnemyFrig02"] = 3}
Focus = {["ImNotHere"] = 4}
FocusCancel = {["ImNotHere"] = 5}
FocusFinger = {["ImNotHere"] = 6}
FocusScaffold = {["ImNotHere"] = 7}
LBX = {["ImNotHere"] = 8}
LBXTimer = {["ImNotHere"] = 9}
LetItSinkIn = {["ImNotHere"] = 10}
LocationCardTimer = {["ImNotHere"] = 11}
Pointers = {["ImNotHere"] = 12}
SalCapTimer = {["EnemyFrig01"] = 13, ["EnemyFrig02"] = 14, ["ImNotDeadYet"] = 15}
Searching = {["ImNotHere"] = 16}
SinkIn = {["ImNotHere"] = 17}
StealingTechnology = {["ImNotHere"] = 18}
WithdrawDelay = {["ImNotHere"] = 19}


--kas timer names, with mappings to indices
TimerID_G_SalCapNearbyRepeat = 0


--KAS objective names, set by KASObjective_Add
ObjectiveID_CaptureOne = 0
ObjectiveID_DefendCryos = 1
ObjectiveID_GoForCryos = 2
ObjectiveID_Hyperspace = 3
ObjectiveID_Count = 4


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_Attackers = 1
PointerID_Cryos = 2
PointerID_PunyCryoTrays = 0


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_LCLocationCard = {  -- multilingual strings
	"KHARAK SYSTEM",
	"SYSTEME KHARAK",
	"KHARAK-SYSTEM",
	"SISTEMA DE KHARAK",
	"SISTEMA DI KHARAK", }
LSTRING_FCFleetCommandFreaks = {  -- multilingual strings
	"It's gone. . .Everything's gone!. . .Kharak is burning!",
	"Disparu. . . Tout a disparu !. . . Kharak est en flammes !",
	"Nichts ... Alles ist weg! ... ... Kharak steht in Flammen!",
	"Ha desaparecido. . Todo ha desaparecido. . ¡Kharak está en llamas!",
	"È perduto… Tutto è perduto! Kharak sta bruciando!", }
LSTRING_FINervousIntel = {  -- multilingual strings
	"A-Analyzing Kharak... \nNorthern polar regions have been consumed by some kind of firestorm.  All cities still burning... Average surface temperature two six four.  The Scaffold has been destroyed.  All orbital facilities destroyed.  Significant debris ring in low Kharak orbit.\n\nReceiving no communications from anywhere in the system... Not even automated beacons.",
	"Bilan de la situation à Kharak... \nRégions polaires septentrionales dévastées par tornade de flammes.  Totalité zones urbaines flambe encore ... Température moyenne en surface deux soixante-quatre. Echafaud détruit. Totalité installations orbitales détruite. Anneau de débris révélateur sur orbite inférieure de Kharak.\n\nRéception nulle des communications venant d'aucun point du système... Pas même des balises autonomes.",
	"Analyse von Kharak ... \nDie nördlichen Polarregionen wurden von einer Art Feuersturm vernichtet. Die Städte stehen noch immer in Flammen ... Durchschnittliche Oberflächentemperatur bei Zwo-Sechs-Vier. Die Rampe wurde zerstört. Alle Orbit-Einrichtungen vernichtet. Auffälliger Trümmerring im niedrigen Orbit um Kharak.\n\nKeinerlei Kommunikation im System zu empfangen ... Nicht einmal stationäre Signale.",
	"Analizando Kharak... \nUna especie de tormenta de fuego ha destruido el polo norte.  Todas las ciudades siguen ardiendo. Temperatura media de la superficie: 128 grados.  El andamio ha sido destruido.  Todas las instalaciones orbitales están destruidas.  Considerable anillo de residuos en la órbita baja de Kharak.\n\nNo se reciben comunicaciones de ningún lugar del sistema... Ni siquiera llegan balizas automáticas.",
	"A-Analisi di Kharak... \nLe regioni polari settentrionali sono state martoriate da una sorta di tempesta di fuoco. Tutte le città stanno ancora bruciando... La temperatura media della superficie è di 264 gradi. Lo Scaffold è stato distrutto. Tutti i centri orbitali sono stati distrutti. Significativi anelli di frammenti nella bassa orbita di Kharak.\n\nMancata ricezione di comunicazioni provenienti dal sistema, non ricevo nemmeno i radiofari automatici.", }
LSTRING_FCFleetCommandHasHope = {  -- multilingual strings
	"Wait!  On the maintenance frequency.  I'm getting a signal from the Cryogenic Tray systems in orbit.  One of them is suffering a massive malfunction.",
	"Attendez ! Sur la fréquence de maintenance, je reçois un signal des plates-formes cryogéniques placées sur orbite. Défaillance massive d'une des unités.",
	"Moment mal! Auf der Wartungsfrequenz ... Ich fange da ein Signal von den im Orbit befindlichen Kälteschlaf-Containersystemen auf. Eines davon zeigt eine massive Fehlfunktion.",
	"¡Espera! En la frecuencia de mantenimiento. Recibo una señal de los sistemas de soporte criogénico en órbita. Uno de ellos tiene graves problemas de funcionamiento.",
	"Un attimo! Sulla frequenza di manutenzione... Sto ricevendo un segnale dalle Camere Criogeniche orbitali. In una di esse, si è verificato un grave guasto.", }
LSTRING_FIGetThoseGuys = {  -- multilingual strings
	"The Cryo Trays are under attack.  Defend them.",
	"Les modules cryogéniques sont attaqués. Défendez-les",
	"Die Kälteschlaf-Container werden angegriffen. Sie müssen verteidigt werden. ",
	"Están atacando los soportes criogénicos. Defiéndelos.",
	"Le camere criogeniche sono sotto attacco: difendile.", }
LSTRING_OBDefendCryos = {  -- multilingual strings
	"Defend cryo trays",
	"Défendre les modules cryogéniques",
	"Kälteschlaf-Container verteidigen.",
	"Defiende los soportes criogénicos",
	"Difendi le camere criogeniche", }
LSTRING_FIThoseGuysAreMeanies = {  -- multilingual strings
	"These ships are not, repeat NOT related to the hostile units we previously encountered.  We must capture at least one vessel to find out who is responsible for this genocide.  Intelligence is vital to our immediate survival.",
	"Plates-formes cryos attaquées.\n\nPar vaisseaux non-apparentés, je souligne NON-apparentés, aux unités hostiles rencontrées précédemment. Il est nécessaire de capturer au moins une unité pour déterminer qui est responsable de ce génocide. Notre survie immédiate dépend des Renseignements.",
	"Die Kälteschlaf-Container werden angegriffen.\n\nDiese Schiffe haben nichts, ich wiederhole NICHTS, mit den früher angetroffenen feindlichen Einheiten zu tun. Wir müssen wenigsten ein Schiff übernehmen, um herauszufinden, wer für diesen Genozid verantwortlich ist. Informationen sind für unser Überleben jetzt äußerst wichtig.",
	"Estas naves no están, repito, no están relacionadas con las unidades hostiles encontradas anteriormente. Debemos capturar al menos una nave para descubrir al responsable de este genocidio. La inteligencia es básica para la supervivencia inmediata.",
	"Queste navi non sono, ripeto, NON sono collegate alle unità ostili che abbiamo incontrato in precedenza. Dobbiamo catturare almeno un vascello per scoprire chi è il responsabile di questo genocidio. Queste informazioni sono vitali per la nostra sopravvivenza.", }
LSTRING_OBObjective1 = {  -- multilingual strings
	"Capture enemy ship using 2 Salvage Corvettes",
	"Capture Unité ennemie avec 2 Corvettes de Recuperation",
	"Feindliches Schlachtschiff mit 2 Bergungskorvetten erobern.",
	"Captura la nave enemiga utilizando 2 corbetas de salvamento",
	"Cattura l'astronave nemica con 2 Corvette di Recupero", }
LSTRING_FIWeveKilledTheMeanies = {  -- multilingual strings
	"Enemy units neutralized.  Begin salvaging the cryo trays.",
	"Unités ennemies neutralisées. Récupérez les modules cryogéniques.",
	"Feindliche Einheiten neutralisiert. Beginnen Sie mit der Bergung der Kälteschlaf-Container.",
	"Neutralizadas las unidades enemigas. Comienza el rescate de los soportes criogénicos.",
	"Unità nemica neutralizzata. Comincia il recupero delle camere criogeniche.", }
LSTRING_OBSalvageCryos = {  -- multilingual strings
	"Salvage cryo trays",
	"Sauver les plates-formes",
	"Container abholen",
	"Rescata los soportes criogénicos",
	"Recupera le camere criogeniche", }
LSTRING_FCSaveThoseCryos = {  -- multilingual strings
	"The people in those trays are all that remain of our people.  Without them, we will become extinct.",
	"Les individus à bord des plates-formes sont les derniers survivants de notre espèce. S'ils disparaissent, c'est l'extinction.",
	"Die Menschen in diesen Containern sind der ganze Rest unseres Volkes. Ohne sie werden wir aussterben.",
	"Las personas que se encuentran en esos soportes son todo lo que queda de nuestro pueblo. Sin ellos nos extinguiremos.",
	"Le persone in quelle camere criogeniche sono tutto ciò che resta della nostra razza. Senza di loro, siamo destinati all'estinzione.", }
LSTRING_OBObjective2 = {  -- multilingual strings
	"Destroy remaining enemy ships",
	"Destruction reliquat flotte ennemie",
	"Verbleibende feindliche Schiffe vernichten.",
	"Destruir las naves enemigas restantes",
	"Distruggi le navi nemiche restanti", }
LSTRING_FIFoundRecording = {  -- multilingual strings
	"Hostile vessel captured.  Crew interned.  Interrogation will take place on a neuronic level.  Subjects will not survive.  While searching the enemy ship's computer systems, we came across these flight recordings.",
	"Vaisseau hostile capturé. Equipage interné. Interrogatoire neurophysiologique imminent.  Survie des sujets impossible. Nous sommes tombés sur ces enregistrements de vol pendant la fouille des systèmes informatiques du vaisseau ennemi.",
	"Feindliches Schiff übernommen. Mannschaft gefangen genommen. Befragung wird auf neuronaler Stufe durchgeführt. Die Untersuchungsobjekte werden nicht überleben. Bei der Untersuchung der Computersysteme des feindlichen Schiffs sind wir auf folgende Flugdaten gestoßen.",
	"Nave enemiga capturada.  Tripulación bajo custodia.  Serán sometidos a interrogatorio neuronal.  No sobrevivirán.  Al examinar los sistemas informáticos de la nave enemiga hemos encontrado estos cuadernos de bitácora.",
	"Vascello nemico catturato, l'equipaggio è stato internato per l'interrogatorio a livello neurologico. I soggetti non sopravviveranno. Nell'esame dei computer della nave nemica, abbiamo trovato alcuni dati del registratore di volo.", }
LSTRING_FITheyreBiggerThanUs = {  -- multilingual strings
	"...Analysis of the recording indicates that the Kharak missile defenses heavily damaged the attacking fleet.\n\nHowever, we have concluded that they can still easily defeat us.  Based on scanner telemetry recovered from the Khar-Selim, we have plotted a course to a deep space asteroid belt.\n\nOnce we have built a sufficient attack fleet there, we will be ready to track down the enemy and destroy them.",
	"...Après examen, ces enregistrements indiquent que les batteries de missiles defensifs de Kharak ont infligé des pertes importantes à l'agresseur.\n\nMais ses forces restent bien supérieures aux nôtres. A partir des données télémétriques numérisées récupérées au Khar-Selim, nous nous sommes déterminé une trajectoire vers une ceinture d'asteroïdes lointaine.\n\nDe là, après avoir rassemblé une flotte d'attaque suffisante, nous pourrons pourchasser l'ennemi et l'anéantir.",
	"... Die Analyse der Aufzeichnungen zeigen, dass die Raketenverteidigung von Kharak der angreifenden Flotte schwere Schäden zugefügt hat.\n\nTrotzdem sind wir der Überzeugung, dass der Feind uns noch immer mit Leichtigkeit besiegen kann. Basierend auf den Scanner-Telemetrie-Daten, die von der Khar-Selim geborgen wurden, haben wir einen Kurs zu einem weit entlegenen Asteroidengürtel berechnet.\n\nSobald wir dort eine genügend große Angriffsflotte gebaut haben, können wir den Feind stellen und vernichten.",
	"El análisis de la grabación indica que las defensas de misiles de Kharak han provocado graves daños a la flota de ataque.\n\nSin embargo, creemos que pueden derrotarnos con facilidad.  A partir de la telemetría recuperada del Khar-Selim hemos trazado un curso a un cinturón de asteroides en el espacio profundo.\n\nCuando hayamos creado una flota de ataque suficiente, estaremos preparados para seguir al enemigo y destruirlo.",
	"... Le analisi dei dati indicano che le difese missilistiche di Kharak hanno inflitto pesanti danni alla flotta attaccante.\n\nPurtroppo, i nostri nemici sembrano in grado di sconfiggerci con facilità. Usando i dati delle scansioni recuperate dal Khar-Selim, abbiamo elaborato una rotta verso una cintura asteroidale nello spazio profondo.\n\nLà assembleremo una forza d'attacco sufficientemente forte da rintracciare e distruggere il nemico.", }
LSTRING_FIResearchTaken = {  -- multilingual strings
	"Our research division has analyzed the captured frigate.  We have reverse engineered their drive technology and developed plans for two new ships. The Support Frigate will provide repair and refuel service to Strike Craft in the field.The Resource Controller will allow for remote collection of resources.  Plans for a third vessel are underway, but first the captured Frigate's chassis must be researched.",
	"La Frégate capturée a été analysée par notre service scientifique. L'inversion de leur technologie de propulsion a permis de tracer les plans de deux nouveaux vaisseaux. La Frégate d'assistance assurera la réparation et le ravitaillement des Unités légères en action. Le Contrôleur des Ressources  permettra la collecte lointaine de ressources. La conception d'un troisième vaisseau continuera après l'analyse technique du châssis de la Frégate capturée.",
	"Unsere Forschungsabteilung hat die erbeutete Fregatte analysiert. Wir haben die Komponenten ihrer Antriebstechnologie zurückentwickelt und mit Hilfe dieser Erkenntnisse Pläne für zwei neue Schiffe erstellt. Die Begleitfregatte wird den Kampfschiffen im Feld für Reparaturen und zur Ergänzung des Treibstoffvorrats zur Verfügung stehen. Das Rohstoffüberwachungsschiff wird das Sammeln entfernter Rohstoffe ermöglichen. Pläne für ein drittes Schiff sind in Arbeit. Aber zunächst muss das Chassis der erbeuteten Fregatte erforscht werden.",
	"Nuestra división de investigación ha analizado la fragata capturada. El análisis de su tecnología de propulsión nos ha permitido elaborar planos para naves nuevas. La fragata de apoyo proporcionará servicio de reparación y reabastecimiento a las naves de ataque. El controlador de recursos permitirá recolectar recursos a distancia. Estamos trabajando en los planos de una tercera nave, pero antes hay que investigar el chasis de la fragata capturada.",
	"I nostri ricercatori hanno analizzato a fondo la fregata catturata; siamo riusciti a comprendere la tecnologia dei loro motori, sviluppando dei piani per due nuove astronavi. La Fregata di Supporto, che fornirà protezione e rifornimenti ai velivoli d'assalto sul campo, e il Collettore di Risorse, che ci permetterà di raccogliere risorse a distanza. Stiamo lavorando anche su una terza astronave, ma dobbiamo ancora esaminare a fondo la struttura del vascello nemico.", }
LSTRING_FCCryoSalvaged01 = {  -- multilingual strings
	"First cryo tray loaded. 100,000 colonists safely aboard the Mothership.",
	"Chargement de la première plate-forme cryo accompli. 100 000 colons sont à l'abri à bord du Vaisseau Mère.",
	"Erster Kälteschlaf-Container geladen. 100.000 Kolonisten sicher an Bord des Mutterschiffs.",
	"Primer soporte criogénico cargado. 100.000 colonos a salvo a bordo de la Nave nodriza.",
	"Prima Camera Criogenica al sicuro. 100.000 coloni sono sani e salvi a bordo dell'astronave madre.", }
LSTRING_FCCryoSalvaged02 = {  -- multilingual strings
	"Second cryo tray loaded. 200,000 colonists safely aboard the Mothership.",
	"Chargement de la deuxième plate-forme cryo accompli. 200,000 colons sont à l'abri à bord du Vaisseau Mère.",
	"Zweiter Kälteschlaf-Container geladen. 200.000 Kolonisten sicher an Bord des Mutterschiffs.",
	"Segundo soporte criogénico cargado. 200.000 colonos a salvo, a bordo de la Nave nodriza.",
	"Seconda Camera Criogenica al sicuro. 200.000 coloni sono sani e salvi a bordo dell'astronave madre.", }
LSTRING_FCCryoSalvaged03 = {  -- multilingual strings
	"Third cryo tray loaded. 300,000 colonists safely aboard the Mothership.",
	"Chargement de la troisième plate-forme cryo accompli. 300 000 colons sont à l'abri à bord du Vaisseau Mère.",
	"Dritter Kälteschlaf-Container geladen. 300.000 Kolonisten sicher an Bord des Mutterschiffs.",
	"Tercer soporte criogénico cargado. 300.000 colonos a salvo a bordo de la Nave nodriza.",
	"Terza Camera Criogenica al sicuro. 300.000 coloni sono sani e salvi a bordo dell'astronave madre.", }
LSTRING_FCCryoSalvaged04 = {  -- multilingual strings
	"Fourth cryo tray loaded. 400,000 colonists safely aboard the Mothership.",
	"Chargement de la quatrième plate-forme cryo accompli. 400 000 colons sont à l'abri à bord du Vaisseau Mère.",
	"Vierter Kälteschlaf-Container geladen. 400.000 Kolonisten sicher an Bord des Mutterschiffs.",
	"Cuarto soporte criogénico cargado. 400.000 colonos a salvo a bordo de la Nave nodriza.",
	"Quarta Camera Criogenica al sicuro. 400.000 coloni sono sani e salvi a bordo dell'astronave madre.", }
LSTRING_FCCryoSalvaged05 = {  -- multilingual strings
	"Fifth cryo tray loaded. 500,000 colonists safely aboard the Mothership.",
	"Chargement de la cinquième plate-forme cryo accompli. 500,000 colons sont à l'abri à bord du Vaisseau Mère.",
	"Fünfter Kälteschlaf-Container geladen. 500.000 Kolonisten sicher an Bord des Mutterschiffs.",
	"Quinto soporte criogénico cargado. 500.000 colonos a salvo a bordo de la Nave nodriza.",
	"Quinta Camera Criogenica al sicuro. 500.000 coloni sono sani e salvi a bordo dell'astronave madre.", }
LSTRING_FIWithdrawToSalvage = {  -- multilingual strings
	"Advise that we withdraw attack and deploy the Salvage Corvettes.  We need that ship captured.",
	"Communiqué : attaque interrompue et déploiement amorcé des Corvettes de sauvetage. La capture de ce vaisseau est prioritaire.",
	"Wir sollten den Angriff abbrechen und die Bergungskorvetten in Marsch setzen. Wir müssen dieses Schiff übernehmen.",
	"Recomendamos suspender el ataque y desplegar las corbetas de salvamento. Es necesario capturar esa nave.",
	"Consiglio di sospendere l'attacco e di inviare le Corvette di Recupero. Ci serve quell'astronave.", }
LSTRING_FCCryosDead = {  -- multilingual strings
	"We have failed.  The colonits were the last of our people. Without them we will perish.",
	"Echec de l'opération. Les colons étaient les derniers survivants de notre espèce. Leur disparition signifie l'extinction.",
	"Wir haben versagt. Die Kolonisten waren die Letzten unseres Volkes. Ohne sie werden wir aussterben.",
	"Hemos fracasado. Esos colonos eran todos los que quedaban de nuestro pueblo. Sin ellos, nos extinguiremos.",
	"Abbiamo fallito. I coloni erano tutta la nostra gente rimasta, senza di loro siamo destinati a perire.", }
LSTRING_FIFrigatesDiedEscaped = {  -- multilingual strings
	"We failed to capture the enemy vessel.  Without its information, we cannot proceed.",
	"La capture du vaisseau ennemi a échoué. Sans l'information qu'il contient, nous restons bloqués.",
	"Wir haben es nicht geschafft, das feindliche Schiff zu übernehmen. Ohne seine Informationen können wir nicht weiterarbeiten.",
	"No hemos conseguido capturar la nave enemiga. Sin esa información no podemos seguir.",
	"Non siamo riusciti a catturare il vascello nemico: senza la possibilità di esaminarlo non possiamo fare nulla!", }
LSTRING_LevelSave = {  -- multilingual strings
	"03 - Return To Kharak",
	"03 - Retour vers Kharak",
	"03 – Rückkehr nach Kharak",
	"03 - Volver a Kharak",
	"03 - Ritorno a Kharak", }
LSTRING_FIWereFinished = {  -- multilingual strings
	"Cryogenic Trays loaded.  Hyperspace module charged.  It's time to go after them.",
	"Chargement des plates-formes cryo accompli. Module Hyperspatial activé. L'heure est venue de leur faire la chasse.",
	"Kälteschlaf-Container geladen. Hypersprung-Modul aufgeladen. Es wird Zeit, dass wir die Verfolgung aufnehmen.",
	"Soportes criogénicos cargados. Módulo hiperespacial cargado. Ha llegado el momento de ir tras ellos.",
	"Camere Criogeniche a bordo. Modulo iperspaziale caricato. Siamo pronti a inseguirli.", }
LSTRING_TBHyperspace = {  -- multilingual strings
	"                HYPERSPACE",
	"                HYPERSPACE",
	"        HYPERRAUMSPRUNG",
	"              HIPERESPACIO",
	"				IPERSPAZIO", }
LSTRING_OBReadyToGo = {  -- multilingual strings
	"Cryogenic Trays loaded.  Hyperspace module charged.  It's time to go.",
	"Chargement des plates-formes cryo accompli. Module Hyperspatial activé. On y va.",
	"Kälteschlaf-Container geladen. Hypersprung-Modul aufgeladen. Es wird Zeit zum Abflug.",
	"Soportes criogénicos cargados. Módulo hiperespacial cargado. Ha llegado el momento de partir.",
	"Camere Criogeniche a bordo. Modulo iperspaziale caricato. È ora di andare.", }

--
--  "initialize" code for Mission03 ImNotHere FSM
--
function Init_Mission03_ImNotHere(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	Subtitle_ForceEventNotEnded()    --kasfIntelEventNotEnded()
	CryosSalvaged[TeamName] = 0 --created,set
	Intel[TeamName] = 0 --created,set
	InNullState[TeamName] = 0 --created,set
	--kasJump("LocationCard")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_LocationCard", "Init_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_LocationCard(TeamName)
	return
	
end


--
--  "watch" code for Mission03 ImNotHere FSM
--
function Watch_Mission03_ImNotHere(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (_VIFONCE001[TeamName] == 0 and (G_SalvageFrigate ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	G_SalvageFrigate = 0 --set
	KASObjective_SetState(ObjectiveID_CaptureOne, 1)    --kasfObjectiveSet("CaptureOne", 1)
	KASTimer_Start(Searching[TeamName], 8)
	end
	if (KASTimer_IsExpiredIfSoDestroy(Searching[TeamName]) ~= 0) then
	
	KAS_GrantResearchOption(0, "CapitalShipDrive")    --kasfPlayerAcquiredTechnology("MassDrive100Kt")
	KAS_UnrestrictResearchOption(0, "CapitalShipChassis")    --kasfAllowPlayerToResearch("Chassis3")
	InNullState[TeamName] = 0 --set
	--kasJump("GotTheBastard")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_GotTheBastard", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_GotTheBastard(TeamName)
	return
	end
	if (_VIFONCE002[TeamName] == 0 and ((KASObjective_GetState(ObjectiveID_CaptureOne) == 0) and ((SobGroup_Count("EnemyFrig01") + SobGroup_Count("ImNotDeadYet")) + SobGroup_Count("EnemyFrig02") == 1))) then  -- "ifonce" #2    --kasfObjectiveGet("CaptureOne")    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig02"))    --kasfShipsCount(kasAITeamShipsPtr("ImNotDeadYet"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))
	
	_VIFONCE002[TeamName] = 1 --created,set;
	KASTimer_Start(WithdrawDelay[TeamName], 5)
	end
	if (_VIFONCE003[TeamName] == 0 and ((KAS_UnderAttack("EnemyFrig01", "GrowSelection_NULL") ~= 0 or KAS_UnderAttack("EnemyFrig02", "GrowSelection_NULL") ~= 0 or KAS_UnderAttack("ImNotDeadYet", "GrowSelection_NULL") ~= 0) and KASTimer_IsExpiredIfSoDestroy(WithdrawDelay[TeamName]) ~= 0)) then  -- "ifonce" #3    --kasfUnderAttackElsewhere(kasAITeamPtr("ImNotDeadYet"), kasGrowSelectionPtr("NULL"))    --kasfUnderAttackElsewhere(kasAITeamPtr("EnemyFrig02"), kasGrowSelectionPtr("NULL"))    --kasfUnderAttackElsewhere(kasAITeamPtr("EnemyFrig01"), kasGrowSelectionPtr("NULL"))
	
	_VIFONCE003[TeamName] = 1 --created,set;
	InNullState[TeamName] = 0 --set
	--kasJump("WithdrawToSalvage")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_WithdrawToSalvage", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_WithdrawToSalvage(TeamName)
	return
	end
	if (_VIFONCE004[TeamName] == 0 and ((KASObjective_GetState(ObjectiveID_DefendCryos) == 0 and KASObjective_GetState(ObjectiveID_CaptureOne) == 0) and (SobGroup_Count("EnemyFrig01") == 0 or G_EnemyFrig01Escaped ~= 0) and (SobGroup_Count("EnemyFrig02") == 0 or G_EnemyFrig02Escaped ~= 0) and (SobGroup_Count("ImNotDeadYet") == 0 or G_ImNotDeadYetEscaped ~= 0))) then  -- "ifonce" #4    --kasfObjectiveGet("CaptureOne")    --kasfObjectiveGet("DefendCryos")    --kasfShipsCount(kasAITeamShipsPtr("ImNotDeadYet"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig02"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))
	
	_VIFONCE004[TeamName] = 1 --created,set;
	GameOver[TeamName] = 1 --created,set
	InNullState[TeamName] = 0 --set
	--kasJump("FrigatesDiedEscaped")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_FrigatesDiedEscaped", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_FrigatesDiedEscaped(TeamName)
	return
	end
	if (_VIFONCE005[TeamName] == 0 and (GameOver[TeamName] == 0 and (SobGroup_Count("EnemyFrig01") == 0 or G_EnemyFrig01Escaped ~= 0 or KAS_ShipsSelectSpecial("GrowSelection_CapturedFrig", "EnemyFrig01", 2) ~= 0) and (SobGroup_Count("EnemyFrig02") == 0 or G_EnemyFrig02Escaped ~= 0 or KAS_ShipsSelectSpecial("GrowSelection_CapturedFrig", "EnemyFrig02", 2) ~= 0) and (SobGroup_Count("ImNotDeadYet") == 0 or G_ImNotDeadYetEscaped ~= 0 or KAS_ShipsSelectSpecial("GrowSelection_CapturedFrig", "ImNotDeadYet", 2) ~= 0))) then  -- "ifonce" #5    --kasfShipsCount(kasAITeamShipsPtr("ImNotDeadYet"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig02"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))    --kasfShipsSelectSpecial(kasGrowSelectionPtr("CapturedFrig"), kasAITeamShipsPtr("ImNotDeadYet"), 2)    --kasfShipsSelectSpecial(kasGrowSelectionPtr("CapturedFrig"), kasAITeamShipsPtr("EnemyFrig02"), 2)    --kasfShipsSelectSpecial(kasGrowSelectionPtr("CapturedFrig"), kasAITeamShipsPtr("EnemyFrig01"), 2)
	
	_VIFONCE005[TeamName] = 1 --created,set;
	FrigatesOutOfThePicture[TeamName] = 1 --created,set
	end
	if (_VIFONCE006[TeamName] == 0 and (G_SalvageHandOff ~= 0)) then  -- "ifonce" #6
	
	_VIFONCE006[TeamName] = 1 --created,set;
	G_SalCapNearby = 1 --set
	end
	if (FrigatesOutOfThePicture[TeamName] ~= 0 and G_SalvageHandOff ~= 0 and InNullState[TeamName] ~= 0) then
	
        SobGroup_CreateIfNotExist("BadFrigates")
        SobGroup_Copy("BadFrigates", "ImNotDeadYet")
        SobGroup_SobGroupAdd("BadFrigates", "EnemyFrig01")
        SobGroup_SobGroupAdd("BadFrigates", "EnemyFrig02")
        SobGroup_FillSubtract("BadFrigates", "BadFrigates", "GrowSelection_Captured")

        if (SobGroup_Count("BadFrigates") == 0) then

        	FrigatesOutOfThePicture[TeamName] = 0 --destroyed
        	G_SalvageHandOff = 0 --destroyed
        	KASObjective_SetState(ObjectiveID_DefendCryos, 1)    --kasfObjectiveSet("DefendCryos", 1)
        	if (SobGroup_Count("GrowSelection_CryoTrays") ~= 0) then     --kasfShipsCount(kasGrowSelectionPtr("CryoTrays"))
        	
            	InNullState[TeamName] = 0 --set
            	--kasJump("LBXIn3")
            	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
            	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_LBXIn3", "Watch_Mission03_ImNotHere")
            	Init_Mission03_ImNotHere_LBXIn3(TeamName)
            	return
        	else

            	--kasJump("LBXIn3")
            	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
            	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture", "Watch_Mission03_ImNotHere")
            	Init_Mission03_ImNotHere_FrigatesOutOfThePicture(TeamName)
            	return

            end
        end
	end
	if (G_SalvageCryoTray ~= 0) then
	
    	G_SalvageCryoTray = 0 --set
    	CryosSalvaged[TeamName] = CryosSalvaged[TeamName] + 1

        --only display these messages if not already in some other FI message state
        if (InNullState[TeamName] ~= 0) then

        	InNullState[TeamName] = 0 --set

        	--kasJump("YayCryoSalvaged")
        	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
        	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_YayCryoSalvaged", "Watch_Mission03_ImNotHere")
        	Init_Mission03_ImNotHere_YayCryoSalvaged(TeamName)
        	return
    	else

            --in an intel event so don't say "Cryo tray loaded".  However, see if we've satisfied the objective (again, without saying anything).
            if (CryosSalvaged[TeamName] > 0 and (SobGroup_Count("GrowSelection_CryoTrays") == 0)) then

                KASObjective_SetState(ObjectiveID_GoForCryos, 1)    --kasfObjectiveSet("GoForCryos", 1)
            end
        end
    end
	if (_VIFONCE007[TeamName] == 0 and (SobGroup_Count("GrowSelection_CryoTrays") == 0)) then  -- "ifonce" #7    --kasfShipsCount(kasGrowSelectionPtr("CryoTrays"))
	
	_VIFONCE007[TeamName] = 1 --created,set;
	if (CryosSalvaged[TeamName] == 0) then
	
	GameOver[TeamName] = 1 --created,set
	InNullState[TeamName] = 0 --set
	--kasJump("CryosDead")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_CryosDead", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_CryosDead(TeamName)
	return
	end
	end
	if (_VIFONCE008[TeamName] == 0 and (G_TechnologyStolen ~= 0 and ObjectiveCreated[TeamName] ~= 0 and (KASObjective_GetState(ObjectiveID_DefendCryos) ~= 0) and (KASObjective_GetState(ObjectiveID_CaptureOne) ~= 0) and (KASObjective_GetState(ObjectiveID_GoForCryos) ~= 0))) then  -- "ifonce" #8    --kasfObjectiveGet("GoForCryos")    --kasfObjectiveGet("CaptureOne")    --kasfObjectiveGet("DefendCryos")
	
	_VIFONCE008[TeamName] = 1 --created,set;
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_TBHyperspace[strCurLanguage], LSTRING_OBReadyToGo[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end
	if (G_CLICK_GoForCryos ~= 0) then
	
	G_CLICK_GoForCryos = 0 --destroyed
	Replay[TeamName] = 1 --created,set
	InNullState[TeamName] = 0 --set
	--kasJump("FrigatesOutOfThePicture")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_FrigatesOutOfThePicture(TeamName)
	return
	elseif (G_CLICK_CaptureOne ~= 0) then
	
	G_CLICK_CaptureOne = 0 --destroyed
	InNullState[TeamName] = 0 --set
	--kasJump("KillThosePoopyHeads")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_KillThosePoopyHeads", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_KillThosePoopyHeads(TeamName)
	return
	elseif (G_CLICK_DefendCryos ~= 0) then
	
	G_CLICK_DefendCryos = 0 --destroyed
	InNullState[TeamName] = 0 --set
	Replay[TeamName] = 1 --created,set
	--kasJump("CryoObjective")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_CryoObjective", "Watch_Mission03_ImNotHere")
	Init_Mission03_ImNotHere_CryoObjective(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere LocationCard state
--
function Init_Mission03_ImNotHere_LocationCard(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KASTimer_Start(LocationCardTimer[TeamName], 2)
	
end


--
--  "watch" code for Mission03 ImNotHere LocationCard state
--
function Watch_Mission03_ImNotHere_LocationCard(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_IsExpiredIfSoDestroy(LocationCardTimer[TeamName]) ~= 0) then
	
	singlePlayerLocationCard("$61150", 5)    --kasfLocationCard(5000, LSTRING_LCLocationCard[strCurLanguage])
	if (KAS_FindPlayerShipsOfType("GrowSelection_Stuff", "HeavyCruiser", 0) ~= 0) then     --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("Stuff"), "HeavyCruiser")
	
	--kasJump("GotTheBastard")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LocationCard")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_GotTheBastard", "Watch_Mission03_ImNotHere_LocationCard")
	Init_Mission03_ImNotHere_GotTheBastard(TeamName)
	return
	else
	
	--kasJump("Wait1")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LocationCard")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_Wait1", "Watch_Mission03_ImNotHere_LocationCard")
	Init_Mission03_ImNotHere_Wait1(TeamName)
	return
	end
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere Wait1 state
--
function Init_Mission03_ImNotHere_Wait1(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KASTimer_Start(LetItSinkIn[TeamName], 8)
	
end


--
--  "watch" code for Mission03 ImNotHere Wait1 state
--
function Watch_Mission03_ImNotHere_Wait1(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if ((KASTimer_GetRemaining(LetItSinkIn[TeamName]) == 6)) then
	
	KAS_MusicPlayType("data:sound/music/battle/A03_mission3", MUS_Ambient)    --kasfMusicPlay(11)
	end
	if (KASTimer_GetRemaining(LetItSinkIn[TeamName]) == 0) then
	
	--kasJump("OhMyGodTheyveKilledKenny")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_Wait1")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_OhMyGodTheyveKilledKenny", "Watch_Mission03_ImNotHere_Wait1")
	Init_Mission03_ImNotHere_OhMyGodTheyveKilledKenny(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere OhMyGodTheyveKilledKenny state
--
function Init_Mission03_ImNotHere_OhMyGodTheyveKilledKenny(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60429", 3)    --kasfSpeechEvent((429 + 2048 + 268435456), 0)
	
end


--
--  "watch" code for Mission03 ImNotHere OhMyGodTheyveKilledKenny state
--
function Watch_Mission03_ImNotHere_OhMyGodTheyveKilledKenny(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("YouBastards")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_OhMyGodTheyveKilledKenny")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_YouBastards", "Watch_Mission03_ImNotHere_OhMyGodTheyveKilledKenny")
	Init_Mission03_ImNotHere_YouBastards(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere YouBastards state
--
function Init_Mission03_ImNotHere_YouBastards(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60430", 3)    --kasfSpeechEvent((430 + 4096 + 268435456), 0)
	KASTimer_Start(LBX[TeamName], 1)
	KASTimer_Start(FocusScaffold[TeamName], 4)
	KASTimer_Start(FocusCancel[TeamName], 15)
	
end


--
--  "watch" code for Mission03 ImNotHere YouBastards state
--
function Watch_Mission03_ImNotHere_YouBastards(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KAS_GameMessageReceived({"Game_BandBoxFocus", "Game_ClickFocus", "KB_CancelFocus", "KB_Focus", "KB_Sensors", "TB_SensorsManager", "KB_FocusMothership"}) ~= 0) then     --kasfTutGameSentMessage("Game_BandBoxFocus,Game_ClickFocus,KB_CancelFocus,KB_Focus,KB_Sensors,TB_SensorsManager,KB_FocusMothership")
	
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	KASTimer_End(FocusCancel[TeamName])
	end
	if (KASTimer_IsExpiredIfSoDestroy(LBX[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	end
	if (KASTimer_IsExpiredIfSoDestroy(FocusScaffold[TeamName]) ~= 0) then
	
	KAS_FocusDerelict("Der_Scaffold_scarred")    --kasfTutCameraFocusDerelictType("Scaffold_scarred")
	KAS_FocusDerelict("Der_Scaffold_scarred")    --kasfTutCameraFocusDerelictType("Scaffold_scarred")
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	end
	if (KASTimer_IsExpiredIfSoDestroy(FocusFinger[TeamName]) ~= 0) then
	
	KAS_FocusDerelict("Der_ScaffoldFingerB_scarred")    --kasfTutCameraFocusDerelictType("ScaffoldFingerB_scarred")
	KAS_FocusDerelict("Der_ScaffoldFingerB_scarred")    --kasfTutCameraFocusDerelictType("ScaffoldFingerB_scarred")
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	end
	if (KASTimer_IsExpiredIfSoDestroy(FocusCancel[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	--kasfTutCameraFocusCancel()
	--kasfTutCameraFocusCancel()
    Camera_FocusOnFleet()
 	end
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("CryoTraysSurvived")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_YouBastards")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_CryoTraysSurvived", "Watch_Mission03_ImNotHere_YouBastards")
	Init_Mission03_ImNotHere_CryoTraysSurvived(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere LBXIn1 state
--
function Init_Mission03_ImNotHere_LBXIn1(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(LBXTimer[TeamName], 4)
	
end


--
--  "watch" code for Mission03 ImNotHere LBXIn1 state
--
function Watch_Mission03_ImNotHere_LBXIn1(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if ((KASTimer_GetRemaining(LBXTimer[TeamName]) == 2)) then
	
	--kasJump("CryoTraysSurvived")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LBXIn1")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_CryoTraysSurvived", "Watch_Mission03_ImNotHere_LBXIn1")
	Init_Mission03_ImNotHere_CryoTraysSurvived(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere CryoTraysSurvived state
--
function Init_Mission03_ImNotHere_CryoTraysSurvived(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	Subtitle_ForceEventNotEnded()    --kasfIntelEventNotEnded()
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60431", 3)    --kasfSpeechEvent((431 + 2048 + 268435456), 0)
	KASTimer_Start(LBX[TeamName], 9)
	
end


--
--  "watch" code for Mission03 ImNotHere CryoTraysSurvived state
--
function Watch_Mission03_ImNotHere_CryoTraysSurvived(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_IsExpiredIfSoDestroy(LBX[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	end
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("CryoObjective")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_CryoTraysSurvived")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_CryoObjective", "Watch_Mission03_ImNotHere_CryoTraysSurvived")
	Init_Mission03_ImNotHere_CryoObjective(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere CryoObjective state
--
function Init_Mission03_ImNotHere_CryoObjective(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SensorsToggle(1, 27000)    --kasfOpenSensors(27000)
	KASObjective_Add(ObjectiveID_DefendCryos, "$61155", OT_Primary)    --kasfObjectiveCreate("DefendCryos", LSTRING_OBDefendCryos[strCurLanguage], "fleet intel 3.2")
	Objective_SetDescription(ObjectiveID_DefendCryos, "$60814")
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60759", 3)    --kasfSpeechEvent((759 + 4096 + 268435456), 0)
	PointerID_PunyCryoTrays = KASPointer_AddShip("CryoTray10")    --kasfTutSetPointerTargetShip("PunyCryoTrays", kasAITeamShipsPtr("CryoTray10"))
	ObjectiveCreated[TeamName] = 1 --created,set
	
end


--
--  "watch" code for Mission03 ImNotHere CryoObjective state
--
function Watch_Mission03_ImNotHere_CryoObjective(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	Intel[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(SinkIn[TeamName]) ~= 0 or (Intel[TeamName] == 2) or (Intel[TeamName] ~= 0 and Replay[TeamName] ~= 0)) then
	
	Intel[TeamName] = 0 --set
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	if (Replay[TeamName] ~= 0) then
	
	Replay[TeamName] = 0 --destroyed
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_CryoObjective")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_CryoObjective")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	end
	--kasJump("WatchForFrigates")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_CryoObjective")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_WatchForFrigates", "Watch_Mission03_ImNotHere_CryoObjective")
	Init_Mission03_ImNotHere_WatchForFrigates(TeamName)
	return
	end
	if (Intel[TeamName] == 1) then
	
	KASTimer_Start(SinkIn[TeamName], 1)
	Intel[TeamName] = 0 --set
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere WatchForFrigates state
--
function Init_Mission03_ImNotHere_WatchForFrigates(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	
end


--
--  "watch" code for Mission03 ImNotHere WatchForFrigates state
--
function Watch_Mission03_ImNotHere_WatchForFrigates(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if ((KAS_ShipHasBeenRendered("EnemyFrig01", 4) ~= 0) or (KAS_ShipHasBeenRendered("EnemyFrig02", 4) ~= 0) or (KAS_ShipHasBeenRendered("ImNotDeadYet", 4) ~= 0) or (KAS_ShipHasBeenRendered("EnemyFrig01", 3) ~= 0) or (KAS_ShipHasBeenRendered("EnemyFrig02", 3) ~= 0) or (KAS_ShipHasBeenRendered("ImNotDeadYet", 3) ~= 0)) then     --kasfRenderedShips(kasAITeamShipsPtr("ImNotDeadYet"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("EnemyFrig02"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("EnemyFrig01"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("ImNotDeadYet"), 4)    --kasfRenderedShips(kasAITeamShipsPtr("EnemyFrig02"), 4)    --kasfRenderedShips(kasAITeamShipsPtr("EnemyFrig01"), 4)
	
	--kasJump("LBXIn2")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_WatchForFrigates")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_LBXIn2", "Watch_Mission03_ImNotHere_WatchForFrigates")
	Init_Mission03_ImNotHere_LBXIn2(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere LBXIn2 state
--
function Init_Mission03_ImNotHere_LBXIn2(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(LBXTimer[TeamName], 3)
	
end


--
--  "watch" code for Mission03 ImNotHere LBXIn2 state
--
function Watch_Mission03_ImNotHere_LBXIn2(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if ((KASTimer_IsExpiredIfSoDestroy(LBXTimer[TeamName]) ~= 0)) then
	
	--kasJump("AckTheyreAttackingCryos")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LBXIn2")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_AckTheyreAttackingCryos", "Watch_Mission03_ImNotHere_LBXIn2")
	Init_Mission03_ImNotHere_AckTheyreAttackingCryos(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere AckTheyreAttackingCryos state
--
function Init_Mission03_ImNotHere_AckTheyreAttackingCryos(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60433", 3)    --kasfSpeechEvent((433 + 4096 + 268435456), 0)
	KAS_FocusShips("EnemyFrig01")    --kasfTutCameraFocus(kasAITeamShipsPtr("EnemyFrig01"))
	KASTimer_Start(Focus[TeamName], 4)
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	
end


--
--  "watch" code for Mission03 ImNotHere AckTheyreAttackingCryos state
--
function Watch_Mission03_ImNotHere_AckTheyreAttackingCryos(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KAS_GameMessageReceived({"Game_BandBoxFocus", "Game_ClickFocus", "KB_CancelFocus", "KB_Focus", "KB_Sensors", "TB_SensorsManager"}) ~= 0) then     --kasfTutGameSentMessage("Game_BandBoxFocus, Game_ClickFocus, KB_CancelFocus, KB_Focus, KB_Sensors, TB_SensorsManager")
	
	Skip[TeamName] = 1 --created,set
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	end
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	if (Skip[TeamName] == 0) then
	
	--kasfTutCameraFocusCancel()
    Camera_FocusOnFleet()
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	else
	
	Skip[TeamName] = 0 --destroyed
	end
	--kasJump("KillThosePoopyHeads")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_AckTheyreAttackingCryos")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_KillThosePoopyHeads", "Watch_Mission03_ImNotHere_AckTheyreAttackingCryos")
	Init_Mission03_ImNotHere_KillThosePoopyHeads(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere KillThosePoopyHeads state
--
function Init_Mission03_ImNotHere_KillThosePoopyHeads(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60434", 3)    --kasfSpeechEvent((434 + 4096 + 268435456), 0)
	KASTimer_Start(Pointers[TeamName], 6)
	KASObjective_Add(ObjectiveID_CaptureOne, "$61157", OT_Primary)    --kasfObjectiveCreate("CaptureOne", LSTRING_OBObjective1[strCurLanguage], "fleet command 3.3")
	Objective_SetDescription(ObjectiveID_CaptureOne, "$60815")
	ObjectiveCreated[TeamName] = 1 --created,set
	
end


--
--  "watch" code for Mission03 ImNotHere KillThosePoopyHeads state
--
function Watch_Mission03_ImNotHere_KillThosePoopyHeads(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_IsExpiredIfSoDestroy(Pointers[TeamName]) ~= 0) then
	
	ignoredFunction()    --kasfSoundEvent(262)
	PointerID_Attackers = KASPointer_AddShip("EnemyFrig01")    --kasfTutSetPointerTargetShip("Attackers", kasAITeamShipsPtr("EnemyFrig01"))
	end
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_KillThosePoopyHeads")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_KillThosePoopyHeads")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere LBXIn3 state
--
function Init_Mission03_ImNotHere_LBXIn3(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(LBXTimer[TeamName], 3)
	
end


--
--  "watch" code for Mission03 ImNotHere LBXIn3 state
--
function Watch_Mission03_ImNotHere_LBXIn3(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if ((KASTimer_GetRemaining(LBXTimer[TeamName]) == 0)) then
	
	KAS_SensorsToggle(1, 27000)    --kasfOpenSensors(27000)
	--kasJump("FrigatesOutOfThePicture")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LBXIn3")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture", "Watch_Mission03_ImNotHere_LBXIn3")
	Init_Mission03_ImNotHere_FrigatesOutOfThePicture(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere FrigatesOutOfThePicture state
--
function Init_Mission03_ImNotHere_FrigatesOutOfThePicture(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	
	KASObjective_Add(ObjectiveID_GoForCryos, "$61159", OT_Primary)    --kasfObjectiveCreate("GoForCryos", LSTRING_OBSalvageCryos[strCurLanguage], "fleet command 3.3")
	Objective_SetDescription(ObjectiveID_GoForCryos, "$60473")

    --already satisfied this objective?
    if (CryosSalvaged[TeamName] > 0 and (SobGroup_Count("GrowSelection_CryoTrays") == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("CryoTrays"))

        KASObjective_SetState(ObjectiveID_GoForCryos, 1)    --kasfObjectiveSet("GoForCryos", 1)

    	--kasJump("NullState")
    	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Init_Mission03_ImNotHere_FrigatesOutOfThePicture")
    	Init_Mission03_ImNotHere_NullState(TeamName)
    else

    	KAS_UniversePause(1)    --kasfUniversePause()
    	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60760", 3)    --kasfSpeechEvent((760 + 4096 + 268435456), 0)
    	KASTimer_Start(Pointers[TeamName], 2)
	end
end


--
--  "watch" code for Mission03 ImNotHere FrigatesOutOfThePicture state
--
function Watch_Mission03_ImNotHere_FrigatesOutOfThePicture(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_IsExpiredIfSoDestroy(Pointers[TeamName]) ~= 0) then
	
	PointerID_Cryos = KASPointer_AddShip("GrowSelection_CryoTrays")    --kasfTutSetPointerTargetShip("Cryos", kasGrowSelectionPtr("CryoTrays"))
	end
	Intel[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --set    --kasfIntelEventEnded()
	if (Intel[TeamName] == 1) then
	
	KASTimer_Start(SinkIn[TeamName], 2)
	Intel[TeamName] = 0 --set
	end
	if (KASTimer_IsExpiredIfSoDestroy(SinkIn[TeamName]) ~= 0 or (Intel[TeamName] == 2)) then
	
	Intel[TeamName] = 0 --set
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_SetLetterboxState(0, 3)    --kasfWideScreenOut(90)
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	if (Replay[TeamName] ~= 0) then
	
	Replay[TeamName] = 0 --destroyed
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	end
	--kasJump("SaveThoseCryos")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_SaveThoseCryos", "Watch_Mission03_ImNotHere_FrigatesOutOfThePicture")
	Init_Mission03_ImNotHere_SaveThoseCryos(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere SaveThoseCryos state
--
function Init_Mission03_ImNotHere_SaveThoseCryos(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60435", 3)    --kasfSpeechEvent((435 + 2048 + 268435456), 0)
	
end


--
--  "watch" code for Mission03 ImNotHere SaveThoseCryos state
--
function Watch_Mission03_ImNotHere_SaveThoseCryos(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_SaveThoseCryos")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_SaveThoseCryos")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere LBXIn4 state
--
function Init_Mission03_ImNotHere_LBXIn4(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(LBXTimer[TeamName], 5)
	
end


--
--  "watch" code for Mission03 ImNotHere LBXIn4 state
--
function Watch_Mission03_ImNotHere_LBXIn4(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_GetRemaining(LBXTimer[TeamName]) == 1) then
	
	--kasJump("GotTheBastard")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LBXIn4")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_GotTheBastard", "Watch_Mission03_ImNotHere_LBXIn4")
	Init_Mission03_ImNotHere_GotTheBastard(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere GotTheBastard state
--
function Init_Mission03_ImNotHere_GotTheBastard(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	Subtitle_ForceEventNotEnded()    --kasfIntelEventNotEnded()
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60436", 3)    --kasfSpeechEvent((436 + 4096 + 268435456), 0)
	KASTimer_Start(LBX[TeamName], 10)
	
end


--
--  "watch" code for Mission03 ImNotHere GotTheBastard state
--
function Watch_Mission03_ImNotHere_GotTheBastard(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_IsExpiredIfSoDestroy(LBX[TeamName]) ~= 0) then
	
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	end
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("HeyCheckThisOut")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_GotTheBastard")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_HeyCheckThisOut", "Watch_Mission03_ImNotHere_GotTheBastard")
	Init_Mission03_ImNotHere_HeyCheckThisOut(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere HeyCheckThisOut state
--
function Init_Mission03_ImNotHere_HeyCheckThisOut(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_UniversePause(1)    --kasfUniversePause()
	G_PlayNis = 3 --created,set
	
end


--
--  "watch" code for Mission03 ImNotHere HeyCheckThisOut state
--
function Watch_Mission03_ImNotHere_HeyCheckThisOut(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (G_Nis3Complete ~= 0) then
	
	G_Nis3Complete = 0 --set
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASTimer_Start(AnalysePause[TeamName], 5)
	end
	if (KASTimer_IsExpiredIfSoDestroy(AnalysePause[TeamName]) ~= 0) then
	
	--kasJump("ThoseGuysAreGonnaGetIt")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_HeyCheckThisOut")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt", "Watch_Mission03_ImNotHere_HeyCheckThisOut")
	Init_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere ThoseGuysAreGonnaGetIt state
--
function Init_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60462", 3)    --kasfSpeechEvent((462 + 4096 + 268435456), 0)
	
end


--
--  "watch" code for Mission03 ImNotHere ThoseGuysAreGonnaGetIt state
--
function Watch_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KASTimer_Start(StealingTechnology[TeamName], 10)
	end
	if (KASTimer_IsExpiredIfSoDestroy(StealingTechnology[TeamName]) ~= 0) then
	
	--kasJump("WeStoleTheirTechnology")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_WeStoleTheirTechnology", "Watch_Mission03_ImNotHere_ThoseGuysAreGonnaGetIt")
	Init_Mission03_ImNotHere_WeStoleTheirTechnology(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere WeStoleTheirTechnology state
--
function Init_Mission03_ImNotHere_WeStoleTheirTechnology(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60463", 3)    --kasfSpeechEvent((463 + 4096 + 268435456), 0)
	G_TechnologyStolen = 1 --set
	
end


--
--  "watch" code for Mission03 ImNotHere WeStoleTheirTechnology state
--
function Watch_Mission03_ImNotHere_WeStoleTheirTechnology(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
        if (KASObjective_GetState(ObjectiveID_GoForCryos) ~= 0) then

            --
            -- Only go to this state if we've captured the frigate.  Otherwise do it after the frigate is captured.
            --
        	--kasJump("NullState")
        	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_WeStoleTheirTechnology")
        	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_YayWereDone", "Watch_Mission03_ImNotHere_WeStoleTheirTechnology")
        	Init_Mission03_ImNotHere_YayWereDone(TeamName)
        	return
        else

        	--kasJump("NullState")
        	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_WeStoleTheirTechnology")
        	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_WeStoleTheirTechnology")
        	Init_Mission03_ImNotHere_NullState(TeamName)
        	return
        end
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere WithdrawToSalvage state
--
function Init_Mission03_ImNotHere_WithdrawToSalvage(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60469", 3)    --kasfSpeechEvent((469 + 4096 + 268435456), 0)
	
end


--
--  "watch" code for Mission03 ImNotHere WithdrawToSalvage state
--
function Watch_Mission03_ImNotHere_WithdrawToSalvage(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_WithdrawToSalvage")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_WithdrawToSalvage")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	
end


--
--  "initialize" code for Mission03 ImNotHere FrigatesDiedEscaped state
--
function Init_Mission03_ImNotHere_FrigatesDiedEscaped(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	
end


--
--  "watch" code for Mission03 ImNotHere FrigatesDiedEscaped state
--
function Watch_Mission03_ImNotHere_FrigatesDiedEscaped(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_MissionFailed()    --kasfMissionFailed()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_FrigatesDiedEscaped")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_FrigatesDiedEscaped")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	
end


--
--  "initialize" code for Mission03 ImNotHere YayCryoSalvaged state
--
function Init_Mission03_ImNotHere_YayCryoSalvaged(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	ignoredFunction()    --kasfSoundEvent(262)
	if (CryosSalvaged[TeamName] == 1) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60464", 3)    --kasfSpeechEvent((464 + 2048 + 268435456), 0)
	elseif (CryosSalvaged[TeamName] == 2) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60465", 3)    --kasfSpeechEvent((465 + 2048 + 268435456), 0)
	elseif (CryosSalvaged[TeamName] == 3) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60466", 3)    --kasfSpeechEvent((466 + 2048 + 268435456), 0)
	elseif (CryosSalvaged[TeamName] == 4) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60467", 3)    --kasfSpeechEvent((467 + 2048 + 268435456), 0)
	elseif (CryosSalvaged[TeamName] == 5) then
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60468", 3)    --kasfSpeechEvent((468 + 2048 + 268435456), 0)
	end
	
end


--
--  "watch" code for Mission03 ImNotHere YayCryoSalvaged state
--
function Watch_Mission03_ImNotHere_YayCryoSalvaged(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
    	if (SobGroup_Count("GrowSelection_CryoTrays") == 0 and KASObjective_GetState(ObjectiveID_CaptureOne) ~= 0) then     --kasfShipsCount(kasGrowSelectionPtr("CryoTrays"))
    	
            --
            -- Only go to this state if we've captured the frigate.  Otherwise do it after the frigate is captured.
            --
    	    --kasJump("YayWereDone")
    	    --KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_YayCryoSalvaged")
    	    KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_YayWereDone", "Watch_Mission03_ImNotHere_YayCryoSalvaged")
    	    Init_Mission03_ImNotHere_YayWereDone(TeamName)
    	    return
    	else
    	
    	    --kasJump("NullState")
    	    --KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_YayCryoSalvaged")
    	    KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_YayCryoSalvaged")
    	    Init_Mission03_ImNotHere_NullState(TeamName)
    	    return
    	end
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere CryosDead state
--
function Init_Mission03_ImNotHere_CryosDead(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	
end


--
--  "watch" code for Mission03 ImNotHere CryosDead state
--
function Watch_Mission03_ImNotHere_CryosDead(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_MissionFailed()    --kasfMissionFailed()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_CryosDead")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_CryosDead")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	
end


--
--  "initialize" code for Mission03 ImNotHere LBXIn5 state
--
function Init_Mission03_ImNotHere_LBXIn5(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(LBXTimer[TeamName], 5)
	
end


--
--  "watch" code for Mission03 ImNotHere LBXIn5 state
--
function Watch_Mission03_ImNotHere_LBXIn5(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (KASTimer_GetRemaining(LBXTimer[TeamName]) == 1) then
	
	--kasJump("YayWereDone")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_LBXIn5")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_YayWereDone", "Watch_Mission03_ImNotHere_LBXIn5")
	Init_Mission03_ImNotHere_YayWereDone(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere YayWereDone state
--
function Init_Mission03_ImNotHere_YayWereDone(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60470", 3)    --kasfSpeechEvent((470 + 4096 + 268435456), 0)
	KASObjective_SetState(ObjectiveID_GoForCryos, 1)    --kasfObjectiveSet("GoForCryos", 1)
	
end


--
--  "watch" code for Mission03 ImNotHere YayWereDone state
--
function Watch_Mission03_ImNotHere_YayWereDone(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotHere", "Watch_Mission03_ImNotHere_YayWereDone")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHere_NullState", "Watch_Mission03_ImNotHere_YayWereDone")
	Init_Mission03_ImNotHere_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotHere NullState state
--
function Init_Mission03_ImNotHere_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	InNullState[TeamName] = 1 --set
	
end


--
--  "watch" code for Mission03 ImNotHere NullState state
--
function Watch_Mission03_ImNotHere_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotHere
	--TeamName = ImNotHere
	
end


--
--  "initialize" code for Mission03 ImNotHereEither FSM
--
function Init_Mission03_ImNotHereEither(TeamName)
	--FSM: FSM_Mission03_ImNotHereEither
	--TeamName = ImNotHereEither
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotHereEither_NullState", "Init_Mission03_ImNotHereEither")
	Init_Mission03_ImNotHereEither_NullState(TeamName)
	return
	
end


--
--  "watch" code for Mission03 ImNotHereEither FSM
--
function Watch_Mission03_ImNotHereEither(TeamName)
	--FSM: FSM_Mission03_ImNotHereEither
	--TeamName = ImNotHereEither
	
end


--
--  "initialize" code for Mission03 ImNotHereEither NullState state
--
function Init_Mission03_ImNotHereEither_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotHereEither
	--TeamName = ImNotHereEither
	
end


--
--  "watch" code for Mission03 ImNotHereEither NullState state
--
function Watch_Mission03_ImNotHereEither_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotHereEither
	--TeamName = ImNotHereEither
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 FSM
--
function Init_Mission03_EnemyFrig01(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	ignoredFunction()    --kasfTimerCreate("AttackTimer")
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	--kasJump("AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackCryoTrays", "Init_Mission03_EnemyFrig01")
	Init_Mission03_EnemyFrig01_AttackCryoTrays(TeamName)
	return
	
end


--
--  "watch" code for Mission03 EnemyFrig01 FSM
--
function Watch_Mission03_EnemyFrig01(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if (InNULLState[TeamName] == 0 and G_Escaping == 0) then
	
	if (G_SalCapNearby == 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 2800)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 8000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	if (KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") == 1) then     --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	
	G_SalCapNearby = 1 --set
	KASTimer_Start(SalCapTimer[TeamName], 4)
	end
	end
	if (KASTimer_IsExpiredIfSoDestroy(SalCapTimer[TeamName]) ~= 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 2800)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 8000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	NumSalCaps[TeamName] = KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") --created,set    --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	if (NumSalCaps[TeamName] == 1) then
	
	--kasfSpeechEventShips(kasGrowSelectionPtr("SalCaps"), (807 + 1024 + 268435456), 0)
	KASTimer_Start(TimerID_G_SalCapNearbyRepeat, 40)
	elseif (NumSalCaps[TeamName] == 0) then
	
	G_SalCapNearby = 0 --set
	end
	end
	if (_VIFONCE009[TeamName] == 0 and (SobGroup_Count(TeamName) == 0)) then  -- "ifonce" #9    --kasfTeamCount()
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_NullState", "Watch_Mission03_EnemyFrig01")
	Init_Mission03_EnemyFrig01_NullState(TeamName)
	return
	end
	if (_VIFONCE010[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 50)) then  -- "ifonce" #10    --kasfTeamHealthAverage()
	
	_VIFONCE010[TeamName] = 1 --created,set;
	G_HelpEnemyFrig01 = 1 --created,set
	end
	if (_VIFONCE011[TeamName] == 0 and ((SobGroup_Count("EnemyFrig02") == 0) and (SobGroup_Count("ImNotDeadYet") == 0) and (KAS_TeamHealth(TeamName) < 30))) then  -- "ifonce" #11    --kasfShipsCount(kasAITeamShipsPtr("ImNotDeadYet"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig02"))    --kasfTeamHealthAverage()
	
	_VIFONCE011[TeamName] = 1 --created,set;
	--kasJump("Escape")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_Escape", "Watch_Mission03_EnemyFrig01")
	Init_Mission03_EnemyFrig01_Escape(TeamName)
	return
	end
	if (G_EnemyFrig01Captured == 0 and KAS_ShipsSelectSpecial("GrowSelection_Captured", "EnemyFrig01", 2) ~= 0) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("EnemyFrig01"), 2)
	
	G_EnemyFrig01Captured = 1 --created,set
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_E1Capturers", 175)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("E1Capturers"), 500)
	KAS_FillShipsByType_Normal("GrowSelection_E1Capturers", "GrowSelection_E1Capturers", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("E1Capturers"), kasGrowSelectionPtr("E1Capturers"), "SalCapCorvette")
	--kasJump("ImCaptured")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_ImCaptured", "Watch_Mission03_EnemyFrig01")
	Init_Mission03_EnemyFrig01_ImCaptured(TeamName)
	return
	end
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 AttackMain state
--
function Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	KASTimer_Set(AttackTimer[TeamName], RandomIntRange(4, 10))    --kasfRandom(4, 10)
	KASTimer_Resume(AttackTimer[TeamName])
	if (G_EnemyFrig02Captured ~= 0) then
	
	G_EF1BusySalCap = 1 --created,set
	KAS_ShipsAdd("GrowSelection_E1Capturers", "GrowSelection_E2Capturers")    --kasfShipsAdd(kasGrowSelectionPtr("E1Capturers"), kasGrowSelectionPtr("E2Capturers"))
	--kasJump("AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackSalCap", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackSalCap(TeamName)
	return
	end
	if (G_ImNotDeadYetCaptured ~= 0) then
	
	G_EF1BusySalCap = 1 --created,set
	KAS_ShipsAdd("GrowSelection_E1Capturers", "GrowSelection_INDYCapturers")    --kasfShipsAdd(kasGrowSelectionPtr("E1Capturers"), kasGrowSelectionPtr("INDYCapturers"))
	--kasJump("AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackSalCap", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackSalCap(TeamName)
	return
	end
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Nearby", 1750)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Nearby"), 5000)
	if ((G_SalcapKilled < 7) and KAS_FillShipsByType_Normal("GrowSelection_E1Capturers", "GrowSelection_Nearby", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("E1Capturers"), kasGrowSelectionPtr("Nearby"), "SalCapCorvette")
	
	--kasJump("AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackSalCap", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackSalCap(TeamName)
	return
	end
	if (KAS_UnderAttack("ImNotDeadYet", "GrowSelection_BadDudes") ~= 0 or KAS_UnderAttack("EnemyFrig02", "GrowSelection_BadDudes") ~= 0) then     --kasfUnderAttackElsewhere(kasAITeamPtr("EnemyFrig02"), kasGrowSelectionPtr("BadDudes"))    --kasfUnderAttackElsewhere(kasAITeamPtr("ImNotDeadYet"), kasGrowSelectionPtr("BadDudes"))
	
	--kasJump("ProtectFrigates")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_ProtectFrigates", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_ProtectFrigates(TeamName)
	return
	end
	if (KAS_FillShipsByClass_Normal("GrowSelection_E1CorvetteBaddies", "GrowSelection_Nearby", "Corvette_hw1") > 2) then     --kasfShipsSelectClass(kasGrowSelectionPtr("E1CorvetteBaddies"), kasGrowSelectionPtr("Nearby"), "CLASS_Corvette")
	
	if (SobGroup_Count("GrowSelection_E1CorvetteBaddies") < 7) then     --kasfShipsCount(kasGrowSelectionPtr("E1CorvetteBaddies"))
	
	G_EF1BusyCorvettes = 1 --set
	end
	--kasJump("AttackCorvettes")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackCorvettes", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackCorvettes(TeamName)
	return
	end
	if (KAS_FillShipsByClass_Normal("GrowSelection_E1FighterBaddies", "GrowSelection_Nearby", "Fighter_hw1") > 6) then     --kasfShipsSelectClass(kasGrowSelectionPtr("E1FighterBaddies"), kasGrowSelectionPtr("Nearby"), "CLASS_Fighter")
	
	if (SobGroup_Count("GrowSelection_E1FighterBaddies") < 10) then     --kasfShipsCount(kasGrowSelectionPtr("E1FighterBaddies"))
	
	G_EF1BusyFighters = 1 --set
	end
	--kasJump("AttackFighters")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackFighters", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackFighters(TeamName)
	return
	end
	--kasJump("AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackCryoTrays", "Init_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackCryoTrays(TeamName)
	return
	
end


--
--  "watch" code for Mission03 EnemyFrig01 AttackMain state
--
function Watch_Mission03_EnemyFrig01_AttackMain(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_AttackMain")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_AttackMain")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 ProtectFrigates state
--
function Init_Mission03_EnemyFrig01_ProtectFrigates(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	KAS_Attack(TeamName, "GrowSelection_BadDudes")    --kasfAttack(kasGrowSelectionPtr("BadDudes"))
	
end


--
--  "watch" code for Mission03 EnemyFrig01 ProtectFrigates state
--
function Watch_Mission03_EnemyFrig01_ProtectFrigates(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if (SobGroup_Count("GrowSelection_BadDudes") == 0 or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("BadDudes"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_ProtectFrigates")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_ProtectFrigates")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 AttackCryoTrays state
--
function Init_Mission03_EnemyFrig01_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if (SobGroup_Count("CryoTray10") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray10"))
	
	KAS_Attack(TeamName, "CryoTray10")    --kasfAttack(kasAITeamShipsPtr("CryoTray10"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray10")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray10"))
	elseif (SobGroup_Count("CryoTray09") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray09"))
	
	KAS_Attack(TeamName, "CryoTray09")    --kasfAttack(kasAITeamShipsPtr("CryoTray09"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray09")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray09"))
	elseif (SobGroup_Count("CryoTray08") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray08"))
	
	KAS_Attack(TeamName, "CryoTray08")    --kasfAttack(kasAITeamShipsPtr("CryoTray08"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray08")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray08"))
	elseif (SobGroup_Count("CryoTray07") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray07"))
	
	KAS_Attack(TeamName, "CryoTray07")    --kasfAttack(kasAITeamShipsPtr("CryoTray07"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray07")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray07"))
	elseif (SobGroup_Count("CryoTray06") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray06"))
	
	KAS_Attack(TeamName, "CryoTray06")    --kasfAttack(kasAITeamShipsPtr("CryoTray06"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray06")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray06"))
	elseif (SobGroup_Count("CryoTray05") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray05"))
	
	KAS_Attack(TeamName, "CryoTray05")    --kasfAttack(kasAITeamShipsPtr("CryoTray05"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray05")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray05"))
	elseif (SobGroup_Count("CryoTray04") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray04"))
	
	KAS_Attack(TeamName, "CryoTray04")    --kasfAttack(kasAITeamShipsPtr("CryoTray04"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray04")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray04"))
	elseif (SobGroup_Count("CryoTray03") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray03"))
	
	KAS_Attack(TeamName, "CryoTray03")    --kasfAttack(kasAITeamShipsPtr("CryoTray03"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray03")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray03"))
	elseif (SobGroup_Count("CryoTray02") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray02"))
	
	KAS_Attack(TeamName, "CryoTray02")    --kasfAttack(kasAITeamShipsPtr("CryoTray02"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray02")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray02"))
	elseif (SobGroup_Count("CryoTray01") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray01"))
	
	KAS_Attack(TeamName, "CryoTray01")    --kasfAttack(kasAITeamShipsPtr("CryoTray01"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray01")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray01"))
	else
	
	--kasJump("Escape")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_Escape", "Init_Mission03_EnemyFrig01_AttackCryoTrays")
	Init_Mission03_EnemyFrig01_Escape(TeamName)
	return
	end
	
end


--
--  "watch" code for Mission03 EnemyFrig01 AttackCryoTrays state
--
function Watch_Mission03_EnemyFrig01_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if ((SobGroup_Count("GrowSelection_AttackTargets01") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("AttackTargets01"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_AttackCryoTrays")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 AttackSalCap state
--
function Init_Mission03_EnemyFrig01_AttackSalCap(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	KAS_Attack(TeamName, "GrowSelection_E1Capturers")    --kasfAttack(kasGrowSelectionPtr("E1Capturers"))
	
end


--
--  "watch" code for Mission03 EnemyFrig01 AttackSalCap state
--
function Watch_Mission03_EnemyFrig01_AttackSalCap(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if ((SobGroup_Count("GrowSelection_E1Capturers") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("E1Capturers"))
	
	G_EF1BusySalCap = 0 --destroyed
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_AttackSalCap")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 AttackCorvettes state
--
function Init_Mission03_EnemyFrig01_AttackCorvettes(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	KAS_Attack(TeamName, "GrowSelection_E1CorvetteBaddies")    --kasfAttack(kasGrowSelectionPtr("E1CorvetteBaddies"))
	
end


--
--  "watch" code for Mission03 EnemyFrig01 AttackCorvettes state
--
function Watch_Mission03_EnemyFrig01_AttackCorvettes(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if ((SobGroup_Count("GrowSelection_E1CorvetteBaddies") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("E1CorvetteBaddies"))
	
	G_EF1BusyCorvettes = 0 --destroyed
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_AttackCorvettes")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_AttackCorvettes")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 AttackFighters state
--
function Init_Mission03_EnemyFrig01_AttackFighters(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	KAS_Attack(TeamName, "GrowSelection_E1FighterBaddies")    --kasfAttack(kasGrowSelectionPtr("E1FighterBaddies"))
	
end


--
--  "watch" code for Mission03 EnemyFrig01 AttackFighters state
--
function Watch_Mission03_EnemyFrig01_AttackFighters(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if ((SobGroup_Count("GrowSelection_E1FighterBaddies") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("E1FighterBaddies"))
	
	G_EF1BusyFighters = 0 --destroyed
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_AttackFighters")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_AttackFighters")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 ImCaptured state
--
function Init_Mission03_EnemyFrig01_ImCaptured(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	
end


--
--  "watch" code for Mission03 EnemyFrig01 ImCaptured state
--
function Watch_Mission03_EnemyFrig01_ImCaptured(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if (KAS_ShipsSelectSpecial("GrowSelection_Captured", "ImNotDeadYet", 2) == 0) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("ImNotDeadYet"), 2)
	
	G_EnemyFrig01Captured = 0 --destroyed
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_ImCaptured")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_AttackMain", "Watch_Mission03_EnemyFrig01_ImCaptured")
	Init_Mission03_EnemyFrig01_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 Escape state
--
function Init_Mission03_EnemyFrig01_Escape(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, EvasiveStance)
	SobGroup_SetMaxSpeed(TeamName, 52.5)    --kasfTeamSetMaxVelocity(150)
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DiddleOutHere"))    --kasfMoveTo(kasVectorPtr("DiddleOutHere"))
	G_Escaping = 1 --created,set
	
end


--
--  "watch" code for Mission03 EnemyFrig01 Escape state
--
function Watch_Mission03_EnemyFrig01_Escape(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	if (SobGroup_IsShipNearPoint(TeamName, "DiddleOutHere", 350) ~= 0) then     --kasfNearby(kasVectorPtr("DiddleOutHere"), 1000)
	
	G_EnemyFrig01Escaped = 1 --created,set
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_EnemyFrig01", "Watch_Mission03_EnemyFrig01_Escape")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig01_NullState", "Watch_Mission03_EnemyFrig01_Escape")
	Init_Mission03_EnemyFrig01_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig01 NullState state
--
function Init_Mission03_EnemyFrig01_NullState(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	InNULLState[TeamName] = 1 --created,set
	
end


--
--  "watch" code for Mission03 EnemyFrig01 NullState state
--
function Watch_Mission03_EnemyFrig01_NullState(TeamName)
	--FSM: FSM_Mission03_EnemyFrig01
	--TeamName = EnemyFrig01
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 FSM
--
function Init_Mission03_EnemyFrig02(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	ignoredFunction()    --kasfTimerCreate("AttackTimer")
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	--kasJump("AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackCryoTrays", "Init_Mission03_EnemyFrig02")
	Init_Mission03_EnemyFrig02_AttackCryoTrays(TeamName)
	return
	
end


--
--  "watch" code for Mission03 EnemyFrig02 FSM
--
function Watch_Mission03_EnemyFrig02(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if (InNULLState[TeamName] == 0 and G_Escaping == 0) then
	
	if (G_SalCapNearby == 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 2800)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 8000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	if (KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") == 1) then     --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	
	G_SalCapNearby = 1 --set
	KASTimer_Start(SalCapTimer[TeamName], 4)
	end
	end
	if (KASTimer_IsExpiredIfSoDestroy(SalCapTimer[TeamName]) ~= 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 2800)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 8000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	NumSalCaps[TeamName] = KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") --created,set    --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	if (NumSalCaps[TeamName] == 1) then
	
	--kasfSpeechEventShips(kasGrowSelectionPtr("SalCaps"), (807 + 1024 + 268435456), 0)
	KASTimer_Start(TimerID_G_SalCapNearbyRepeat, 40)
	elseif (NumSalCaps[TeamName] == 0) then
	
	G_SalCapNearby = 0 --set
	end
	end
	if (_VIFONCE012[TeamName] == 0 and ((SobGroup_Count("EnemyFrig01") == 0) and (SobGroup_Count("ImNotDeadYet") == 0) and (KAS_TeamHealth(TeamName) < 30))) then  -- "ifonce" #12    --kasfShipsCount(kasAITeamShipsPtr("ImNotDeadYet"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))    --kasfTeamHealthAverage()
	
	_VIFONCE012[TeamName] = 1 --created,set;
	--kasJump("Escape")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_Escape", "Watch_Mission03_EnemyFrig02")
	Init_Mission03_EnemyFrig02_Escape(TeamName)
	return
	end
	if (_VIFONCE013[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 50)) then  -- "ifonce" #13    --kasfTeamHealthAverage()
	
	_VIFONCE013[TeamName] = 1 --created,set;
	G_HelpEnemyFrig01 = 1 --created,set
	end
	if (_VIFONCE014[TeamName] == 0 and (SobGroup_Count(TeamName) == 0)) then  -- "ifonce" #14    --kasfTeamCount()
	
	_VIFONCE014[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_NullState", "Watch_Mission03_EnemyFrig02")
	Init_Mission03_EnemyFrig02_NullState(TeamName)
	return
	end
	if (G_EnemyFrig02Captured == 0 and KAS_ShipsSelectSpecial("GrowSelection_Captured", "EnemyFrig02", 2) ~= 0) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("EnemyFrig02"), 2)
	
	G_EnemyFrig02Captured = 1 --created,set
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_E2Capturers", 175)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("E2Capturers"), 500)
	KAS_FillShipsByType_Normal("GrowSelection_E2Capturers", "GrowSelection_E2Capturers", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("E2Capturers"), kasGrowSelectionPtr("E2Capturers"), "SalCapCorvette")
	--kasJump("ImCaptured")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_ImCaptured", "Watch_Mission03_EnemyFrig02")
	Init_Mission03_EnemyFrig02_ImCaptured(TeamName)
	return
	end
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 AttackMain state
--
function Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	KASTimer_Set(AttackTimer[TeamName], RandomIntRange(6, 14))    --kasfRandom(6, 14)
	KASTimer_Resume(AttackTimer[TeamName])
	if (G_HelpEnemyFrig01 ~= 0) then
	
	if (G_ImNotDeadYetCaptured ~= 0 and (SobGroup_Count("EnemyFrig01") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))
	
	KAS_ShipsAdd("GrowSelection_E2Capturers", "GrowSelection_INDYCapturers")    --kasfShipsAdd(kasGrowSelectionPtr("E2Capturers"), kasGrowSelectionPtr("INDYCapturers"))
	--kasJump("AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackSalCap", "Init_Mission03_EnemyFrig02_AttackMain")
	Init_Mission03_EnemyFrig02_AttackSalCap(TeamName)
	return
	end
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Nearby", 1750)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Nearby"), 5000)
	KAS_FillShipsByType_Normal("GrowSelection_E2Capturers", "GrowSelection_Nearby", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("E2Capturers"), kasGrowSelectionPtr("Nearby"), "SalCapCorvette")
	SobGroup_FillSubtract("GrowSelection_Nearby", "GrowSelection_Nearby", "GrowSelection_E2Capturers")    --kasfShipsRemove(kasGrowSelectionPtr("Nearby"), kasGrowSelectionPtr("E2Capturers"))
	if ((KAS_FillShipsByClass_Normal("GrowSelection_E2CorvetteBaddies", "GrowSelection_Nearby", "Corvette_hw1") > 2) and (G_EF1BusyCorvettes == 0)) then     --kasfShipsSelectClass(kasGrowSelectionPtr("E2CorvetteBaddies"), kasGrowSelectionPtr("Nearby"), "CLASS_Corvette")
	
	--kasJump("AttackCorvettes")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackCorvettes", "Init_Mission03_EnemyFrig02_AttackMain")
	Init_Mission03_EnemyFrig02_AttackCorvettes(TeamName)
	return
	end
	if ((KAS_FillShipsByClass_Normal("GrowSelection_E2FighterBaddies", "GrowSelection_Nearby", "Fighter_hw1") > 6) and (G_EF1BusyFighters == 0)) then     --kasfShipsSelectClass(kasGrowSelectionPtr("E2FighterBaddies"), kasGrowSelectionPtr("Nearby"), "CLASS_Fighter")
	
	--kasJump("AttackFighters")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackFighters", "Init_Mission03_EnemyFrig02_AttackMain")
	Init_Mission03_EnemyFrig02_AttackFighters(TeamName)
	return
	end
	end
	--kasJump("AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackCryoTrays", "Init_Mission03_EnemyFrig02_AttackMain")
	Init_Mission03_EnemyFrig02_AttackCryoTrays(TeamName)
	return
	
end


--
--  "watch" code for Mission03 EnemyFrig02 AttackMain state
--
function Watch_Mission03_EnemyFrig02_AttackMain(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_AttackMain")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_AttackMain")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 AttackCryoTrays state
--
function Init_Mission03_EnemyFrig02_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if (SobGroup_Count("CryoTray10") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray10"))
	
	KAS_Attack(TeamName, "CryoTray10")    --kasfAttack(kasAITeamShipsPtr("CryoTray10"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray10")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray10"))
	elseif (SobGroup_Count("CryoTray09") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray09"))
	
	KAS_Attack(TeamName, "CryoTray09")    --kasfAttack(kasAITeamShipsPtr("CryoTray09"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray09")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray09"))
	elseif (SobGroup_Count("CryoTray08") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray08"))
	
	KAS_Attack(TeamName, "CryoTray08")    --kasfAttack(kasAITeamShipsPtr("CryoTray08"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray08")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray08"))
	elseif (SobGroup_Count("CryoTray07") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray07"))
	
	KAS_Attack(TeamName, "CryoTray07")    --kasfAttack(kasAITeamShipsPtr("CryoTray07"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray07")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray07"))
	elseif (SobGroup_Count("CryoTray06") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray06"))
	
	KAS_Attack(TeamName, "CryoTray06")    --kasfAttack(kasAITeamShipsPtr("CryoTray06"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray06")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray06"))
	elseif (SobGroup_Count("CryoTray05") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray05"))
	
	KAS_Attack(TeamName, "CryoTray05")    --kasfAttack(kasAITeamShipsPtr("CryoTray05"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray05")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray05"))
	elseif (SobGroup_Count("CryoTray04") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray04"))
	
	KAS_Attack(TeamName, "CryoTray04")    --kasfAttack(kasAITeamShipsPtr("CryoTray04"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray04")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray04"))
	elseif (SobGroup_Count("CryoTray03") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray03"))
	
	KAS_Attack(TeamName, "CryoTray03")    --kasfAttack(kasAITeamShipsPtr("CryoTray03"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray03")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray03"))
	elseif (SobGroup_Count("CryoTray02") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray02"))
	
	KAS_Attack(TeamName, "CryoTray02")    --kasfAttack(kasAITeamShipsPtr("CryoTray02"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray02")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray02"))
	elseif (SobGroup_Count("CryoTray01") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray01"))
	
	KAS_Attack(TeamName, "CryoTray01")    --kasfAttack(kasAITeamShipsPtr("CryoTray01"))
	KAS_ShipsAdd("GrowSelection_AttackTargets01", "CryoTray01")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets01"), kasAITeamShipsPtr("CryoTray01"))
	else
	
	--kasJump("Escape")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_Escape", "Init_Mission03_EnemyFrig02_AttackCryoTrays")
	Init_Mission03_EnemyFrig02_Escape(TeamName)
	return
	end
	
end


--
--  "watch" code for Mission03 EnemyFrig02 AttackCryoTrays state
--
function Watch_Mission03_EnemyFrig02_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if ((SobGroup_Count("GrowSelection_AttackTargets01") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("AttackTargets01"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_AttackCryoTrays")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 AttackSalCap state
--
function Init_Mission03_EnemyFrig02_AttackSalCap(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	KAS_Attack(TeamName, "GrowSelection_E2Capturers")    --kasfAttack(kasGrowSelectionPtr("E2Capturers"))
	
end


--
--  "watch" code for Mission03 EnemyFrig02 AttackSalCap state
--
function Watch_Mission03_EnemyFrig02_AttackSalCap(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if (SobGroup_Count("GrowSelection_E2Capturers") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("E2Capturers"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_AttackSalCap")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_AttackSalCap")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 AttackCorvettes state
--
function Init_Mission03_EnemyFrig02_AttackCorvettes(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	KAS_Attack(TeamName, "GrowSelection_E2CorvetteBaddies")    --kasfAttack(kasGrowSelectionPtr("E2CorvetteBaddies"))
	
end


--
--  "watch" code for Mission03 EnemyFrig02 AttackCorvettes state
--
function Watch_Mission03_EnemyFrig02_AttackCorvettes(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if ((SobGroup_Count("GrowSelection_E2CorvetteBaddies") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("E2CorvetteBaddies"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_AttackCorvettes")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_AttackCorvettes")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 AttackFighters state
--
function Init_Mission03_EnemyFrig02_AttackFighters(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	KAS_Attack(TeamName, "GrowSelection_E2FighterBaddies")    --kasfAttack(kasGrowSelectionPtr("E2FighterBaddies"))
	
end


--
--  "watch" code for Mission03 EnemyFrig02 AttackFighters state
--
function Watch_Mission03_EnemyFrig02_AttackFighters(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if ((SobGroup_Count("GrowSelection_E2FighterBaddies") == 0) or (KASTimer_GetRemaining(AttackTimer[TeamName]) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("E2FighterBaddies"))
	
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_AttackFighters")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_AttackFighters")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 ImCaptured state
--
function Init_Mission03_EnemyFrig02_ImCaptured(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	
end


--
--  "watch" code for Mission03 EnemyFrig02 ImCaptured state
--
function Watch_Mission03_EnemyFrig02_ImCaptured(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if (KAS_ShipsSelectSpecial("GrowSelection_Captured", "ImNotDeadYet", 2) == 0) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("ImNotDeadYet"), 2)
	
	G_EnemyFrig02Captured = 0 --destroyed
	--kasJump("AttackMain")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_ImCaptured")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_AttackMain", "Watch_Mission03_EnemyFrig02_ImCaptured")
	Init_Mission03_EnemyFrig02_AttackMain(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 Escape state
--
function Init_Mission03_EnemyFrig02_Escape(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, EvasiveStance)
	SobGroup_SetMaxSpeed(TeamName, 52.5)    --kasfTeamSetMaxVelocity(150)
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DiddleOutHere"))    --kasfMoveTo(kasVectorPtr("DiddleOutHere"))
	G_Escaping = 1 --created,set
	
end


--
--  "watch" code for Mission03 EnemyFrig02 Escape state
--
function Watch_Mission03_EnemyFrig02_Escape(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	if (SobGroup_IsShipNearPoint(TeamName, "DiddleOutHere", 350) ~= 0) then     --kasfNearby(kasVectorPtr("DiddleOutHere"), 1000)
	
	G_EnemyFrig02Escaped = 1 --created,set
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_EnemyFrig02", "Watch_Mission03_EnemyFrig02_Escape")
	KASRule_Add(TeamName, "Watch_Mission03_EnemyFrig02_NullState", "Watch_Mission03_EnemyFrig02_Escape")
	Init_Mission03_EnemyFrig02_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 EnemyFrig02 NullState state
--
function Init_Mission03_EnemyFrig02_NullState(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	InNULLState[TeamName] = 1 --created,set
	
end


--
--  "watch" code for Mission03 EnemyFrig02 NullState state
--
function Watch_Mission03_EnemyFrig02_NullState(TeamName)
	--FSM: FSM_Mission03_EnemyFrig02
	--TeamName = EnemyFrig02
	
end


--
--  "initialize" code for Mission03 ImNotDeadYet FSM
--
function Init_Mission03_ImNotDeadYet(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	SobGroup_SetHealth(TeamName, 40 / 100)    --kasfTeamSetPercentDamaged(40)
	AvoidingFire[TeamName] = 0 --created,set
	AttackReissued[TeamName] = 0 --created,set
	--kasJump("AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_AttackCryoTrays", "Init_Mission03_ImNotDeadYet")
	Init_Mission03_ImNotDeadYet_AttackCryoTrays(TeamName)
	return
	
end


--
--  "watch" code for Mission03 ImNotDeadYet FSM
--
function Watch_Mission03_ImNotDeadYet(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	if (InNULLState[TeamName] == 0 and G_Escaping == 0) then
	
	if (G_SalCapNearby == 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 2800)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 8000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	if (KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") == 1) then     --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	
	G_SalCapNearby = 1 --set
	KASTimer_Start(SalCapTimer[TeamName], 4)
	end
	end
	if (KASTimer_IsExpiredIfSoDestroy(SalCapTimer[TeamName]) ~= 0) then
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SalCapTest", 3150)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SalCapTest"), 9000)
	KAS_FindEnemiesNearby("GrowSelection_SalCapTest", 875)    --kasfFindEnemiesNearby(kasGrowSelectionPtr("SalCapTest"), 2500)
	NumSalCaps[TeamName] = KAS_FillShipsByType_Normal("GrowSelection_SalCaps", "GrowSelection_SalCapTest", "SalvageCorvette") --created,set    --kasfShipsSelectType(kasGrowSelectionPtr("SalCaps"), kasGrowSelectionPtr("SalCapTest"), "SalCapCorvette")
	if (NumSalCaps[TeamName] == 1) then
	
	--kasfSpeechEventShips(kasGrowSelectionPtr("SalCaps"), (807 + 1024 + 268435456), 0)
	KASTimer_Start(TimerID_G_SalCapNearbyRepeat, 40)
	elseif (NumSalCaps[TeamName] == 0) then
	
	G_SalCapNearby = 0 --set
	end
	end
	if ((AvoidingFire[TeamName] == 0) and (KAS_UnderAttack(TeamName, "GrowSelection_NULL") ~= 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("NULL"))
	
	AvoidingFire[TeamName] = 1 --set
	AttackReissued[TeamName] = 1 --set
	elseif (AvoidingFire[TeamName] ~= 0 and (KAS_UnderAttack(TeamName, "GrowSelection_NULL") == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("NULL"))
	
	AvoidingFire[TeamName] = 0 --set
	AttackReissued[TeamName] = 1 --set
	end
	if (_VIFONCE015[TeamName] == 0 and ((SobGroup_Count("EnemyFrig01") == 0) and (SobGroup_Count("EnemyFrig02") == 0) and (KAS_TeamHealth(TeamName) < 30))) then  -- "ifonce" #15    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig02"))    --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))    --kasfTeamHealthAverage()
	
	_VIFONCE015[TeamName] = 1 --created,set;
	--kasJump("Escape")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_Escape", "Watch_Mission03_ImNotDeadYet")
	Init_Mission03_ImNotDeadYet_Escape(TeamName)
	return
	end
	if (_VIFONCE016[TeamName] == 0 and (SobGroup_Count(TeamName) == 0)) then  -- "ifonce" #16    --kasfTeamCount()
	
	_VIFONCE016[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_NullState", "Watch_Mission03_ImNotDeadYet")
	Init_Mission03_ImNotDeadYet_NullState(TeamName)
	return
	end
	if (G_ImNotDeadYetCaptured == 0 and (KAS_ShipsSelectSpecial("GrowSelection_Captured", "ImNotDeadYet", 2) ~= 0)) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("ImNotDeadYet"), 2)
	
	G_ImNotDeadYetCaptured = 1 --created,set
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_INDYCapturers", 175)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("INDYCapturers"), 500)
	KAS_FillShipsByType_Normal("GrowSelection_INDYCapturers", "GrowSelection_INDYCapturers", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("INDYCapturers"), kasGrowSelectionPtr("INDYCapturers"), "SalCapCorvette")
	--kasJump("ImCaptured")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_ImCaptured", "Watch_Mission03_ImNotDeadYet")
	Init_Mission03_ImNotDeadYet_ImCaptured(TeamName)
	return
	end
	end
	
end


--
--  "initialize" code for Mission03 ImNotDeadYet AttackCryoTrays state
--
function Init_Mission03_ImNotDeadYet_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	if (SobGroup_Count("CryoTray10") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray10"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray10")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray10"))
	elseif (SobGroup_Count("CryoTray09") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray09"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray09")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray09"))
	elseif (SobGroup_Count("CryoTray08") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray08"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray08")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray08"))
	elseif (SobGroup_Count("CryoTray07") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray07"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray07")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray07"))
	elseif (SobGroup_Count("CryoTray06") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray06"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray06")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray06"))
	elseif (SobGroup_Count("CryoTray05") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray05"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray05")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray05"))
	elseif (SobGroup_Count("CryoTray04") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray04"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray04")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray04"))
	elseif (SobGroup_Count("CryoTray03") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray03"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray03")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray03"))
	elseif (SobGroup_Count("CryoTray02") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray02"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray02")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray02"))
	elseif (SobGroup_Count("CryoTray01") ~= 0) then     --kasfShipsCount(kasAITeamShipsPtr("CryoTray01"))
	
	KAS_ShipsAdd("GrowSelection_AttackTargets", "CryoTray01")    --kasfShipsAdd(kasGrowSelectionPtr("AttackTargets"), kasAITeamShipsPtr("CryoTray01"))
	else
	
	--kasJump("Escape")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_Escape", "Init_Mission03_ImNotDeadYet_AttackCryoTrays")
	Init_Mission03_ImNotDeadYet_Escape(TeamName)
	return
	end
	if (AvoidingFire[TeamName] ~= 0) then
	
	KAS_MoveAttack(TeamName, "GrowSelection_AttackTargets")    --kasfMoveAttack(kasGrowSelectionPtr("AttackTargets"))
	else
	
	KAS_Attack(TeamName, "GrowSelection_AttackTargets")    --kasfAttack(kasGrowSelectionPtr("AttackTargets"))
	end
	
end


--
--  "watch" code for Mission03 ImNotDeadYet AttackCryoTrays state
--
function Watch_Mission03_ImNotDeadYet_AttackCryoTrays(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	if (G_EnemyFrig02Captured ~= 0 and (SobGroup_Count("EnemyFrig01") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("EnemyFrig01"))
	
	--kasJump("Escape")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet_AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_Escape", "Watch_Mission03_ImNotDeadYet_AttackCryoTrays")
	Init_Mission03_ImNotDeadYet_Escape(TeamName)
	return
	end
	if ((SobGroup_Count("GrowSelection_AttackTargets") == 0) or (AttackReissued[TeamName] ~= 0)) then     --kasfShipsCount(kasGrowSelectionPtr("AttackTargets"))
	
	AttackReissued[TeamName] = 0 --set
	--kasJump("AttackCryoTrays")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet_AttackCryoTrays")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_AttackCryoTrays", "Watch_Mission03_ImNotDeadYet_AttackCryoTrays")
	Init_Mission03_ImNotDeadYet_AttackCryoTrays(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotDeadYet ImCaptured state
--
function Init_Mission03_ImNotDeadYet_ImCaptured(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Capturers", 175)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Capturers"), 500)
	KAS_FillShipsByType_Normal("GrowSelection_Capturers", "GrowSelection_Capturers", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Capturers"), kasGrowSelectionPtr("Capturers"), "SalCapCorvette")
	
end


--
--  "watch" code for Mission03 ImNotDeadYet ImCaptured state
--
function Watch_Mission03_ImNotDeadYet_ImCaptured(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	if (KAS_ShipsSelectSpecial("GrowSelection_Captured", "ImNotDeadYet", 2) == 0) then     --kasfShipsSelectSpecial(kasGrowSelectionPtr("Captured"), kasAITeamShipsPtr("ImNotDeadYet"), 2)
	
	G_ImNotDeadYetCaptured = 0 --destroyed
	--kasJump("AttackCryoTrays")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet_ImCaptured")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_AttackCryoTrays", "Watch_Mission03_ImNotDeadYet_ImCaptured")
	Init_Mission03_ImNotDeadYet_AttackCryoTrays(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotDeadYet Escape state
--
function Init_Mission03_ImNotDeadYet_Escape(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, EvasiveStance)
	SobGroup_SetMaxSpeed(TeamName, 52.5)    --kasfTeamSetMaxVelocity(150)
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DiddleOutHere"))    --kasfMoveTo(kasVectorPtr("DiddleOutHere"))
	G_Escaping = 1 --created,set
	
end


--
--  "watch" code for Mission03 ImNotDeadYet Escape state
--
function Watch_Mission03_ImNotDeadYet_Escape(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	if (SobGroup_IsShipNearPoint(TeamName, "DiddleOutHere", 350) ~= 0) then     --kasfNearby(kasVectorPtr("DiddleOutHere"), 1000)
	
	G_ImNotDeadYetEscaped = 1 --created,set
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission03_ImNotDeadYet", "Watch_Mission03_ImNotDeadYet_Escape")
	KASRule_Add(TeamName, "Watch_Mission03_ImNotDeadYet_NullState", "Watch_Mission03_ImNotDeadYet_Escape")
	Init_Mission03_ImNotDeadYet_NullState(TeamName)
	return
	end
	
end


--
--  "initialize" code for Mission03 ImNotDeadYet NullState state
--
function Init_Mission03_ImNotDeadYet_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	InNULLState[TeamName] = 1 --created,set
	
end


--
--  "watch" code for Mission03 ImNotDeadYet NullState state
--
function Watch_Mission03_ImNotDeadYet_NullState(TeamName)
	--FSM: FSM_Mission03_ImNotDeadYet
	--TeamName = ImNotDeadYet
	
end


--
--  "initialize" code for Mission03 DamagedCryo FSM
--
function Init_Mission03_DamagedCryo(TeamName)
	--FSM: FSM_Mission03_DamagedCryo
	--TeamName = "CryoTray10"
	SobGroup_SetHealth(TeamName, 75 / 100)    --kasfTeamSetPercentDamaged(75)
	
end


--
--  "watch" code for Mission03 DamagedCryo FSM
--
function Watch_Mission03_DamagedCryo(TeamName)
	--FSM: FSM_Mission03_DamagedCryo
	--TeamName = "CryoTray10"
	
end


--
--  "initialize" code for Mission03 mission
--
function Init_Mission03(MissionName)
	--FSM: FSM_Mission03
	--MissionName = "Mission03"
	KAS_TumbleDerelict("Der_Scaffold_scarred", -7, 20, 0, 0)    --kasfRotateDerelictType("Scaffold_scarred", -7, 20, 0, 0)
	KAS_TumbleDerelict("Der_ScaffoldFingerA_scarred", -7, 20, 0, 0)    --kasfRotateDerelictType("ScaffoldFingerA_scarred", -7, 20, 0, 0)
	KAS_TumbleDerelict("Der_ScaffoldFingerB_scarred", 28, -15, 0, 5)    --kasfRotateDerelictType("ScaffoldFingerB_scarred", 28, -15, 0, 5)
	KAS_TumbleDerelict("Der_Junk1_strut", 0, 0, 0, 180)    --kasfRotateDerelictType("Junk1_strut", 0, 0, 0, 180)
	KAS_TumbleDerelict("Der_Junk0_sensors", 0, 0, 0, 100)    --kasfRotateDerelictType("Junk0_sensors", 0, 0, 0, 100)
	KAS_TumbleDerelict("Der_Junk1_partA", 0, 0, 0, 230)    --kasfRotateDerelictType("Junk1_partA", 0, 0, 0, 230)
	KAS_TumbleDerelict("Der_Junk1_partB", 0, 0, 0, 300)    --kasfRotateDerelictType("Junk1_partB", 0, 0, 0, 300)
	--kasFSMCreate("ImNotHere")
	KASRule_AddFSM("ImNotHere", "Watch_Mission03_ImNotHere", "Init_Mission03")
	Init_Mission03_ImNotHere("ImNotHere")
	--kasFSMCreate("EnemyFrig01")
	KASRule_AddFSM("EnemyFrig01", "Watch_Mission03_EnemyFrig01", "Init_Mission03")
	Init_Mission03_EnemyFrig01("EnemyFrig01")
	--kasFSMCreate("EnemyFrig02")
	KASRule_AddFSM("EnemyFrig02", "Watch_Mission03_EnemyFrig02", "Init_Mission03")
	Init_Mission03_EnemyFrig02("EnemyFrig02")
	--kasFSMCreate("ImNotDeadYet")
	KASRule_AddFSM("ImNotDeadYet", "Watch_Mission03_ImNotDeadYet", "Init_Mission03")
	Init_Mission03_ImNotDeadYet("ImNotDeadYet")
	--kasFSMCreate("DamagedCryo")
	KASRule_AddFSM("CryoTray10", "Watch_Mission03_DamagedCryo", "Init_Mission03")
	Init_Mission03_DamagedCryo("CryoTray10")
	G_SalcapKilled = 0 --created,set
	SalcapLastCount = KAS_FindPlayerShipsOfType("GrowSelection_Sal", "SalvageCorvette", 0) --created,set    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("Sal"), "SalCapCorvette")
	G_SalCapNearby = 0 --created,set
	KAS_CampaignAutoSave(3, "$61173")    --kasfSaveLevel(3, LSTRING_LevelSave[strCurLanguage])
	
    --make sure these enemy frigs don't get added to player fleet if/when captured
    SobGroup_InactiveWhenCaptured("ImNotDeadYet", 1)
    SobGroup_InactiveWhenCaptured("EnemyFrig01", 1)
    SobGroup_InactiveWhenCaptured("EnemyFrig02", 1)
end


--
--  "watch" code for Mission03 mission
--
function Watch_Mission03(MissionName)
	--FSM: FSM_Mission03
	--MissionName = "Mission03"
	KAS_FindPlayerShipsOfType("GrowSelection_CryoTrays", "CryoTray_M03", 0)    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("CryoTrays"), "CryoTray_M03")
	KAS_FindPlayerShipsOfType("GrowSelection_EnemyFrigs", "AssaultFrigate", 0)    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("EnemyFrigs"), "StandardFrigate")
	SalcapCurCount = KAS_FindPlayerShipsOfType("GrowSelection_Sal", "SalvageCorvette", 0) --created,set    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("Sal"), "SalCapCorvette")
	if (SalcapCurCount < SalcapLastCount) then
	
	G_SalcapKilled = G_SalcapKilled + 1
	SalcapLastCount = SalcapCurCount --set
	elseif (SalcapCurCount > SalcapLastCount) then
	
	SalcapLastCount = SalcapCurCount --set
	end
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_SalCapNearbyRepeat) ~= 0) then
	
	G_SalCapNearby = 0 --set
	end
	if (_VIFONCE017 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #17    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE017 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end
	if (_VIFONCE018 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #18    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE018 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end
	if (_VIFONCE019 == 0 and (KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0)) then  -- "ifonce" #19    --kasfDoesPlayerHave("Chassis2")
	
	_VIFONCE019 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	end
	
end

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_AttackTargets")
    KASSobGroup_Create("GrowSelection_AttackTargets01")
    KASSobGroup_Create("GrowSelection_BadDudes")
    KASSobGroup_Create("GrowSelection_Captured")
    KASSobGroup_Create("GrowSelection_CapturedFrig")
    KASSobGroup_Create("GrowSelection_Capturers")
    KASSobGroup_Create("GrowSelection_CryoTrays")
    KASSobGroup_Create("GrowSelection_E1Capturers")
    KASSobGroup_Create("GrowSelection_E1CorvetteBaddies")
    KASSobGroup_Create("GrowSelection_E1FighterBaddies")
    KASSobGroup_Create("GrowSelection_E2Capturers")
    KASSobGroup_Create("GrowSelection_E2CorvetteBaddies")
    KASSobGroup_Create("GrowSelection_E2FighterBaddies")
    KASSobGroup_Create("GrowSelection_EnemyFrigs")
    KASSobGroup_Create("GrowSelection_INDYCapturers")
    KASSobGroup_Create("GrowSelection_NULL")
    KASSobGroup_Create("GrowSelection_Nearby")
    KASSobGroup_Create("GrowSelection_Sal")
    KASSobGroup_Create("GrowSelection_SalCapTest")
    KASSobGroup_Create("GrowSelection_SalCaps")
    KASSobGroup_Create("GrowSelection_Stuff")
    KASSobGroup_CreateIfNotExist("CryoTray10")
    KASSobGroup_CreateIfNotExist("EnemyFrig01")
    KASSobGroup_CreateIfNotExist("EnemyFrig02")
    KASSobGroup_CreateIfNotExist("ImNotDeadYet")

    Sound_SpeechSubtitlePath("speech:missions/Mission03/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;CryoTray10;EnemyFrig01;EnemyFrig02;ImNotDeadYet;ImNotHere;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourScheme("CryoTray10", 1)
    KAS_SetColourScheme("EnemyFrig01", 1)
    KAS_SetColourScheme("ImNotDeadYet", 1)
    Player_SetPlayerName(1, "$60471")

    singlePlayerOnStartOrLoad(03)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(03)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission03", "Watch_Mission03", "OnInit")
    Init_Mission03("Mission03")
    KAS_SetLetterboxStart(1, 5, 1, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_SetFormation("EnemyFrig01", "Broad")
    KAS_SetFormation("ImNotDeadYet", "Wall")
end

