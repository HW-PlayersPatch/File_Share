--
--  Generated\Mission12.c
--
--  Finite state machine routines for "Mission12" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission12.kp by KAS2C Version 2.05
--


--#include "Generated\Mission12.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_ACT2HasBegun = 0
G_ACT3HasBegun = 0
G_AttackingProximitySensors = 0
G_CLICK_DestroyField = 0
G_CLICK_ProtectDefector = 0
G_CLICK_ProtectFleet = 0
G_CarrierLowOnHealth = 0
G_DefectorHasSwitchedSides = 0
G_DefectorIsOnBoard = 0
G_DefectorIsReadyToLeave = 0
G_DestroyFieldObjectiveCreated = 0
G_FleetIntelIntroHasPlayed = 0
G_GoGravWells = 0
G_IntIntsAreFree = 0
G_IntScoutsAreFree = 0
G_MakeDefectorAnAlly = 0
G_ProtectDefectorHasPlayed = 0
G_SHIPSDefector = 0
G_SHIPSSTRCGWorldATTACK = 0
G_STRBomDesSelectionExhausted = 0
G_STRBomDestroyerIndex = 0
G_STRBomFrigSelectionExhausted = 0
G_STRBomFrigateIndex = 0
G_STRBomberATBuilding = 0
G_STRBomberATNewships = 0
G_STRBomberATREADY = 0
G_STRBomberHCBuilding = 0
G_STRBomberHCNewships = 0
G_STRBomberHCREADY = 0
G_STRBomberTeamIsBuilt = 0
G_STRBombersLAUNCH = 0
G_STRBombersToRequest = 0
G_STRCGCGsToRequest = 0
G_STRCGCloakBuilding = 0
G_STRCGCloakNewships = 0
G_STRCGCloakREADY = 0
G_STRCGDesSelectionExhausted = 0
G_STRCGDestroyerIndex = 0
G_STRCGFrigSelectionExhausted = 0
G_STRCGFrigateIndex = 0
G_STRCGIonBuilding = 0
G_STRCGIonNewships = 0
G_STRCGIonREADY = 0
G_STRCGIonTeamIsBuilt = 0
G_STRCGIonsToRequest = 0
G_STRCGLAUNCH = 0
G_STRCorvsToRequest = 0
G_STRGWCorvSelectionExhausted = 0
G_STRGWCorvetteIndex = 0
G_STRGWFightSelectionExhausted = 0
G_STRGWFighterIndex = 0
G_STRGWGWsToRequest = 0
G_STRGWGravBuilding = 0
G_STRGWGravNewships = 0
G_STRGWGravREADY = 0
G_STRGWIonBuilding = 0
G_STRGWIonNewships = 0
G_STRGWIonREADY = 0
G_STRGWIonTeamIsBuilt = 0
G_STRGWIonsToRequest = 0
G_STRGWLAUNCH = 0
G_STRIntFightSelectionExhausted = 0
G_STRIntFighterIndex = 0
G_STRIntFrigSelectionExhausted = 0
G_STRIntFrigateIndex = 0
G_STRIntIntBuilding = 0
G_STRIntIntNewships = 0
G_STRIntIntREADY = 0
G_STRIntIntsToRequest = 0
G_STRIntScoutBuilding = 0
G_STRIntScoutNewships = 0
G_STRIntScoutREADY = 0
G_STRIntScoutsToRequest = 0
G_STRInterceptorsLAUNCH = 0
G_STRMGCorvSelectionExhausted = 0
G_STRMGCorvetteIndex = 0
G_STRMGFightSelectionExhausted = 0
G_STRMGFighterIndex = 0
G_STRMGLAUNCH = 0
G_STRMGMGBuilding = 0
G_STRMGMGNewships = 0
G_STRMGMGREADY = 0
G_STRMGMGTeamIsBuilt = 0
G_STRMGSFBuilding = 0
G_STRMGSFNewships = 0
G_STRMGSFREADY = 0
G_STRMGsToRequest = 0
G_STRSFsToRequest = 0
G_THISISTHEMOTHERSHIP = 0
G_TOTALCarrierAttackersACT1 = 0
G_UnderAttackHasPlayed = 0
SetMediumGuns = 0
_VIFONCE031 = 0
_VIFONCE032 = 0
_VIFONCE033 = 0
_VIFONCE034 = 0
_VIFONCE035 = 0
_VIFONCE036 = 0
_VIFONCE037 = 0
_VIFONCE038 = 0
_VIFONCE039 = 0
_VIFONCE040 = 0
_VIFONCE041 = 0
_VIFONCE042 = 0
_VIFONCE043 = 0
_VIFONCE044 = 0
_VIFONCE045 = 0
_VIFONCE046 = 0
_VIFONCE047 = 0
_VIFONCE048 = 0
_VIFONCE049 = 0
_VIFONCE050 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.

--Following are Team-Scoped variables: referenced differently than globals.
ACT3HasBegun = {["STRIntInt"] = 0, ["STRIntScout"] = 0, ["STRBomberAT"] = 0, ["STRBomberHC"] = 0, ["STRMGMG"] = 0, ["STRMGSF"] = 0, ["STRGWGrav"] = 0, ["STRGWIon"] = 0, ["STRCGCloak"] = 0, ["STRCGIon"] = 0}
AttackingCapital = {["GuardGWTeam1"] = 0, ["GuardGWTeam2"] = 0, ["GuardGWTeam3"] = 0}
AttackingStrikeCraft = {["GuardGWTeam1"] = 0, ["GuardGWTeam2"] = 0, ["GuardGWTeam3"] = 0}
BOMBERProductionTime = {["StrikeTeamDispatch"] = 0}
CGProductionTime = {["StrikeTeamDispatch"] = 0}
DockingWithCarrier = {["STRMGMG"] = 0, ["STRMGSF"] = 0}
DockingWithSupportFrigate = {["STRMGMG"] = 0, ["STRMGSF"] = 0}
GWProductionTime = {["StrikeTeamDispatch"] = 0}
INTERCEPTORProductionTime = {["StrikeTeamDispatch"] = 0}
MGProductionTime = {["StrikeTeamDispatch"] = 0}
PlayerChangedFocus = {["FleetIntel"] = 0}
SHIPSKilled = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
SHIPSNeeded = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
SHIPSNewships = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
SHIPSOriginal = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
SHIPSRequested = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
STRBomberHCKamikazeNow = {["STRBomberAT"] = 0, ["STRBomberHC"] = 0}
STRCGCGKamikazeNow = {["STRCGCloak"] = 0, ["STRCGIon"] = 0}
STRGWSFKamikazeNow = {["STRGWGrav"] = 0, ["STRGWIon"] = 0}
STRMGSFKamikazeNow = {["STRMGMG"] = 0, ["STRMGSF"] = 0}
TimeBetweenLaunches = {["StrikeTeamDispatch"] = 0}
WaitingForShips = {["GuardCarrierCorv"] = 0, ["GuardCarrierDef"] = 0, ["GuardCarrierIon"] = 0}
_VIFONCE001 = {["FleetIntel"] = 0}
_VIFONCE002 = {["FleetIntel"] = 0}
_VIFONCE003 = {["FleetIntel"] = 0}
_VIFONCE004 = {["FleetIntel"] = 0}
_VIFONCE005 = {["FleetIntel"] = 0}
_VIFONCE006 = {["FleetIntel"] = 0}
_VIFONCE007 = {["FleetIntel"] = 0}
_VIFONCE008 = {["FleetIntel"] = 0}
_VIFONCE009 = {["FleetIntel"] = 0}
_VIFONCE010 = {["FleetIntel"] = 0}
_VIFONCE011 = {["Carrier"] = 0}
_VIFONCE012 = {["Cruiser"] = 0}
_VIFONCE013 = {["Cruiser"] = 0}
_VIFONCE014 = {["GuardCruiserCorv"] = 0, ["GuardCruiserDef"] = 0, ["GuardCruiserIon"] = 0}
_VIFONCE015 = {["STRIntInt"] = 0, ["STRIntScout"] = 0}
_VIFONCE016 = {["STRIntInt"] = 0, ["STRIntScout"] = 0}
_VIFONCE017 = {["STRBomberAT"] = 0, ["STRBomberHC"] = 0}
_VIFONCE018 = {["STRBomberAT"] = 0, ["STRBomberHC"] = 0}
_VIFONCE019 = {["STRMGMG"] = 0, ["STRMGSF"] = 0}
_VIFONCE020 = {["STRMGMG"] = 0, ["STRMGSF"] = 0}
_VIFONCE021 = {["STRGWGrav"] = 0, ["STRGWIon"] = 0}
_VIFONCE022 = {["STRGWGrav"] = 0, ["STRGWIon"] = 0}
_VIFONCE023 = {["STRCGCloak"] = 0, ["STRCGIon"] = 0}
_VIFONCE024 = {["STRCGCloak"] = 0, ["STRCGIon"] = 0}
_VIFONCE025 = {["Defector"] = 0}
_VIFONCE026 = {["Defector"] = 0}
_VIFONCE027 = {["Defector"] = 0}
_VIFONCE028 = {["ChaseDestroyer"] = 0, ["ChaseFrigate"] = 0, ["ChaseInt"] = 0, ["ChaseSupport"] = 0}
_VIFONCE029 = {["ChaseDestroyer"] = 0, ["ChaseFrigate"] = 0, ["ChaseInt"] = 0, ["ChaseSupport"] = 0}
_VIFONCE030 = {["StrikeTeamDispatch"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
BringInTheBruiser = {["Cruiser"] = 22, ["GuardCruiserCorv"] = 23, ["GuardCruiserDef"] = 24, ["GuardCruiserIon"] = 25}
DefectorWideScreen = {["FleetIntel"] = 26}
GoDecideAgain = {["STRIntInt"] = 27, ["STRIntScout"] = 28, ["STRBomberAT"] = 29, ["STRBomberHC"] = 30, ["STRMGMG"] = 31, ["STRMGSF"] = 32, ["STRGWGrav"] = 33, ["STRGWIon"] = 34, ["STRCGCloak"] = 35, ["STRCGIon"] = 36}
KeepDefectorAlive = {["Defector"] = 37}
LaunchNextTeam = {["StrikeTeamDispatch"] = 38}


--kas timer names, with mappings to indices
TimerID_G_AllObjectivesComplete = 9
TimerID_G_ChaseDefectorsComeOnIn = 11
TimerID_G_DefectorHasHyperspacedIn = 10
TimerID_G_DestroyerComeOnIn = 13
TimerID_G_DestroyerIsIn = 17
TimerID_G_FCHyperspaceSuccessful = 4
TimerID_G_FocusOnDefectorNow = 8
TimerID_G_FrigateComeOnIn = 14
TimerID_G_FrigateIsIn = 18
TimerID_G_GoBackToPreviousFocus = 1
TimerID_G_IntComeOnIn = 16
TimerID_G_PlayMissileTech = 6
TimerID_G_StartUnLetterbox = 2
TimerID_G_StayFocusedOnDefector = 0
TimerID_G_SupportComeOnIn = 15
TimerID_G_SupportFrigateIsIn = 19
TimerID_G_TechnologyTimer = 7
TimerID_G_TellInterceptorsToLaunch = 20
TimerID_G_UnderAttackTimer = 5
TimerID_G_WaitForLBXOutToFinish = 3
TimerID_G_WaitToHyperspaceOut = 12
TimerID_LocationCardTimer = 21


--KAS objective names, set by KASObjective_Add
ObjectiveID_DestroyField = 0
ObjectiveID_Hyperspace = 3
ObjectiveID_ProtectDefector = 2
ObjectiveID_ProtectFleet = 1
ObjectiveID_Count = 4


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"12 - Galactic Core",
	"12 - Noyau Galactique",
	"12 - Galaktischer Kern",
	"12 - El centro de la galaxia",
	"12 - Il cuore della galassia", }
LSTRING_LocationCard = {  -- multilingual strings
	"GALACTIC CORE",
	"NOYAU GALACTIQUE",
	"GALAKTISCHER KERN",
	"EL CENTRO DE LA GALAXIA",
	"IL CUORE DELLA GALASSIA", }
LSTRING_FICaughtInFieldTASKBAR = {  -- multilingual strings
	"Destroy source of gravity field",
	"Destruction de la source du champ de gravité",
	"Quelle des Gravitationsfeldes vernichten.",
	"Destruir la fuente del campo gravitatorio",
	"Distruggi la fonte del campo gravitazionale", }
LSTRING_FIUnderAttackTASKBAR = {  -- multilingual strings
	"Protect the Fleet",
	"Protection de la Flotte",
	"Die Flotte schützen.",
	"Proteger la flota",
	"Progetta la flotta", }
LSTRING_FIHelpDefectorTASKBAR = {  -- multilingual strings
	"Protect the Defector",
	"Protection du Transfuge",
	"Den Überläufer schützen.",
	"Proteger el deflector",
	"Proteggi il Defector", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                      HYPERSPACE",
	"                      HYPERESPACE",
	"           HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission12 FleetIntel FSM
--
function Init_Mission12_FleetIntel(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Init_Mission12_FleetIntel")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 FleetIntel FSM
--
function Watch_Mission12_FleetIntel(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission12 FleetIntel FCIntro state
--
function Init_Mission12_FleetIntel_FCIntro(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60653", 3)    --kasfSpeechEvent((653 + 2048 + 268435456), 0)
	G_GoGravWells = 1 --created,set
	
end 


--
--  "watch" code for Mission12 FleetIntel FCIntro state
--
function Watch_Mission12_FleetIntel_FCIntro(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FICaughtInField")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FCIntro")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FICaughtInField", "Watch_Mission12_FleetIntel_FCIntro")
	Init_Mission12_FleetIntel_FICaughtInField(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FICaughtInField state
--
function Init_Mission12_FleetIntel_FICaughtInField(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60654", 3)    --kasfSpeechEvent((654 + 4096 + 268435456), 0)
	KAS_MusicPlayType("data:sound/music/battle/B04_EvilEmpire", MUS_Ambient)    --kasfMusicPlay(15)
	
end 


--
--  "watch" code for Mission12 FleetIntel FICaughtInField state
--
function Watch_Mission12_FleetIntel_FICaughtInField(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	if (_VIFONCE001[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	G_FleetIntelIntroHasPlayed = 1 --created,set
	end 
	G_CLICK_DestroyField = 0 --destroyed
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FICaughtInField")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FICaughtInField")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FIUnderAttack state
--
function Init_Mission12_FleetIntel_FIUnderAttack(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FIPlayerShips")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FIPlayerShips"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_FIPlayerFighters", "GrowSelection_FIPlayerShips", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("FIPlayerFighters"), kasGrowSelectionPtr("FIPlayerShips"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_FIPlayerCorvettes", "GrowSelection_FIPlayerShips", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("FIPlayerCorvettes"), kasGrowSelectionPtr("FIPlayerShips"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_FIPlayerStrikeCraft", "GrowSelection_FIPlayerFighters")    --kasfShipsAdd(kasGrowSelectionPtr("FIPlayerStrikeCraft"), kasGrowSelectionPtr("FIPlayerFighters"))
	KAS_ShipsAdd("GrowSelection_FIPlayerStrikeCraft", "GrowSelection_FIPlayerCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("FIPlayerStrikeCraft"), kasGrowSelectionPtr("FIPlayerCorvettes"))
	if (SobGroup_Count("GrowSelection_FIPlayerStrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FIPlayerStrikeCraft"))
	
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60658", 3)    --kasfSpeechEvent((658 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60659", 3)    --kasfSpeechEvent((659 + 4096 + 268435456), 0)
	end 
	else
	
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60753", 3)    --kasfSpeechEvent((753 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60754", 3)    --kasfSpeechEvent((754 + 4096 + 268435456), 0)
	end 
	end 
	
end 


--
--  "watch" code for Mission12 FleetIntel FIUnderAttack state
--
function Watch_Mission12_FleetIntel_FIUnderAttack(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	if (_VIFONCE002[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	G_UnderAttackHasPlayed = 1 --created,set
	end 
	G_CLICK_ProtectFleet = 0 --destroyed
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIUnderAttack")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FIUnderAttack")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FIMissileTechReady state
--
function Init_Mission12_FleetIntel_FIMissileTechReady(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60655", 3)    --kasfSpeechEvent((655 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission12 FleetIntel FIMissileTechReady state
--
function Watch_Mission12_FleetIntel_FIMissileTechReady(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_UnrestrictResearchOption(0, "GuidedMissiles")    --kasfAllowPlayerToResearch("MissileWeapons")
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIMissileTechReady")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FIMissileTechReady")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FINewFighterTech state
--
function Init_Mission12_FleetIntel_FINewFighterTech(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60656", 3)    --kasfSpeechEvent((656 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60657", 3)    --kasfSpeechEvent((657 + 4096 + 268435456), 0)
	end 
	
end 


--
--  "watch" code for Mission12 FleetIntel FINewFighterTech state
--
function Watch_Mission12_FleetIntel_FINewFighterTech(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_UnrestrictResearchOption(0, "CloakedFighter")    --kasfAllowPlayerToResearch("CloakDefenseFighter")
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FINewFighterTech")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FINewFighterTech")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FocusOnDefector state
--
function Init_Mission12_FleetIntel_FocusOnDefector(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(DefectorWideScreen[TeamName], 4)
	
end 


--
--  "watch" code for Mission12 FleetIntel FocusOnDefector state
--
function Watch_Mission12_FleetIntel_FocusOnDefector(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(DefectorWideScreen[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("Defector")    --kasfTutCameraFocus(kasAITeamShipsPtr("Defector"))
	KAS_FocusShips("Defector")    --kasfTutCameraFocus(kasAITeamShipsPtr("Defector"))
	G_MakeDefectorAnAlly = 1 --created,set
	KAS_ShipsSetRetaliation("Defector", 0)    --kasfShipsSetNonRetaliation(kasAITeamShipsPtr("Defector"))
	G_DefectorHasSwitchedSides = 1 --created,set
	--kasJump("DefectorHelpMe")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FocusOnDefector")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_DefectorHelpMe", "Watch_Mission12_FleetIntel_FocusOnDefector")
	Init_Mission12_FleetIntel_DefectorHelpMe(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel DefectorHelpMe state
--
function Init_Mission12_FleetIntel_DefectorHelpMe(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(TimerID_G_StayFocusedOnDefector, 6)
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_Defector, "$60660", 3)    --kasfSpeechEvent((660 + 262144 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_Defector, "$60661", 3)    --kasfSpeechEvent((661 + 262144 + 268435456), 0)
	end 
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	
end 


--
--  "watch" code for Mission12 FleetIntel DefectorHelpMe state
--
function Watch_Mission12_FleetIntel_DefectorHelpMe(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("DefectorHelpMe2")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_DefectorHelpMe")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_DefectorHelpMe2", "Watch_Mission12_FleetIntel_DefectorHelpMe")
	Init_Mission12_FleetIntel_DefectorHelpMe2(TeamName)
	return
	end 
	if (KAS_GameMessageReceived({"Game_BandBoxFocus", "Game_ClickFocus", "KB_FocusMothership", "KB_CancelFocus", "KB_Focus", "KB_Sensors", "TB_SensorsManager"}) ~= 0) then     --kasfTutGameSentMessage("Game_BandBoxFocus,Game_ClickFocus,KB_FocusMothership,KB_CancelFocus,KB_Focus,KB_Sensors,TB_SensorsManager")
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel DefectorHelpMe2 state
--
function Init_Mission12_FleetIntel_DefectorHelpMe2(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(TimerID_G_GoBackToPreviousFocus, 1)
	KASTimer_Start(TimerID_G_StartUnLetterbox, 2)
	KASTimer_Start(TimerID_G_WaitForLBXOutToFinish, 4)
	
end 


--
--  "watch" code for Mission12 FleetIntel DefectorHelpMe2 state
--
function Watch_Mission12_FleetIntel_DefectorHelpMe2(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_GoBackToPreviousFocus) ~= 0) then 
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_StartUnLetterbox) ~= 0) then 
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus[TeamName] = 1 --created,set
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_WaitForLBXOutToFinish) ~= 0) then 
	
	--kasJump("FIHelpDefector")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_DefectorHelpMe2")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIHelpDefector", "Watch_Mission12_FleetIntel_DefectorHelpMe2")
	Init_Mission12_FleetIntel_FIHelpDefector(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FIHelpDefector state
--
function Init_Mission12_FleetIntel_FIHelpDefector(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60662", 3)    --kasfSpeechEvent((662 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission12 FleetIntel FIHelpDefector state
--
function Watch_Mission12_FleetIntel_FIHelpDefector(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	if (_VIFONCE003[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	G_ProtectDefectorHasPlayed = 1 --created,set
	KAS_PingAddShips("Defector", "DefectorPing", "$60666")    --kasfPingAddShips(kasAITeamShipsPtr("Defector"), "DefectorPing")
	end 
	G_CLICK_ProtectDefector = 0 --destroyed
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIHelpDefector")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FIHelpDefector")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FIDefectorOnBoard state
--
function Init_Mission12_FleetIntel_FIDefectorOnBoard(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60663", 3)    --kasfSpeechEvent((663 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission12 FleetIntel FIDefectorOnBoard state
--
function Watch_Mission12_FleetIntel_FIDefectorOnBoard(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	if (_VIFONCE004[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #4
	
	_VIFONCE004[TeamName] = 1 --created,set;
	G_DefectorIsOnBoard = 1 --created,set
	end 
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIDefectorOnBoard")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIIdle", "Watch_Mission12_FleetIntel_FIDefectorOnBoard")
	Init_Mission12_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 FleetIntel FIIdle state
--
function Init_Mission12_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission12 FleetIntel FIIdle state
--
function Watch_Mission12_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission12_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE005[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_FCHyperspaceSuccessful) ~= 0)) then  -- "ifonce" #5
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("FCIntro")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FCIntro", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FCIntro(TeamName)
	return
	end 
	if (_VIFONCE006[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_UnderAttackTimer) ~= 0)) then  -- "ifonce" #6
	
	_VIFONCE006[TeamName] = 1 --created,set;
	--kasJump("FIUnderAttack")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIUnderAttack", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FIUnderAttack(TeamName)
	return
	end 
	if (_VIFONCE007[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_PlayMissileTech) ~= 0)) then  -- "ifonce" #7
	
	_VIFONCE007[TeamName] = 1 --created,set;
	--kasJump("FIMissileTechReady")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIMissileTechReady", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FIMissileTechReady(TeamName)
	return
	end 
	if (_VIFONCE008[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_TechnologyTimer) ~= 0)) then  -- "ifonce" #8
	
	_VIFONCE008[TeamName] = 1 --created,set;
	--kasJump("FINewFighterTech")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FINewFighterTech", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FINewFighterTech(TeamName)
	return
	end 
	if (_VIFONCE009[TeamName] == 0 and (KASTimer_IsExpired(TimerID_G_FocusOnDefectorNow) ~= 0)) then  -- "ifonce" #9
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("FocusOnDefector")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FocusOnDefector", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FocusOnDefector(TeamName)
	return
	end 
	if (_VIFONCE010[TeamName] == 0 and (KASTimer_IsExpired(TimerID_G_AllObjectivesComplete) ~= 0)) then  -- "ifonce" #10
	
	_VIFONCE010[TeamName] = 1 --created,set;
	--kasJump("FIDefectorOnBoard")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIDefectorOnBoard", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FIDefectorOnBoard(TeamName)
	return
	end 
	if (G_CLICK_DestroyField ~= 0) then 
	
	--kasJump("FICaughtInField")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FICaughtInField", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FICaughtInField(TeamName)
	return
	end 
	if (G_CLICK_ProtectFleet ~= 0) then 
	
	--kasJump("FIUnderAttack")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIUnderAttack", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FIUnderAttack(TeamName)
	return
	end 
	if (G_CLICK_ProtectDefector ~= 0) then 
	
	--kasJump("FIHelpDefector")
	--KASRule_Remove("FSM_Mission12_FleetIntel", "Watch_Mission12_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission12_FleetIntel_FIHelpDefector", "Watch_Mission12_FleetIntel_FIIdle")
	Init_Mission12_FleetIntel_FIHelpDefector(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 TestTeam FSM
--
function Init_Mission12_TestTeam(TeamName)
	--FSM: FSM_Mission12_TestTeam
	--TeamName = TestTeam
	--kasJump("Hide")
	KASRule_Add(TeamName, "Watch_Mission12_TestTeam_Hide", "Init_Mission12_TestTeam")
	Init_Mission12_TestTeam_Hide(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 TestTeam FSM
--
function Watch_Mission12_TestTeam(TeamName)
	--FSM: FSM_Mission12_TestTeam
	--TeamName = TestTeam
	
end 


--
--  "initialize" code for Mission12 TestTeam Hide state
--
function Init_Mission12_TestTeam_Hide(TeamName)
	--FSM: FSM_Mission12_TestTeam
	--TeamName = TestTeam
	KAS_SetHidden("TestTeam", 1)    --kasfHideShips(kasAITeamShipsPtr("TestTeam"))
	
end 


--
--  "watch" code for Mission12 TestTeam Hide state
--
function Watch_Mission12_TestTeam_Hide(TeamName)
	--FSM: FSM_Mission12_TestTeam
	--TeamName = TestTeam
	
end 


--
--  "initialize" code for Mission12 GravWells FSM
--
function Init_Mission12_GravWells(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_Wait", "Init_Mission12_GravWells")
	Init_Mission12_GravWells_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GravWells FSM
--
function Watch_Mission12_GravWells(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	
end 


--
--  "initialize" code for Mission12 GravWells Move state
--
function Init_Mission12_GravWells_Move(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GravwellTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam1"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("GravwellMoveToPoint1"))    --kasfMoveTo(kasVectorPtr("GravwellMoveToPoint1"))
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam2"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("GravwellMoveToPoint2"))    --kasfMoveTo(kasVectorPtr("GravwellMoveToPoint2"))
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam3"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("GravwellMoveToPoint3"))    --kasfMoveTo(kasVectorPtr("GravwellMoveToPoint3"))
	end 
	
end 


--
--  "watch" code for Mission12 GravWells Move state
--
function Watch_Mission12_GravWells_Move(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GravwellTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam1"))
	
	if (SobGroup_IsShipNearPoint(TeamName, "GravwellMoveToPoint1", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GravwellMoveToPoint1"), 500)
	
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Move")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam2"))
	
	if (SobGroup_IsShipNearPoint(TeamName, "GravwellMoveToPoint2", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GravwellMoveToPoint2"), 500)
	
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Move")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam3"))
	
	if (SobGroup_IsShipNearPoint(TeamName, "GravwellMoveToPoint3", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GravwellMoveToPoint3"), 500)
	
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Move")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GravWells Wait state
--
function Init_Mission12_GravWells_Wait(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	
end 


--
--  "watch" code for Mission12 GravWells Wait state
--
function Watch_Mission12_GravWells_Wait(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (G_GoGravWells == 1) then 
	
	--kasJump("Wait2")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Wait")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_Wait2", "Watch_Mission12_GravWells_Wait")
	Init_Mission12_GravWells_Wait2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GravWells Wait2 state
--
function Init_Mission12_GravWells_Wait2(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	
end 


--
--  "watch" code for Mission12 GravWells Wait2 state
--
function Watch_Mission12_GravWells_Wait2(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GravwellTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam1"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell1EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell1EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Fighters", "GrowSelection_GravWell1EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Fighters"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Corvettes", "GrowSelection_GravWell1EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Corvettes"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell1StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell1StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell1StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell1StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Wait2")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Wait2")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam2"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell2EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell2EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Fighters", "GrowSelection_GravWell2EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Fighters"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Corvettes", "GrowSelection_GravWell2EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Corvettes"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell2StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell2StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell2StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell2StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Wait2")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Wait2")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam3"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell3EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell3EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Fighters", "GrowSelection_GravWell3EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Fighters"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Corvettes", "GrowSelection_GravWell3EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Corvettes"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell3StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell3StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell3StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell3StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_Wait2")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_Wait2")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GravWells GravityOn state
--
function Init_Mission12_GravWells_GravityOn(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 GravWells GravityOn state
--
function Watch_Mission12_GravWells_GravityOn(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GravwellTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam1"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell1EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell1EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Fighters", "GrowSelection_GravWell1EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Fighters"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Corvettes", "GrowSelection_GravWell1EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Corvettes"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell1StrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell1StrikeCraft"))
	
	--kasJump("GravityOff")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOff", "Watch_Mission12_GravWells_GravityOn")
	Init_Mission12_GravWells_GravityOff(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam2"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell2EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell2EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Fighters", "GrowSelection_GravWell2EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Fighters"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Corvettes", "GrowSelection_GravWell2EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Corvettes"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell2StrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell2StrikeCraft"))
	
	--kasJump("GravityOff")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOff", "Watch_Mission12_GravWells_GravityOn")
	Init_Mission12_GravWells_GravityOff(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam3"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell3EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell3EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Fighters", "GrowSelection_GravWell3EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Fighters"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Corvettes", "GrowSelection_GravWell3EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Corvettes"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell3StrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell3StrikeCraft"))
	
	--kasJump("GravityOff")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOff", "Watch_Mission12_GravWells_GravityOn")
	Init_Mission12_GravWells_GravityOff(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GravWells GravityOff state
--
function Init_Mission12_GravWells_GravityOff(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 GravWells GravityOff state
--
function Watch_Mission12_GravWells_GravityOff(TeamName)
	--FSM: FSM_Mission12_GravWells
	--TeamName = "GravwellTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GravwellTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam1"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell1EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell1EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Fighters", "GrowSelection_GravWell1EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Fighters"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell1Corvettes", "GrowSelection_GravWell1EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell1Corvettes"), kasGrowSelectionPtr("GravWell1EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell1StrikeCraft", "GrowSelection_GravWell1Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell1StrikeCraft"), kasGrowSelectionPtr("GravWell1Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell1StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell1StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell1StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell1StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_GravityOff")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam2"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell2EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell2EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Fighters", "GrowSelection_GravWell2EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Fighters"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell2Corvettes", "GrowSelection_GravWell2EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell2Corvettes"), kasGrowSelectionPtr("GravWell2EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell2StrikeCraft", "GrowSelection_GravWell2Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell2StrikeCraft"), kasGrowSelectionPtr("GravWell2Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell2StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell2StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell2StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell2StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_GravityOff")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GravwellTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GravwellTeam3"))
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GravWell3EVERYONE", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GravWell3EVERYONE"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Fighters", "GrowSelection_GravWell3EVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Fighters"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GravWell3Corvettes", "GrowSelection_GravWell3EVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GravWell3Corvettes"), kasGrowSelectionPtr("GravWell3EVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Fighters"))
	KAS_ShipsAdd("GrowSelection_GravWell3StrikeCraft", "GrowSelection_GravWell3Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GravWell3StrikeCraft"), kasGrowSelectionPtr("GravWell3Corvettes"))
	if (SobGroup_Count("GrowSelection_GravWell3StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GravWell3StrikeCraft"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, SobGroup_GetCentrePosition("GrowSelection_GravWell3StrikeCraft"))    --kasfMoveTo(kasShipsVectorPtr("GravWell3StrikeCraft"))
	--kasJump("GravityOn")
	--KASRule_Remove("FSM_Mission12_GravWells", "Watch_Mission12_GravWells_GravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_GravWells_GravityOn", "Watch_Mission12_GravWells_GravityOff")
	Init_Mission12_GravWells_GravityOn(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GravWellSupport FSM
--
function Init_Mission12_GravWellSupport(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GravWellSupport FSM
--
function Watch_Mission12_GravWellSupport(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	
end 


--
--  "initialize" code for Mission12 GravWellSupport Choose state
--
function Init_Mission12_GravWellSupport_Choose(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (KAS_TeamNamesEqual(TeamName, "GW1Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW1Support"))
	
	if (SobGroup_Count("GravwellTeam1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam1"))
	
	--kasJump("ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceGravWell", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceGravWell(TeamName)
	return
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("ServiceCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCarrier", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCarrier(TeamName)
	return
	elseif (SobGroup_Count("Cruiser") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	--kasJump("ServiceCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCruiser", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCruiser(TeamName)
	return
	else
	
	--kasJump("GiveToAI")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_GiveToAI", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_GiveToAI(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW2Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW2Support"))
	
	if (SobGroup_Count("GravwellTeam2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam2"))
	
	--kasJump("ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceGravWell", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceGravWell(TeamName)
	return
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("ServiceCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCarrier", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCarrier(TeamName)
	return
	elseif (SobGroup_Count("Cruiser") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	--kasJump("ServiceCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCruiser", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCruiser(TeamName)
	return
	else
	
	--kasJump("GiveToAI")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_GiveToAI", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_GiveToAI(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW3Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW3Support"))
	
	if (SobGroup_Count("GravwellTeam3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam3"))
	
	--kasJump("ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceGravWell", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceGravWell(TeamName)
	return
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("ServiceCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCarrier", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCarrier(TeamName)
	return
	elseif (SobGroup_Count("Cruiser") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	--kasJump("ServiceCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_ServiceCruiser", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_ServiceCruiser(TeamName)
	return
	else
	
	--kasJump("GiveToAI")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_GiveToAI", "Init_Mission12_GravWellSupport_Choose")
	Init_Mission12_GravWellSupport_GiveToAI(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission12 GravWellSupport Choose state
--
function Watch_Mission12_GravWellSupport_Choose(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	
end 


--
--  "initialize" code for Mission12 GravWellSupport ServiceGravWell state
--
function Init_Mission12_GravWellSupport_ServiceGravWell(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (KAS_TeamNamesEqual(TeamName, "GW1Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW1Support"))
	
	if (SobGroup_Count("GravwellTeam1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam1"))
	
	KAS_AttackSpecial(TeamName, "GravwellTeam1")    --kasfAttackSpecial(kasAITeamShipsPtr("GravwellTeam1"))
	else
	
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW2Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW2Support"))
	
	if (SobGroup_Count("GravwellTeam2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam2"))
	
	KAS_AttackSpecial(TeamName, "GravwellTeam2")    --kasfAttackSpecial(kasAITeamShipsPtr("GravwellTeam2"))
	else
	
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW3Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW3Support"))
	
	if (SobGroup_Count("GravwellTeam3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam3"))
	
	KAS_AttackSpecial(TeamName, "GravwellTeam3")    --kasfAttackSpecial(kasAITeamShipsPtr("GravwellTeam3"))
	else
	
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission12 GravWellSupport ServiceGravWell state
--
function Watch_Mission12_GravWellSupport_ServiceGravWell(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (KAS_TeamNamesEqual(TeamName, "GW1Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW1Support"))
	
	if (SobGroup_Count("GravwellTeam1") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam1"))
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission12_GravWellSupport", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW2Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW2Support"))
	
	if (SobGroup_Count("GravwellTeam2") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam2"))
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission12_GravWellSupport", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GW3Support") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GW3Support"))
	
	if (SobGroup_Count("GravwellTeam3") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam3"))
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission12_GravWellSupport", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Watch_Mission12_GravWellSupport_ServiceGravWell")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GravWellSupport ServiceCarrier state
--
function Init_Mission12_GravWellSupport_ServiceCarrier(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_AttackSpecial(TeamName, "Carrier")    --kasfAttackSpecial(kasAITeamShipsPtr("Carrier"))
	else
	
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport_ServiceCarrier")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 GravWellSupport ServiceCarrier state
--
function Watch_Mission12_GravWellSupport_ServiceCarrier(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission12_GravWellSupport", "Watch_Mission12_GravWellSupport_ServiceCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Watch_Mission12_GravWellSupport_ServiceCarrier")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GravWellSupport ServiceCruiser state
--
function Init_Mission12_GravWellSupport_ServiceCruiser(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (SobGroup_Count("Cruiser") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	KAS_AttackSpecial(TeamName, "Cruiser")    --kasfAttackSpecial(kasAITeamShipsPtr("Cruiser"))
	else
	
	--kasJump("Choose")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Init_Mission12_GravWellSupport_ServiceCruiser")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 GravWellSupport ServiceCruiser state
--
function Watch_Mission12_GravWellSupport_ServiceCruiser(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	if (SobGroup_Count("Cruiser") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	--kasJump("Choose")
	--KASRule_Remove("FSM_Mission12_GravWellSupport", "Watch_Mission12_GravWellSupport_ServiceCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GravWellSupport_Choose", "Watch_Mission12_GravWellSupport_ServiceCruiser")
	Init_Mission12_GravWellSupport_Choose(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GravWellSupport GiveToAI state
--
function Init_Mission12_GravWellSupport_GiveToAI(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	
end 


--
--  "watch" code for Mission12 GravWellSupport GiveToAI state
--
function Watch_Mission12_GravWellSupport_GiveToAI(TeamName)
	--FSM: FSM_Mission12_GravWellSupport
	--TeamName = "GW1Support"
	
end 


--
--  "initialize" code for Mission12 GuardGravWells FSM
--
function Init_Mission12_GuardGravWells(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	--kasJump("Move")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_Move", "Init_Mission12_GuardGravWells")
	Init_Mission12_GuardGravWells_Move(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GuardGravWells FSM
--
function Watch_Mission12_GuardGravWells(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	
end 


--
--  "initialize" code for Mission12 GuardGravWells Move state
--
function Init_Mission12_GuardGravWells_Move(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	
end 


--
--  "watch" code for Mission12 GuardGravWells Move state
--
function Watch_Mission12_GuardGravWells_Move(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_NullState", "Watch_Mission12_GuardGravWells_Move")
	Init_Mission12_GuardGravWells_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "GuardGWTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam1"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_Move")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardGWTeam2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam2"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_Move")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardGWTeam3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam3"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_Move")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_Move")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardGravWells AttackFleet state
--
function Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	if (KAS_TeamNamesEqual(TeamName, "GuardGWTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam1"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_GW1EntireFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("GW1EntireFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_GW1EntireFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("GW1EntireFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_GW1EntireFleet", "GrowSelection_GW1EntireFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("GW1EntireFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_GW1Fighters", "GrowSelection_GW1EntireFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW1Fighters"), kasGrowSelectionPtr("GW1EntireFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GW1Corvettes", "GrowSelection_GW1EntireFleet", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW1Corvettes"), kasGrowSelectionPtr("GW1EntireFleet"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GW1StrikeCraft", "GrowSelection_GW1Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GW1StrikeCraft"), kasGrowSelectionPtr("GW1Fighters"))
	KAS_ShipsAdd("GrowSelection_GW1StrikeCraft", "GrowSelection_GW1Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GW1StrikeCraft"), kasGrowSelectionPtr("GW1Corvettes"))
	KAS_FillShipsByClass_Normal("GrowSelection_GW1Frigates", "GrowSelection_GW1EntireFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW1Frigates"), kasGrowSelectionPtr("GW1EntireFleet"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_GW1Destroyers", "GrowSelection_GW1EntireFleet", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW1Destroyers"), kasGrowSelectionPtr("GW1EntireFleet"), "CLASS_Destroyer")
	KAS_ShipsAdd("GrowSelection_GW1Capital", "GrowSelection_GW1Frigates")    --kasfShipsAdd(kasGrowSelectionPtr("GW1Capital"), kasGrowSelectionPtr("GW1Frigates"))
	KAS_ShipsAdd("GrowSelection_GW1Capital", "GrowSelection_GW1Destroyers")    --kasfShipsAdd(kasGrowSelectionPtr("GW1Capital"), kasGrowSelectionPtr("GW1Destroyers"))
	if (SobGroup_Count("GrowSelection_GW1StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW1StrikeCraft"))
	
	KAS_Attack(TeamName, "GrowSelection_GW1StrikeCraft")    --kasfAttack(kasGrowSelectionPtr("GW1StrikeCraft"))
	AttackingStrikeCraft[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_GW1Capital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW1Capital"))
	
	KAS_Attack(TeamName, "GrowSelection_GW1Capital")    --kasfAttack(kasGrowSelectionPtr("GW1Capital"))
	AttackingCapital[TeamName] = 1 --created,set
	else
	
	--kasJump("AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackMothership", "Init_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackMothership(TeamName)
	return
	end 
	elseif ((KAS_TeamNamesEqual(TeamName, "GuardGWTeam2") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardGWTeam3") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam3"))    --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam2"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_GW2EntireFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("GW2EntireFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_GW2EntireFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("GW2EntireFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_GW2EntireFleet", "GrowSelection_GW2EntireFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("GW2EntireFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_GW2Fighters", "GrowSelection_GW2EntireFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW2Fighters"), kasGrowSelectionPtr("GW2EntireFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GW2Corvettes", "GrowSelection_GW2EntireFleet", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW2Corvettes"), kasGrowSelectionPtr("GW2EntireFleet"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_GW2StrikeCraft", "GrowSelection_GW2Fighters")    --kasfShipsAdd(kasGrowSelectionPtr("GW2StrikeCraft"), kasGrowSelectionPtr("GW2Fighters"))
	KAS_ShipsAdd("GrowSelection_GW2StrikeCraft", "GrowSelection_GW2Corvettes")    --kasfShipsAdd(kasGrowSelectionPtr("GW2StrikeCraft"), kasGrowSelectionPtr("GW2Corvettes"))
	KAS_FillShipsByClass_Normal("GrowSelection_GW2Frigates", "GrowSelection_GW2EntireFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW2Frigates"), kasGrowSelectionPtr("GW2EntireFleet"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_GW2Destroyers", "GrowSelection_GW2EntireFleet", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("GW2Destroyers"), kasGrowSelectionPtr("GW2EntireFleet"), "CLASS_Destroyer")
	KAS_ShipsAdd("GrowSelection_GW2Capital", "GrowSelection_GW2Frigates")    --kasfShipsAdd(kasGrowSelectionPtr("GW2Capital"), kasGrowSelectionPtr("GW2Frigates"))
	KAS_ShipsAdd("GrowSelection_GW2Capital", "GrowSelection_GW2Destroyers")    --kasfShipsAdd(kasGrowSelectionPtr("GW2Capital"), kasGrowSelectionPtr("GW2Destroyers"))
	if (SobGroup_Count("GrowSelection_GW2Capital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW2Capital"))
	
	KAS_Attack(TeamName, "GrowSelection_GW2Capital")    --kasfAttack(kasGrowSelectionPtr("GW2Capital"))
	AttackingCapital[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_GW2StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW2StrikeCraft"))
	
	KAS_Attack(TeamName, "GrowSelection_GW2StrikeCraft")    --kasfAttack(kasGrowSelectionPtr("GW2StrikeCraft"))
	AttackingStrikeCraft[TeamName] = 1 --created,set
	else
	
	--kasJump("AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackMothership", "Init_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackMothership(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission12 GuardGravWells AttackFleet state
--
function Watch_Mission12_GuardGravWells_AttackFleet(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_NullState", "Watch_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "GuardGWTeam1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam1"))
	
	if (AttackingStrikeCraft[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_GW1StrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW1StrikeCraft"))
	
	AttackingStrikeCraft[TeamName] = 0 --destroyed
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	elseif (AttackingCapital[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_GW1Capital") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW1Capital"))
	
	AttackingCapital[TeamName] = 0 --destroyed
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	end 
	elseif ((KAS_TeamNamesEqual(TeamName, "GuardGWTeam2") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardGWTeam3") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam3"))    --kasfThisTeamIs(kasAITeamPtr("GuardGWTeam2"))
	
	if (AttackingStrikeCraft[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_GW2StrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW2StrikeCraft"))
	
	AttackingStrikeCraft[TeamName] = 0 --destroyed
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	elseif (AttackingCapital[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_GW2Capital") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("GW2Capital"))
	
	AttackingCapital[TeamName] = 0 --destroyed
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackFleet")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GuardGravWells AttackMothership state
--
function Init_Mission12_GuardGravWells_AttackMothership(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_EntireFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("EntireFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_EntireFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("EntireFleet"), "CLASS_Mothership")
	G_THISISTHEMOTHERSHIP = SobGroup_Count("GrowSelection_PlayerMothership") --created,set    --kasfShipsCount(kasGrowSelectionPtr("PlayerMothership"))
	KAS_MoveAttack(TeamName, "GrowSelection_PlayerMothership")    --kasfMoveAttack(kasGrowSelectionPtr("PlayerMothership"))
	
end 


--
--  "watch" code for Mission12 GuardGravWells AttackMothership state
--
function Watch_Mission12_GuardGravWells_AttackMothership(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_NullState", "Watch_Mission12_GuardGravWells_AttackMothership")
	Init_Mission12_GuardGravWells_NullState(TeamName)
	return
	end 
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_EntireFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("EntireFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_EntireFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("EntireFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_EntireFleet", "GrowSelection_EntireFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("EntireFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByCapital("GrowSelection_Capital", "GrowSelection_EntireFleet")    --kasfShipsSelectCapital(kasGrowSelectionPtr("Capital"), kasGrowSelectionPtr("EntireFleet"))
	KAS_FillShipsByClass_Normal("GrowSelection_GWFighters", "GrowSelection_EntireFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GWFighters"), kasGrowSelectionPtr("EntireFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_GWCorvettes", "GrowSelection_EntireFleet", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("GWCorvettes"), kasGrowSelectionPtr("EntireFleet"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_StrikeCraft", "GrowSelection_GWFighters")    --kasfShipsAdd(kasGrowSelectionPtr("StrikeCraft"), kasGrowSelectionPtr("GWFighters"))
	KAS_ShipsAdd("GrowSelection_StrikeCraft", "GrowSelection_GWCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("StrikeCraft"), kasGrowSelectionPtr("GWCorvettes"))
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_Capital", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("Capital"), "CLASS_Mothership")
	KAS_FillShipsByClass_Normal("GrowSelection_Resource", "GrowSelection_Capital", "Resource")    --kasfShipsSelectClass(kasGrowSelectionPtr("Resource"), kasGrowSelectionPtr("Capital"), "CLASS_Resource")
	SobGroup_FillSubtract("GrowSelection_Capital", "GrowSelection_Capital", "GrowSelection_PlayerMothership")    --kasfShipsRemove(kasGrowSelectionPtr("Capital"), kasGrowSelectionPtr("PlayerMothership"))
	SobGroup_FillSubtract("GrowSelection_Capital", "GrowSelection_Capital", "GrowSelection_Resource")    --kasfShipsRemove(kasGrowSelectionPtr("Capital"), kasGrowSelectionPtr("Resource"))
	if (SobGroup_Count("GrowSelection_Capital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Capital"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackMothership")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	elseif (SobGroup_Count("GrowSelection_StrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrikeCraft"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_GuardGravWells", "Watch_Mission12_GuardGravWells_AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_GuardGravWells_AttackFleet", "Watch_Mission12_GuardGravWells_AttackMothership")
	Init_Mission12_GuardGravWells_AttackFleet(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardGravWells NullState state
--
function Init_Mission12_GuardGravWells_NullState(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	
end 


--
--  "watch" code for Mission12 GuardGravWells NullState state
--
function Watch_Mission12_GuardGravWells_NullState(TeamName)
	--FSM: FSM_Mission12_GuardGravWells
	--TeamName = "GuardGWTeam1"
	
end 


--
--  "initialize" code for Mission12 AIShips FSM
--
function Init_Mission12_AIShips(TeamName)
	--FSM: FSM_Mission12_AIShips
	--TeamName = "AICollector"
	--kasJump("GiveToAI")
	KASRule_Add(TeamName, "Watch_Mission12_AIShips_GiveToAI", "Init_Mission12_AIShips")
	Init_Mission12_AIShips_GiveToAI(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 AIShips FSM
--
function Watch_Mission12_AIShips(TeamName)
	--FSM: FSM_Mission12_AIShips
	--TeamName = "AICollector"
	
end 


--
--  "initialize" code for Mission12 AIShips GiveToAI state
--
function Init_Mission12_AIShips_GiveToAI(TeamName)
	--FSM: FSM_Mission12_AIShips
	--TeamName = "AICollector"
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	
end 


--
--  "watch" code for Mission12 AIShips GiveToAI state
--
function Watch_Mission12_AIShips_GiveToAI(TeamName)
	--FSM: FSM_Mission12_AIShips
	--TeamName = "AICollector"
	
end 


--
--  "initialize" code for Mission12 Carrier FSM
--
function Init_Mission12_Carrier(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	--kasJump("ACT1Patrol")
	KASRule_Add(TeamName, "Watch_Mission12_Carrier_ACT1Patrol", "Init_Mission12_Carrier")
	Init_Mission12_Carrier_ACT1Patrol(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 Carrier FSM
--
function Watch_Mission12_Carrier(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	
end 


--
--  "initialize" code for Mission12 Carrier ACT1Patrol state
--
function Init_Mission12_Carrier_ACT1Patrol(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	SobGroup_FollowPath(TeamName, "CarrierPath", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("CarrierPath"))
	
end 


--
--  "watch" code for Mission12 Carrier ACT1Patrol state
--
function Watch_Mission12_Carrier_ACT1Patrol(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_Carrier", "Watch_Mission12_Carrier_ACT1Patrol")
	KASRule_Add(TeamName, "Watch_Mission12_Carrier_NullState", "Watch_Mission12_Carrier_ACT1Patrol")
	Init_Mission12_Carrier_NullState(TeamName)
	return
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_CarrierAttackedACT1") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("CarrierAttackedACT1"))
	
	end 
	if (_VIFONCE011[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 75)) then  -- "ifonce" #11    --kasfTeamHealthAverage()
	
	_VIFONCE011[TeamName] = 1 --created,set;
	G_CarrierLowOnHealth = 1 --created,set
	end 
	
end 


--
--  "initialize" code for Mission12 Carrier NullState state
--
function Init_Mission12_Carrier_NullState(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	
end 


--
--  "watch" code for Mission12 Carrier NullState state
--
function Watch_Mission12_Carrier_NullState(TeamName)
	--FSM: FSM_Mission12_Carrier
	--TeamName = Carrier
	
end 


--
--  "initialize" code for Mission12 GuardCarrier FSM
--
function Init_Mission12_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	SHIPSOriginal[TeamName] = (SobGroup_Count(TeamName)) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	SHIPSRequested[TeamName] = 0 --created,set
	SHIPSNeeded[TeamName] = 0 --created,set
	SHIPSNewships[TeamName] = 0 --created,set
	SHIPSKilled[TeamName] = 0 --created,set
	--kasJump("Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Guard", "Init_Mission12_GuardCarrier")
	Init_Mission12_GuardCarrier_Guard(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GuardCarrier FSM
--
function Watch_Mission12_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if ((SobGroup_Count(TeamName) == 0) and (WaitingForShips[TeamName] == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("AllDeadWaitForShips")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_AllDeadWaitForShips", "Watch_Mission12_GuardCarrier")
	Init_Mission12_GuardCarrier_AllDeadWaitForShips(TeamName)
	return
	end 
	if ((SobGroup_Count(TeamName) + SHIPSRequested[TeamName]) < SHIPSOriginal[TeamName]) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SHIPSNeeded[TeamName] = (SHIPSOriginal[TeamName] - (SobGroup_Count(TeamName) + SHIPSRequested[TeamName])) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	if (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_RequestShips(TeamName, "Tai_IonCannonFrigate", SHIPSNeeded[TeamName])    --kasfRequestShips("IonCannonFrigate", ___KAS_SCOPED_VAR____SHIPSNeeded_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_RequestShips(TeamName, "Tai_HeavyCorvette", SHIPSNeeded[TeamName])    --kasfRequestShips("HeavyCorvette", ___KAS_SCOPED_VAR____SHIPSNeeded_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_RequestShips(TeamName, "Tai_Defender", SHIPSNeeded[TeamName])    --kasfRequestShips("HeavyDefender", ___KAS_SCOPED_VAR____SHIPSNeeded_)
	end 
	end 
	SHIPSKilled[TeamName] = SHIPSKilled[TeamName] + SHIPSNeeded[TeamName] --set
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] + SHIPSNeeded[TeamName] --set
	end 
	SHIPSNewships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (SHIPSNewships[TeamName] ~= 0) then 
	
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] - SHIPSNewships[TeamName] --set
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier Guard state
--
function Init_Mission12_GuardCarrier_Guard(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	KAS_SetFormation(TeamName, "Delta")    --kasfFormationDelta()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	end 
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	
end 


--
--  "watch" code for Mission12 GuardCarrier Guard state
--
function Watch_Mission12_GuardCarrier_Guard(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if ((KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Dock", "Watch_Mission12_GuardCarrier_Guard")
	Init_Mission12_GuardCarrier_Dock(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (SobGroup_Count("Cruiser") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	--kasJump("GuardCruiser")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_GuardCruiser", "Watch_Mission12_GuardCarrier_Guard")
	Init_Mission12_GuardCarrier_GuardCruiser(TeamName)
	return
	else
	
	if ((KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Kamikaze", "Watch_Mission12_GuardCarrier_Guard")
	Init_Mission12_GuardCarrier_Kamikaze(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_NullState", "Watch_Mission12_GuardCarrier_Guard")
	Init_Mission12_GuardCarrier_NullState(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier GuardCruiser state
--
function Init_Mission12_GuardCarrier_GuardCruiser(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	KAS_SetFormation(TeamName, "Delta")    --kasfFormationDelta()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	end 
	SobGroup_GuardSobGroup(TeamName, "Cruiser")    --kasfGuardShips(kasAITeamShipsPtr("Cruiser"))
	
end 


--
--  "watch" code for Mission12 GuardCarrier GuardCruiser state
--
function Watch_Mission12_GuardCarrier_GuardCruiser(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if ((KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_GuardCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Dock", "Watch_Mission12_GuardCarrier_GuardCruiser")
	Init_Mission12_GuardCarrier_Dock(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("Cruiser") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	if ((KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCarrierDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_GuardCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Kamikaze", "Watch_Mission12_GuardCarrier_GuardCruiser")
	Init_Mission12_GuardCarrier_Kamikaze(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_GuardCruiser")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_NullState", "Watch_Mission12_GuardCarrier_GuardCruiser")
	Init_Mission12_GuardCarrier_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier AllDeadWaitForShips state
--
function Init_Mission12_GuardCarrier_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	WaitingForShips[TeamName] = 1 --created,set
	
end 


--
--  "watch" code for Mission12 GuardCarrier AllDeadWaitForShips state
--
function Watch_Mission12_GuardCarrier_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if (SobGroup_Count(TeamName) > 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	WaitingForShips[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_AllDeadWaitForShips")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Guard", "Watch_Mission12_GuardCarrier_AllDeadWaitForShips")
	Init_Mission12_GuardCarrier_Guard(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_AllDeadWaitForShips")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_NullState", "Watch_Mission12_GuardCarrier_AllDeadWaitForShips")
	Init_Mission12_GuardCarrier_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier Kamikaze state
--
function Init_Mission12_GuardCarrier_Kamikaze(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetNearMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetNearMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetNearMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Mothership")
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_NullState", "Init_Mission12_GuardCarrier_Kamikaze")
	Init_Mission12_GuardCarrier_NullState(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GuardCarrier Kamikaze state
--
function Watch_Mission12_GuardCarrier_Kamikaze(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	
end 


--
--  "initialize" code for Mission12 GuardCarrier Dock state
--
function Init_Mission12_GuardCarrier_Dock(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission12 GuardCarrier Dock state
--
function Watch_Mission12_GuardCarrier_Dock(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Launch", "Watch_Mission12_GuardCarrier_Dock")
	Init_Mission12_GuardCarrier_Launch(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Guard", "Watch_Mission12_GuardCarrier_Dock")
	Init_Mission12_GuardCarrier_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier Launch state
--
function Init_Mission12_GuardCarrier_Launch(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 GuardCarrier Launch state
--
function Watch_Mission12_GuardCarrier_Launch(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Guard", "Watch_Mission12_GuardCarrier_Launch")
	Init_Mission12_GuardCarrier_Guard(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCarrier", "Watch_Mission12_GuardCarrier_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCarrier_Guard", "Watch_Mission12_GuardCarrier_Launch")
	Init_Mission12_GuardCarrier_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCarrier NullState state
--
function Init_Mission12_GuardCarrier_NullState(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	
end 


--
--  "watch" code for Mission12 GuardCarrier NullState state
--
function Watch_Mission12_GuardCarrier_NullState(TeamName)
	--FSM: FSM_Mission12_GuardCarrier
	--TeamName = "GuardCarrierIon"
	
end 


--
--  "initialize" code for Mission12 Cruiser FSM
--
function Init_Mission12_Cruiser(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	--kasJump("Hide")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_Hide", "Init_Mission12_Cruiser")
	Init_Mission12_Cruiser_Hide(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 Cruiser FSM
--
function Watch_Mission12_Cruiser(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	if (_VIFONCE012[TeamName] == 0 and (G_ACT2HasBegun == 1)) then  -- "ifonce" #12
	
	_VIFONCE012[TeamName] = 1 --created,set;
	KASTimer_Start(BringInTheBruiser[TeamName], 250)
	end 
	if (_VIFONCE013[TeamName] == 0 and (SobGroup_Count(TeamName) == 0)) then  -- "ifonce" #13    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE013[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_NullState", "Watch_Mission12_Cruiser")
	Init_Mission12_Cruiser_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser Hide state
--
function Init_Mission12_Cruiser_Hide(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	KAS_SetHidden("Cruiser", 1)    --kasfHideShips(kasAITeamShipsPtr("Cruiser"))
	
end 


--
--  "watch" code for Mission12 Cruiser Hide state
--
function Watch_Mission12_Cruiser_Hide(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	if ((SobGroup_Count("Carrier") == 0) or (KASTimer_IsExpiredIfSoDestroy(BringInTheBruiser[TeamName]) ~= 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_SetHidden("Cruiser", 0)    --kasfUnhideShips(kasAITeamShipsPtr("Cruiser"))
	--kasJump("ComeOnIn")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_Hide")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_ComeOnIn", "Watch_Mission12_Cruiser_Hide")
	Init_Mission12_Cruiser_ComeOnIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser ComeOnIn state
--
function Init_Mission12_Cruiser_ComeOnIn(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	SobGroup_FollowPath(TeamName, "CruiserPath", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("CruiserPath"))
	
end 


--
--  "watch" code for Mission12 Cruiser ComeOnIn state
--
function Watch_Mission12_Cruiser_ComeOnIn(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_CruiserFound", 5600) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("CruiserFound"), 16000)
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_CruiserFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("CruiserFound"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_CruiserFound", "GrowSelection_CruiserFound", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("CruiserFound"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_CruiserFound") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CruiserFound"))
	
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_ComeOnIn")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackNearby", "Watch_Mission12_Cruiser_ComeOnIn")
	Init_Mission12_Cruiser_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_GetNextPathPoint(TeamName) == 0) then     --kasfPathNextPoint()
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_ComeOnIn")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackFleet", "Watch_Mission12_Cruiser_ComeOnIn")
	Init_Mission12_Cruiser_AttackFleet(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser AttackNearby state
--
function Init_Mission12_Cruiser_AttackNearby(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyDestroyers", "GrowSelection_CruiserFound", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyDestroyers"), kasGrowSelectionPtr("CruiserFound"), "CLASS_Destroyer")
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyFrigates", "GrowSelection_CruiserFound", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyFrigates"), kasGrowSelectionPtr("CruiserFound"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyCorvettes", "GrowSelection_CruiserFound", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyCorvettes"), kasGrowSelectionPtr("CruiserFound"), "CLASS_Corvette")
	if (SobGroup_Count("GrowSelection_NearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyDestroyers"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyDestroyers")    --kasfAttack(kasGrowSelectionPtr("NearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_NearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyFrigates")    --kasfAttack(kasGrowSelectionPtr("NearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_NearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("NearbyCorvettes"))
	else
	
	KAS_Attack(TeamName, "GrowSelection_CruiserFound")    --kasfAttack(kasGrowSelectionPtr("CruiserFound"))
	end 
	
end 


--
--  "watch" code for Mission12 Cruiser AttackNearby state
--
function Watch_Mission12_Cruiser_AttackNearby(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	if ((SobGroup_Count("GrowSelection_NearbyDestroyers") == 0) and ((SobGroup_Count("GrowSelection_NearbyFrigates") > 0) or (SobGroup_Count("GrowSelection_NearbyCorvettes") > 0))) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyDestroyers"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackNearby", "Watch_Mission12_Cruiser_AttackNearby")
	Init_Mission12_Cruiser_AttackNearby(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_NearbyFrigates") == 0) and ((SobGroup_Count("GrowSelection_NearbyDestroyers") > 0) or (SobGroup_Count("GrowSelection_NearbyCorvettes") > 0))) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyDestroyers"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackNearby", "Watch_Mission12_Cruiser_AttackNearby")
	Init_Mission12_Cruiser_AttackNearby(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_NearbyCorvettes") == 0) and ((SobGroup_Count("GrowSelection_NearbyFrigates") > 0) or (SobGroup_Count("GrowSelection_NearbyDestroyers") > 0))) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyDestroyers"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackNearby", "Watch_Mission12_Cruiser_AttackNearby")
	Init_Mission12_Cruiser_AttackNearby(TeamName)
	return
	elseif (SobGroup_Count("GrowSelection_CruiserFound") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("CruiserFound"))
	
	--kasJump("ComeOnIn")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_ComeOnIn", "Watch_Mission12_Cruiser_AttackNearby")
	Init_Mission12_Cruiser_ComeOnIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser AttackFleet state
--
function Init_Mission12_Cruiser_AttackFleet(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetNearMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetNearMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetNearMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetNearMothership", "GrowSelection_FleetNearMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetNearMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_FleetDestroyers", "GrowSelection_FleetNearMothership", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("FleetDestroyers"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Destroyer")
	KAS_FillShipsByClass_Normal("GrowSelection_FleetFrigates", "GrowSelection_FleetNearMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("FleetFrigates"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_FleetDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FleetDestroyers"))
	
	KAS_Attack(TeamName, "GrowSelection_FleetDestroyers")    --kasfAttack(kasGrowSelectionPtr("FleetDestroyers"))
	elseif (SobGroup_Count("GrowSelection_FleetFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FleetFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_FleetFrigates")    --kasfAttack(kasGrowSelectionPtr("FleetFrigates"))
	else
	
	--kasJump("AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackMothership", "Init_Mission12_Cruiser_AttackFleet")
	Init_Mission12_Cruiser_AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 Cruiser AttackFleet state
--
function Watch_Mission12_Cruiser_AttackFleet(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	if ((SobGroup_Count("GrowSelection_FleetDestroyers") == 0) and (SobGroup_Count("GrowSelection_FleetFrigates") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("FleetFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("FleetDestroyers"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackFleet", "Watch_Mission12_Cruiser_AttackFleet")
	Init_Mission12_Cruiser_AttackFleet(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_FleetFrigates") == 0) and (SobGroup_Count("GrowSelection_FleetDestroyers") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("FleetDestroyers"))    --kasfShipsCount(kasGrowSelectionPtr("FleetFrigates"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackFleet", "Watch_Mission12_Cruiser_AttackFleet")
	Init_Mission12_Cruiser_AttackFleet(TeamName)
	return
	end 
	if ((SobGroup_Count("GrowSelection_FleetDestroyers") == 0) and (SobGroup_Count("GrowSelection_FleetFrigates") == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("FleetFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("FleetDestroyers"))
	
	--kasJump("AttackMothership")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackFleet")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackMothership", "Watch_Mission12_Cruiser_AttackFleet")
	Init_Mission12_Cruiser_AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser AttackMothership state
--
function Init_Mission12_Cruiser_AttackMothership(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetNearMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetNearMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetNearMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Mothership")
	KAS_MoveAttack(TeamName, "GrowSelection_PlayerMothership")    --kasfMoveAttack(kasGrowSelectionPtr("PlayerMothership"))
	
end 


--
--  "watch" code for Mission12 Cruiser AttackMothership state
--
function Watch_Mission12_Cruiser_AttackMothership(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetNearMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetNearMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetNearMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetNearMothership", "GrowSelection_FleetNearMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetNearMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_FleetDestroyers", "GrowSelection_FleetNearMothership", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("FleetDestroyers"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Destroyer")
	KAS_FillShipsByClass_Normal("GrowSelection_FleetFrigates", "GrowSelection_FleetNearMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("FleetFrigates"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Frigate")
	if ((SobGroup_Count("GrowSelection_FleetDestroyers") > 0) or (SobGroup_Count("GrowSelection_FleetFrigates") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("FleetFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("FleetDestroyers"))
	
	--kasJump("AttackFleet")
	--KASRule_Remove("FSM_Mission12_Cruiser", "Watch_Mission12_Cruiser_AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission12_Cruiser_AttackFleet", "Watch_Mission12_Cruiser_AttackMothership")
	Init_Mission12_Cruiser_AttackFleet(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Cruiser NullState state
--
function Init_Mission12_Cruiser_NullState(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	
end 


--
--  "watch" code for Mission12 Cruiser NullState state
--
function Watch_Mission12_Cruiser_NullState(TeamName)
	--FSM: FSM_Mission12_Cruiser
	--TeamName = Cruiser
	
end 


--
--  "initialize" code for Mission12 GuardCruiser FSM
--
function Init_Mission12_GuardCruiser(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	--kasJump("Hide")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Hide", "Init_Mission12_GuardCruiser")
	Init_Mission12_GuardCruiser_Hide(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GuardCruiser FSM
--
function Watch_Mission12_GuardCruiser(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (_VIFONCE014[TeamName] == 0 and (G_ACT2HasBegun == 1)) then  -- "ifonce" #14
	
	_VIFONCE014[TeamName] = 1 --created,set;
	KASTimer_Start(BringInTheBruiser[TeamName], 150)
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser Hide state
--
function Init_Mission12_GuardCruiser_Hide(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	KAS_SetHidden("GuardCruiserDef", 1)    --kasfHideShips(kasAITeamShipsPtr("GuardCruiserDef"))
	KAS_SetHidden("GuardCruiserCorv", 1)    --kasfHideShips(kasAITeamShipsPtr("GuardCruiserCorv"))
	KAS_SetHidden("GuardCruiserIon", 1)    --kasfHideShips(kasAITeamShipsPtr("GuardCruiserIon"))
	
end 


--
--  "watch" code for Mission12 GuardCruiser Hide state
--
function Watch_Mission12_GuardCruiser_Hide(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if ((SobGroup_Count("Carrier") == 0) or (KASTimer_IsExpiredIfSoDestroy(BringInTheBruiser[TeamName]) ~= 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	KAS_SetHidden("GuardCruiserDef", 0)    --kasfUnhideShips(kasAITeamShipsPtr("GuardCruiserDef"))
	KAS_SetHidden("GuardCruiserCorv", 0)    --kasfUnhideShips(kasAITeamShipsPtr("GuardCruiserCorv"))
	KAS_SetHidden("GuardCruiserIon", 0)    --kasfUnhideShips(kasAITeamShipsPtr("GuardCruiserIon"))
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Hide")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Guard", "Watch_Mission12_GuardCruiser_Hide")
	Init_Mission12_GuardCruiser_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser Guard state
--
function Init_Mission12_GuardCruiser_Guard(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	SobGroup_GuardSobGroup(TeamName, "Cruiser")    --kasfGuardShips(kasAITeamShipsPtr("Cruiser"))
	
end 


--
--  "watch" code for Mission12 GuardCruiser Guard state
--
function Watch_Mission12_GuardCruiser_Guard(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_Guard")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	if ((KAS_TeamNamesEqual(TeamName, "GuardCruiserCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCruiserDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCruiserCorv"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Dock", "Watch_Mission12_GuardCruiser_Guard")
	Init_Mission12_GuardCruiser_Dock(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("Cruiser") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("GuardCarrier")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_GuardCarrier", "Watch_Mission12_GuardCruiser_Guard")
	Init_Mission12_GuardCruiser_GuardCarrier(TeamName)
	return
	else
	
	if ((KAS_TeamNamesEqual(TeamName, "GuardCruiserCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCruiserDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCruiserCorv"))
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Kamikaze", "Watch_Mission12_GuardCruiser_Guard")
	Init_Mission12_GuardCruiser_Kamikaze(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCruiserIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserIon"))
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_Guard")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser GuardCarrier state
--
function Init_Mission12_GuardCruiser_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (KAS_TeamNamesEqual(TeamName, "GuardCruiserDef") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserDef"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierCorv") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierCorv"))
	
	KAS_SetFormation(TeamName, "Delta")    --kasfFormationDelta()
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCarrierIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCarrierIon"))
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	end 
	SobGroup_GuardSobGroup(TeamName, "Cruiser")    --kasfGuardShips(kasAITeamShipsPtr("Cruiser"))
	
end 


--
--  "watch" code for Mission12 GuardCruiser GuardCarrier state
--
function Watch_Mission12_GuardCruiser_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_GuardCarrier")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	if ((KAS_TeamNamesEqual(TeamName, "GuardCruiserCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCruiserDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCruiserCorv"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Dock", "Watch_Mission12_GuardCruiser_GuardCarrier")
	Init_Mission12_GuardCruiser_Dock(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if ((KAS_TeamNamesEqual(TeamName, "GuardCruiserCorv") ~= 0) or (KAS_TeamNamesEqual(TeamName, "GuardCruiserDef") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserDef"))    --kasfThisTeamIs(kasAITeamPtr("GuardCruiserCorv"))
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Kamikaze", "Watch_Mission12_GuardCruiser_GuardCarrier")
	Init_Mission12_GuardCruiser_Kamikaze(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "GuardCruiserIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("GuardCruiserIon"))
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_GuardCarrier")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser Kamikaze state
--
function Init_Mission12_GuardCruiser_Kamikaze(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetNearMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetNearMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetNearMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetNearMothership"), "CLASS_Mothership")
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Init_Mission12_GuardCruiser_Kamikaze")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 GuardCruiser Kamikaze state
--
function Watch_Mission12_GuardCruiser_Kamikaze(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	
end 


--
--  "initialize" code for Mission12 GuardCruiser Dock state
--
function Init_Mission12_GuardCruiser_Dock(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission12 GuardCruiser Dock state
--
function Watch_Mission12_GuardCruiser_Dock(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_Dock")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Launch", "Watch_Mission12_GuardCruiser_Dock")
	Init_Mission12_GuardCruiser_Launch(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Guard", "Watch_Mission12_GuardCruiser_Dock")
	Init_Mission12_GuardCruiser_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser Launch state
--
function Init_Mission12_GuardCruiser_Launch(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 GuardCruiser Launch state
--
function Watch_Mission12_GuardCruiser_Launch(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_NullState", "Watch_Mission12_GuardCruiser_Launch")
	Init_Mission12_GuardCruiser_NullState(TeamName)
	return
	end 
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Guard", "Watch_Mission12_GuardCruiser_Launch")
	Init_Mission12_GuardCruiser_Guard(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_GuardCruiser", "Watch_Mission12_GuardCruiser_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_GuardCruiser_Guard", "Watch_Mission12_GuardCruiser_Launch")
	Init_Mission12_GuardCruiser_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 GuardCruiser NullState state
--
function Init_Mission12_GuardCruiser_NullState(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	
end 


--
--  "watch" code for Mission12 GuardCruiser NullState state
--
function Watch_Mission12_GuardCruiser_NullState(TeamName)
	--FSM: FSM_Mission12_GuardCruiser
	--TeamName = "GuardCruiserDef"
	
end 


--
--  "initialize" code for Mission12 STRInterceptors FSM
--
function Init_Mission12_STRInterceptors(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	G_STRIntFighterIndex = 0 --created,set
	G_STRIntFrigateIndex = 0 --created,set
	G_STRIntFightSelectionExhausted = 0 --created,set
	G_STRIntFrigSelectionExhausted = 0 --created,set
	--kasJump("WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Init_Mission12_STRInterceptors")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 STRInterceptors FSM
--
function Watch_Mission12_STRInterceptors(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (_VIFONCE015[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #15    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE015[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_NullState", "Watch_Mission12_STRInterceptors")
	Init_Mission12_STRInterceptors_NullState(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (_VIFONCE016[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #16    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE016[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_NullState", "Watch_Mission12_STRInterceptors")
	Init_Mission12_STRInterceptors_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors WaitForLaunchOrder state
--
function Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	G_STRIntScoutREADY = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	G_STRIntIntREADY = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRInterceptors WaitForLaunchOrder state
--
function Watch_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (G_STRInterceptorsLAUNCH == 1) then 
	
	G_STRIntScoutREADY = 0 --destroyed
	G_STRIntIntREADY = 0 --destroyed
	--kasJump("Build")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Build", "Watch_Mission12_STRInterceptors_WaitForLaunchOrder")
	Init_Mission12_STRInterceptors_Build(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors Build state
--
function Init_Mission12_STRInterceptors_Build(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	G_STRIntScoutBuilding = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	G_STRIntIntBuilding = 1 --created,set
	end 
	G_STRIntScoutNewships = 0 --created,set
	G_STRIntIntNewships = 0 --created,set
	G_STRIntScoutsToRequest = 0 --created,set
	G_STRIntIntsToRequest = 0 --created,set
	G_STRIntScoutsToRequest = (5 + (10 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	G_STRIntIntsToRequest = (5 + (10 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 90 * (G_STRIntScoutsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 90 * (___KAS_SCOPED_VAR____G_STRIntScoutsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_Scout", G_STRIntScoutsToRequest)    --kasfRequestShips("LightInterceptor", ___KAS_SCOPED_VAR____G_STRIntScoutsToRequest_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 100 * (G_STRIntIntsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 100 * (___KAS_SCOPED_VAR____G_STRIntIntsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_Interceptor", G_STRIntScoutsToRequest)    --kasfRequestShips("HeavyInterceptor", ___KAS_SCOPED_VAR____G_STRIntScoutsToRequest_)
	end 
	end 
	
end 


--
--  "watch" code for Mission12 STRInterceptors Build state
--
function Watch_Mission12_STRInterceptors_Build(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if ((G_STRIntScoutBuilding == 1) and (G_STRIntIntBuilding == 1)) then 
	
	G_STRInterceptorsLAUNCH = 0 --destroyed
	G_STRIntScoutBuilding = 0 --destroyed
	G_STRIntIntBuilding = 0 --destroyed
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	G_STRIntScoutNewships = G_STRIntScoutNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	G_STRIntIntNewships = G_STRIntIntNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	end 
	if (((G_STRIntScoutNewships == G_STRIntScoutsToRequest) and (G_STRIntIntNewships == G_STRIntIntsToRequest)) or ((SobGroup_Count("Carrier") == 0) and ((SobGroup_Count("STRIntScout") > 0) or (SobGroup_Count("STRIntInt") > 0)))) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntInt"))    --kasfShipsCount(kasAITeamShipsPtr("STRIntScout"))    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_Build")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors Decide state
--
function Init_Mission12_STRInterceptors_Decide(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	KAS_SetFormation(TeamName, "Delta3D")    --kasfFormationDelta3D()
	if (SobGroup_Count("STRIntScout") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntScout"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFighters", "GrowSelection_FleetAtMothership", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFighters"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFrigates", "GrowSelection_FleetAtMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFrigates"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Frigate")
	elseif (SobGroup_Count("STRIntInt") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntInt"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFighters", "GrowSelection_FleetAtMothership", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFighters"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFrigates", "GrowSelection_FleetAtMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFrigates"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Frigate")
	end 
	if (SobGroup_Count("STRIntScout") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntScout"))
	
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldFighters", "GrowSelection_AllShipsInWorld", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldFighters"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldFrigates", "GrowSelection_AllShipsInWorld", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldFrigates"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Frigate")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRIntSingleFighter", "GrowSelection_STRIntWorldFighters", G_STRIntFighterIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRIntSingleFighter"), kasGrowSelectionPtr("STRIntWorldFighters"), ___KAS_SCOPED_VAR____G_STRIntFighterIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRIntSingleFighter", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRIntSingleFighter"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRIntSingleFighter", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRIntSingleFighter"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRIntSingleFighter", "GrowSelection_STRIntSingleFighter", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRIntSingleFighter"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldNearbyFighters", "GrowSelection_STRIntSingleFighter", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldNearbyFighters"), kasGrowSelectionPtr("STRIntSingleFighter"), "CLASS_Fighter")
	G_STRIntFighterIndex = G_STRIntFighterIndex + 1
	else
	
	G_STRIntFightSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRIntSingleFrigate", "GrowSelection_STRIntWorldFrigates", G_STRIntFrigateIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRIntSingleFrigate"), kasGrowSelectionPtr("STRIntWorldFrigates"), ___KAS_SCOPED_VAR____G_STRIntFrigateIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRIntSingleFrigate", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRIntSingleFrigate"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRIntSingleFrigate", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRIntSingleFrigate"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRIntSingleFrigate", "GrowSelection_STRIntSingleFrigate", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRIntSingleFrigate"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldNearbyFrigates", "GrowSelection_STRIntSingleFrigate", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldNearbyFrigates"), kasGrowSelectionPtr("STRIntSingleFrigate"), "CLASS_Frigate")
	G_STRIntFrigateIndex = G_STRIntFrigateIndex + 1
	else
	
	G_STRIntFrigSelectionExhausted = 1 --set
	end 
	elseif (SobGroup_Count("STRIntInt") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntInt"))
	
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldFighters", "GrowSelection_AllShipsInWorld", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldFighters"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldFrigates", "GrowSelection_AllShipsInWorld", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldFrigates"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Frigate")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRIntSingleFighter", "GrowSelection_STRIntWorldFighters", G_STRIntFighterIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRIntSingleFighter"), kasGrowSelectionPtr("STRIntWorldFighters"), ___KAS_SCOPED_VAR____G_STRIntFighterIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRIntSingleFighter", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRIntSingleFighter"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRIntSingleFighter", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRIntSingleFighter"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRIntSingleFighter", "GrowSelection_STRIntSingleFighter", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRIntSingleFighter"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldNearbyFighters", "GrowSelection_STRIntSingleFighter", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldNearbyFighters"), kasGrowSelectionPtr("STRIntSingleFighter"), "CLASS_Fighter")
	G_STRIntFighterIndex = G_STRIntFighterIndex + 1
	else
	
	G_STRIntFightSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRIntSingleFrigate", "GrowSelection_STRIntWorldFrigates", G_STRIntFrigateIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRIntSingleFrigate"), kasGrowSelectionPtr("STRIntWorldFrigates"), ___KAS_SCOPED_VAR____G_STRIntFrigateIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRIntSingleFrigate", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRIntSingleFrigate"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRIntSingleFrigate", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRIntSingleFrigate"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRIntSingleFrigate", "GrowSelection_STRIntSingleFrigate", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRIntSingleFrigate"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntWorldNearbyFrigates", "GrowSelection_STRIntSingleFrigate", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntWorldNearbyFrigates"), kasGrowSelectionPtr("STRIntSingleFrigate"), "CLASS_Frigate")
	G_STRIntFrigateIndex = G_STRIntFrigateIndex + 1
	else
	
	G_STRIntFrigSelectionExhausted = 1 --set
	end 
	end 
	if ((62 * (SobGroup_Count("GrowSelection_STRIntFighters")) > 300) or (SobGroup_Count("GrowSelection_STRIntFrigates") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("STRIntFighters"))
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	--kasJump("AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackFleetAtMothership", "Init_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_AttackFleetAtMothership(TeamName)
	return
	elseif ((G_STRIntFightSelectionExhausted == 0) or (G_STRIntFrigSelectionExhausted == 0)) then 
	
	if ((62 * (SobGroup_Count("GrowSelection_STRIntWorldNearbyFighters")) > 300) or (SobGroup_Count("GrowSelection_STRIntWorldNearbyFrigates") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldNearbyFrigates"))    --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldNearbyFighters"))
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	--kasJump("AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackRestOfWorld", "Init_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_AttackRestOfWorld(TeamName)
	return
	else
	
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	--kasJump("GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_GuardCarrier", "Init_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_GuardCarrier(TeamName)
	return
	else
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_NullState", "Init_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_NullState(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 STRInterceptors Decide state
--
function Watch_Mission12_STRInterceptors_Decide(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	G_STRIntFighterIndex = 0 --set
	G_STRIntFrigateIndex = 0 --set
	G_STRIntFightSelectionExhausted = 0 --set
	G_STRIntFrigSelectionExhausted = 0 --set
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_Decide")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors AttackFleetAtMothership state
--
function Init_Mission12_STRInterceptors_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count("STRIntScout") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntScout"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFleetFighters", "GrowSelection_PlayerFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFleetFighters"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFleetFrigates", "GrowSelection_PlayerFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFleetFrigates"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Frigate")
	elseif (SobGroup_Count("STRIntInt") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRIntInt"))
	
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFleetFighters", "GrowSelection_PlayerFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFleetFighters"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntFleetFrigates", "GrowSelection_PlayerFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntFleetFrigates"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Frigate")
	end 
	if (SobGroup_Count("GrowSelection_STRIntFleetFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntFleetFighters"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	end 
	KAS_ShipsAdd("GrowSelection_STRIntFleetATTACK", "GrowSelection_STRIntFleetFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntFleetATTACK"), kasGrowSelectionPtr("STRIntFleetFighters"))
	elseif (SobGroup_Count("GrowSelection_STRIntFleetFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntFleetFrigates"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	end 
	KAS_ShipsAdd("GrowSelection_STRIntFleetATTACK", "GrowSelection_STRIntFleetFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntFleetATTACK"), kasGrowSelectionPtr("STRIntFleetFrigates"))
	else
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRIntFleetATTACK")    --kasfAttack(kasGrowSelectionPtr("STRIntFleetATTACK"))
	
end 


--
--  "watch" code for Mission12 STRInterceptors AttackFleetAtMothership state
--
function Watch_Mission12_STRInterceptors_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRIntFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_GetCurrentOrder("STRIntScout") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntScout"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_GetCurrentOrder("STRIntInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntInt"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRIntFleetATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRIntFleetATTACK"), 14000)
	
	--kasJump("OnTheMoveToMothership")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_OnTheMoveToMothership", "Watch_Mission12_STRInterceptors_AttackFleetAtMothership")
	Init_Mission12_STRInterceptors_OnTheMoveToMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors OnTheMoveToMothership state
--
function Init_Mission12_STRInterceptors_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, 280)    --kasfTeamSetMaxVelocity(800)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRInterceptors OnTheMoveToMothership state
--
function Watch_Mission12_STRInterceptors_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_GetCurrentOrder("STRIntScout") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntScout"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_GetCurrentOrder("STRIntInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntInt"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntScout") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRIntScout", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRIntScout", "GrowSelection_AttackingSTRIntScout", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRIntScout"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRIntScout") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_MessageSendToAll(TeamName, "STRIntIsUnderAttack")    --kasfMsgSendAll("STRIntIsUnderAttack")
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntInt") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntInt"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRIntScout", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRIntScout", "GrowSelection_AttackingSTRIntScout", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRIntScout"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRIntScout") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_MessageSendToAll(TeamName, "STRIntIsUnderAttack")    --kasfMsgSendAll("STRIntIsUnderAttack")
	end 
	end 
	end 
	if (KAS_MessageReceived(TeamName, "STRIntIsUnderAttack") ~= 0) then     --kasfMsgReceived("STRIntIsUnderAttack")
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackNearby", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRIntFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRIntFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRIntFleetATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRIntFleetATTACK"), 14000)
	
	--kasJump("AttackFleetAtMothership")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackFleetAtMothership", "Watch_Mission12_STRInterceptors_OnTheMoveToMothership")
	Init_Mission12_STRInterceptors_AttackFleetAtMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors AttackNearby state
--
function Init_Mission12_STRInterceptors_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count("GrowSelection_AttackingSTRIntScout") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntNearbyFighters", "GrowSelection_AttackingSTRIntScout", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntNearbyFighters"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntNearbyFrigates", "GrowSelection_AttackingSTRIntScout", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntNearbyFrigates"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_STRIntNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntNearbyFighters"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	end 
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_STRIntNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("STRIntNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRIntNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntNearbyFrigates"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	end 
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_STRIntNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("STRIntNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRInt") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_AttackingSTRInt")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRInt"))
	else
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("GrowSelection_AttackingSTRIntInt") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntInt"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntNearbyFighters", "GrowSelection_AttackingSTRIntInt", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntNearbyFighters"), kasGrowSelectionPtr("AttackingSTRIntInt"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRIntNearbyFrigates", "GrowSelection_AttackingSTRIntInt", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRIntNearbyFrigates"), kasGrowSelectionPtr("AttackingSTRIntInt"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_STRIntNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntNearbyFighters"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	end 
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_STRIntNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("STRIntNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRIntNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntNearbyFrigates"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	end 
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_STRIntNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("STRIntNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRInt") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_ShipsAdd("GrowSelection_STRIntNearbyATTACK", "GrowSelection_AttackingSTRInt")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRInt"))
	else
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	else
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRIntNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	
end 


--
--  "watch" code for Mission12 STRInterceptors AttackNearby state
--
function Watch_Mission12_STRInterceptors_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRIntNearbyATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_GetCurrentOrder("STRIntScout") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntScout"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_GetCurrentOrder("STRIntInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntInt"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntScout") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	G_IntScoutsAreFree = 1 --created,set
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntInt") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntInt"))
	
	G_IntIntsAreFree = 1 --created,set
	end 
	end 
	if ((G_IntScoutsAreFree == 1) and (G_IntIntsAreFree == 1)) then 
	
	G_IntScoutsAreFree = 0 --destroyed
	G_IntIntsAreFree = 0 --destroyed
	SobGroup_Clear("GrowSelection_STRIntNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackNearby")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors AttackRestOfWorld state
--
function Init_Mission12_STRInterceptors_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count("GrowSelection_STRIntWorldNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldNearbyFighters"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	end 
	KAS_ShipsAdd("GrowSelection_STRIntWorldATTACK", "GrowSelection_STRIntWorldNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntWorldATTACK"), kasGrowSelectionPtr("STRIntWorldNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRIntWorldNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldNearbyFrigates"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	end 
	KAS_ShipsAdd("GrowSelection_STRIntWorldATTACK", "GrowSelection_STRIntWorldNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRIntWorldATTACK"), kasGrowSelectionPtr("STRIntWorldNearbyFrigates"))
	else
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Init_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRIntWorldATTACK")    --kasfAttack(kasGrowSelectionPtr("STRIntWorldATTACK"))
	
end 


--
--  "watch" code for Mission12 STRInterceptors AttackRestOfWorld state
--
function Watch_Mission12_STRInterceptors_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRIntWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_GetCurrentOrder("STRIntScout") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntScout"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_GetCurrentOrder("STRIntInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntInt"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRIntWorldATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRIntWorldATTACK"), 14000)
	
	--kasJump("OnTheMoveToRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld", "Watch_Mission12_STRInterceptors_AttackRestOfWorld")
	Init_Mission12_STRInterceptors_OnTheMoveToRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors OnTheMoveToRestOfWorld state
--
function Init_Mission12_STRInterceptors_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	SobGroup_SetMaxSpeed(TeamName, 280)    --kasfTeamSetMaxVelocity(800)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRInterceptors OnTheMoveToRestOfWorld state
--
function Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_GetCurrentOrder("STRIntScout") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntScout"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_GetCurrentOrder("STRIntInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRIntInt"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRIntScout") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntScout"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntScout") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRIntScout", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRIntScout", "GrowSelection_AttackingSTRIntScout", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRIntScout"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRIntScout") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_MessageSendToAll(TeamName, "STRIntIsUnderAttack")    --kasfMsgSendAll("STRIntIsUnderAttack")
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRIntInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRIntInt"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRIntInt") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRIntInt"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRIntScout", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRIntScout"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRIntScout", "GrowSelection_AttackingSTRIntScout", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRIntScout"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRIntScout") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRIntScout"))
	
	KAS_MessageSendToAll(TeamName, "STRIntIsUnderAttack")    --kasfMsgSendAll("STRIntIsUnderAttack")
	end 
	end 
	end 
	if (KAS_MessageReceived(TeamName, "STRIntIsUnderAttack") ~= 0) then     --kasfMsgReceived("STRIntIsUnderAttack")
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackNearby", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRIntWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRIntWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRIntWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRIntWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRIntWorldATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRIntWorldATTACK"), 14000)
	
	--kasJump("AttackRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_AttackRestOfWorld", "Watch_Mission12_STRInterceptors_OnTheMoveToRestOfWorld")
	Init_Mission12_STRInterceptors_AttackRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors GuardCarrier state
--
function Init_Mission12_STRInterceptors_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	KASTimer_Start(GoDecideAgain[TeamName], 30)
	
end 


--
--  "watch" code for Mission12 STRInterceptors GuardCarrier state
--
function Watch_Mission12_STRInterceptors_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_GuardCarrier")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Dock", "Watch_Mission12_STRInterceptors_GuardCarrier")
	Init_Mission12_STRInterceptors_Dock(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(GoDecideAgain[TeamName]) ~= 0) then 
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_GuardCarrier")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors Dock state
--
function Init_Mission12_STRInterceptors_Dock(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission12 STRInterceptors Dock state
--
function Watch_Mission12_STRInterceptors_Dock(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_Dock")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Launch", "Watch_Mission12_STRInterceptors_Dock")
	Init_Mission12_STRInterceptors_Launch(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_Dock")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors Launch state
--
function Init_Mission12_STRInterceptors_Launch(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 STRInterceptors Launch state
--
function Watch_Mission12_STRInterceptors_Launch(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_WaitForLaunchOrder", "Watch_Mission12_STRInterceptors_Launch")
	Init_Mission12_STRInterceptors_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_Launch")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRInterceptors", "Watch_Mission12_STRInterceptors_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRInterceptors_Decide", "Watch_Mission12_STRInterceptors_Launch")
	Init_Mission12_STRInterceptors_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRInterceptors NullState state
--
function Init_Mission12_STRInterceptors_NullState(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	
end 


--
--  "watch" code for Mission12 STRInterceptors NullState state
--
function Watch_Mission12_STRInterceptors_NullState(TeamName)
	--FSM: FSM_Mission12_STRInterceptors
	--TeamName = "STRIntScout"
	
end 


--
--  "initialize" code for Mission12 STRBombers FSM
--
function Init_Mission12_STRBombers(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	G_STRBomFrigateIndex = 0 --created,set
	G_STRBomDestroyerIndex = 0 --created,set
	G_STRBomFrigSelectionExhausted = 0 --created,set
	G_STRBomDesSelectionExhausted = 0 --created,set
	--kasJump("WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Init_Mission12_STRBombers")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 STRBombers FSM
--
function Watch_Mission12_STRBombers(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (_VIFONCE017[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #17    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE017[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_NullState", "Watch_Mission12_STRBombers")
	Init_Mission12_STRBombers_NullState(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	if (_VIFONCE018[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #18    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE018[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_NullState", "Watch_Mission12_STRBombers")
	Init_Mission12_STRBombers_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers WaitForLaunchOrder state
--
function Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	G_STRBomberATREADY = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	G_STRBomberHCREADY = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRBombers WaitForLaunchOrder state
--
function Watch_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (G_STRBombersLAUNCH == 1) then 
	
	G_STRBomberATREADY = 0 --destroyed
	G_STRBomberHCREADY = 0 --destroyed
	--kasJump("Build")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Build", "Watch_Mission12_STRBombers_WaitForLaunchOrder")
	Init_Mission12_STRBombers_Build(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers Build state
--
function Init_Mission12_STRBombers_Build(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	G_STRBomberATBuilding = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	G_STRBomberHCBuilding = 1 --created,set
	end 
	G_STRBomberATNewships = 0 --created,set
	G_STRBomberHCNewships = 0 --created,set
	G_STRBombersToRequest = 0 --created,set
	G_STRCorvsToRequest = 0 --created,set
	G_STRBombersToRequest = (5 + (10 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	G_STRCorvsToRequest = (2 + (4 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 120 * (G_STRBombersToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 120 * (___KAS_SCOPED_VAR____G_STRBombersToRequest_)))
	KAS_RequestShips(TeamName, "Tai_AttackBomber", G_STRBombersToRequest)    --kasfRequestShips("AttackBomber", ___KAS_SCOPED_VAR____G_STRBombersToRequest_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 270 * (G_STRCorvsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 270 * (___KAS_SCOPED_VAR____G_STRCorvsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_HeavyCorvette", G_STRCorvsToRequest)    --kasfRequestShips("HeavyCorvette", ___KAS_SCOPED_VAR____G_STRCorvsToRequest_)
	end 
	end 
	G_STRBomberTeamIsBuilt = 0 --destroyed
	
end 


--
--  "watch" code for Mission12 STRBombers Build state
--
function Watch_Mission12_STRBombers_Build(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if ((G_STRBomberATBuilding == 1) and (G_STRBomberHCBuilding == 1)) then 
	
	G_STRBombersLAUNCH = 0 --destroyed
	G_STRBomberATBuilding = 0 --destroyed
	G_STRBomberHCBuilding = 0 --destroyed
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	G_STRBomberATNewships = G_STRBomberATNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	G_STRBomberHCNewships = G_STRBomberHCNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	end 
	if (((G_STRBomberATNewships == G_STRBombersToRequest) and (G_STRBomberHCNewships == G_STRCorvsToRequest)) or ((SobGroup_Count("Carrier") == 0) and ((SobGroup_Count("STRBomberAT") > 0) or (SobGroup_Count("STRBomberHC") > 0)))) then     --kasfShipsCount(kasAITeamShipsPtr("STRBomberHC"))    --kasfShipsCount(kasAITeamShipsPtr("STRBomberAT"))    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	G_STRBomberTeamIsBuilt = 1 --created,set
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_Build")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Guard", "Watch_Mission12_STRBombers_Build")
	Init_Mission12_STRBombers_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers Decide state
--
function Init_Mission12_STRBombers_Decide(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomberFrigates", "GrowSelection_FleetAtMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomberFrigates"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomberDestroyer", "GrowSelection_FleetAtMothership", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomberDestroyer"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Destroyer")
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomWorldFrigates", "GrowSelection_AllShipsInWorld", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomWorldFrigates"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomWorldDestroyers", "GrowSelection_AllShipsInWorld", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomWorldDestroyers"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Destroyer")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRBomSingleFrigate", "GrowSelection_STRBomWorldFrigates", G_STRBomFrigateIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRBomSingleFrigate"), kasGrowSelectionPtr("STRBomWorldFrigates"), ___KAS_SCOPED_VAR____G_STRBomFrigateIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRBomSingleFrigate", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRBomSingleFrigate"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRBomSingleFrigate", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRBomSingleFrigate"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRBomSingleFrigate", "GrowSelection_STRBomSingleFrigate", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRBomSingleFrigate"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomWorldNearbyFrigates", "GrowSelection_STRBomSingleFrigate", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomWorldNearbyFrigates"), kasGrowSelectionPtr("STRBomSingleFrigate"), "CLASS_Frigate")
	G_STRBomFrigateIndex = G_STRBomFrigateIndex + 1
	else
	
	G_STRBomFrigSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRBomSingleDestroyer", "GrowSelection_STRBomWorldDestroyers", G_STRBomDestroyerIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRBomSingleDestroyer"), kasGrowSelectionPtr("STRBomWorldDestroyers"), ___KAS_SCOPED_VAR____G_STRBomDestroyerIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRBomSingleDestroyer", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRBomSingleDestroyer"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRBomSingleDestroyer", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRBomSingleDestroyer"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRBomSingleDestroyer", "GrowSelection_STRBomSingleDestroyer", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRBomSingleDestroyer"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomWorldNearbyDes", "GrowSelection_STRBomSingleDestroyer", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomWorldNearbyDes"), kasGrowSelectionPtr("STRBomSingleDestroyer"), "CLASS_Destroyer")
	G_STRBomDestroyerIndex = G_STRBomDestroyerIndex + 1
	else
	
	G_STRBomDesSelectionExhausted = 1 --set
	end 
	if ((612 * (SobGroup_Count("GrowSelection_STRBomberFrigates") + 1425) * (SobGroup_Count("GrowSelection_STRBomberDestroyer"))) > 500) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomberDestroyer"))    --kasfShipsCount(kasGrowSelectionPtr("STRBomberFrigates"))
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	--kasJump("AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackFleetAtMothership", "Init_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_AttackFleetAtMothership(TeamName)
	return
	elseif ((G_STRBomFrigSelectionExhausted == 0) or (G_STRBomDesSelectionExhausted == 0)) then 
	
	if ((612 * (SobGroup_Count("GrowSelection_STRBomWorldNearbyFrigates") + 1425) * (SobGroup_Count("GrowSelection_STRBomWorldNearbyDes"))) > 500) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldNearbyDes"))    --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldNearbyFrigates"))
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	--kasJump("AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackRestOfWorld", "Init_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_AttackRestOfWorld(TeamName)
	return
	else
	
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Init_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	--kasJump("GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_GuardCarrier", "Init_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_GuardCarrier(TeamName)
	return
	else
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	STRBomberHCKamikazeNow[TeamName] = 1 --created,set
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_NullState", "Init_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_NullState(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 STRBombers Decide state
--
function Watch_Mission12_STRBombers_Decide(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	G_STRBomFrigateIndex = 0 --set
	G_STRBomDestroyerIndex = 0 --set
	G_STRBomFrigSelectionExhausted = 0 --set
	G_STRBomDesSelectionExhausted = 0 --set
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_Decide")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers Guard state
--
function Init_Mission12_STRBombers_Guard(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	SobGroup_GuardSobGroup(TeamName, "STRBomberAT")    --kasfGuardShips(kasAITeamShipsPtr("STRBomberAT"))
	
end 


--
--  "watch" code for Mission12 STRBombers Guard state
--
function Watch_Mission12_STRBombers_Guard(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_Guard")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_Guard")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (STRBomberHCKamikazeNow[TeamName] == 1) then 
	
	STRBomberHCKamikazeNow[TeamName] = 0 --destroyed
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_NullState", "Watch_Mission12_STRBombers_Guard")
	Init_Mission12_STRBombers_NullState(TeamName)
	return
	end 
	if ((G_STRBomberTeamIsBuilt == 1) and (SobGroup_Count("STRBomberAT") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRBomberAT"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_Guard")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers AttackFleetAtMothership state
--
function Init_Mission12_STRBombers_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomFleetFrigates", "GrowSelection_PlayerFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomFleetFrigates"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomFleetDestroyers", "GrowSelection_PlayerFleet", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomFleetDestroyers"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Destroyer")
	if (SobGroup_Count("GrowSelection_STRBomFleetFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomFleetFrigates"))
	
	KAS_ShipsAdd("GrowSelection_STRBomFleetATTACK", "GrowSelection_STRBomFleetFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomFleetATTACK"), kasGrowSelectionPtr("STRBomFleetFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRBomFleetDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomFleetDestroyers"))
	
	KAS_ShipsAdd("GrowSelection_STRBomFleetATTACK", "GrowSelection_STRBomFleetDestroyers")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomFleetATTACK"), kasGrowSelectionPtr("STRBomFleetDestroyers"))
	else
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Init_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRBomFleetATTACK")    --kasfAttack(kasGrowSelectionPtr("STRBomFleetATTACK"))
	
end 


--
--  "watch" code for Mission12 STRBombers AttackFleetAtMothership state
--
function Watch_Mission12_STRBombers_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRBomFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (KAS_GetCurrentOrder("STRBomberAT") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRBomFleetATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRBomFleetATTACK"), 14000)
	
	--kasJump("OnTheMoveToMothership")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_OnTheMoveToMothership", "Watch_Mission12_STRBombers_AttackFleetAtMothership")
	Init_Mission12_STRBombers_OnTheMoveToMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers OnTheMoveToMothership state
--
function Init_Mission12_STRBombers_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	SobGroup_SetMaxSpeed(TeamName, 182)    --kasfTeamSetMaxVelocity(520)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRBombers OnTheMoveToMothership state
--
function Watch_Mission12_STRBombers_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (KAS_GetCurrentOrder("STRBomberAT") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRBombers") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRBombers", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRBombers"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRBombers", "GrowSelection_AttackingSTRBombers", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRBombers"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRBombers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackNearby", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRBomFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRBomFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRBomFleetATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRBomFleetATTACK"), 14000)
	
	--kasJump("AttackFleetAtMothership")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackFleetAtMothership", "Watch_Mission12_STRBombers_OnTheMoveToMothership")
	Init_Mission12_STRBombers_AttackFleetAtMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers AttackNearby state
--
function Init_Mission12_STRBombers_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomNearbyFrigates", "GrowSelection_AttackingSTRBombers", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomNearbyFrigates"), kasGrowSelectionPtr("AttackingSTRBombers"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRBomNearbyDestroyers", "GrowSelection_AttackingSTRBombers", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRBomNearbyDestroyers"), kasGrowSelectionPtr("AttackingSTRBombers"), "CLASS_Destroyer")
	if (SobGroup_Count("GrowSelection_STRBomNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomNearbyFrigates"))
	
	KAS_ShipsAdd("GrowSelection_STRBomNearbyATTACK", "GrowSelection_STRBomNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomNearbyATTACK"), kasGrowSelectionPtr("STRBomNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRBomNearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomNearbyDestroyers"))
	
	KAS_ShipsAdd("GrowSelection_STRBomNearbyATTACK", "GrowSelection_STRBomNearbyDestroyers")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomNearbyATTACK"), kasGrowSelectionPtr("STRBomNearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRBombers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	KAS_ShipsAdd("GrowSelection_STRBomNearbyATTACK", "GrowSelection_AttackingSTRBombers")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRBombers"))
	else
	
	SobGroup_Clear("GrowSelection_STRBomNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Init_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRBomNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	
end 


--
--  "watch" code for Mission12 STRBombers AttackNearby state
--
function Watch_Mission12_STRBombers_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRBomNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRBomNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRBomNearbyATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	
	SobGroup_Clear("GrowSelection_STRBomNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (KAS_GetCurrentOrder("STRBomberAT") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRBombers") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	SobGroup_Clear("GrowSelection_STRBomNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackNearby")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers AttackRestOfWorld state
--
function Init_Mission12_STRBombers_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count("GrowSelection_STRBomWorldNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldNearbyFrigates"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRBomWorldATTACK", "GrowSelection_STRBomWorldNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomWorldATTACK"), kasGrowSelectionPtr("STRBomWorldNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRBomWorldNearbyDes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldNearbyDes"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRBomWorldATTACK", "GrowSelection_STRBomWorldNearbyDes")    --kasfShipsAdd(kasGrowSelectionPtr("STRBomWorldATTACK"), kasGrowSelectionPtr("STRBomWorldNearbyDes"))
	else
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Init_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRBomWorldATTACK")    --kasfAttack(kasGrowSelectionPtr("STRBomWorldATTACK"))
	
end 


--
--  "watch" code for Mission12 STRBombers AttackRestOfWorld state
--
function Watch_Mission12_STRBombers_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRBomWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (KAS_GetCurrentOrder("STRBomberAT") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRBomWorldATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRBomWorldATTACK"), 14000)
	
	--kasJump("OnTheMoveToRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld", "Watch_Mission12_STRBombers_AttackRestOfWorld")
	Init_Mission12_STRBombers_OnTheMoveToRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers OnTheMoveToRestOfWorld state
--
function Init_Mission12_STRBombers_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	SobGroup_SetMaxSpeed(TeamName, 182)    --kasfTeamSetMaxVelocity(520)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRBombers OnTheMoveToRestOfWorld state
--
function Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	if (KAS_GetCurrentOrder("STRBomberAT") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRBombers") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRBombers", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRBombers"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRBombers", "GrowSelection_AttackingSTRBombers", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRBombers"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRBombers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRBombers"))
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackNearby", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRBomWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRBomWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRBomWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRBomWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRBomWorldATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRBomWorldATTACK"), 14000)
	
	--kasJump("AttackRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_AttackRestOfWorld", "Watch_Mission12_STRBombers_OnTheMoveToRestOfWorld")
	Init_Mission12_STRBombers_AttackRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers GuardCarrier state
--
function Init_Mission12_STRBombers_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	KASTimer_Start(GoDecideAgain[TeamName], 30)
	
end 


--
--  "watch" code for Mission12 STRBombers GuardCarrier state
--
function Watch_Mission12_STRBombers_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_GuardCarrier")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("Carrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Dock", "Watch_Mission12_STRBombers_GuardCarrier")
	Init_Mission12_STRBombers_Dock(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(GoDecideAgain[TeamName]) ~= 0) then 
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_GuardCarrier")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers Dock state
--
function Init_Mission12_STRBombers_Dock(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission12 STRBombers Dock state
--
function Watch_Mission12_STRBombers_Dock(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_Dock")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Launch", "Watch_Mission12_STRBombers_Dock")
	Init_Mission12_STRBombers_Launch(TeamName)
	return
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_Dock")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Guard", "Watch_Mission12_STRBombers_Dock")
	Init_Mission12_STRBombers_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers Launch state
--
function Init_Mission12_STRBombers_Launch(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 STRBombers Launch state
--
function Watch_Mission12_STRBombers_Launch(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_WaitForLaunchOrder", "Watch_Mission12_STRBombers_Launch")
	Init_Mission12_STRBombers_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_Launch")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Guard", "Watch_Mission12_STRBombers_Launch")
	Init_Mission12_STRBombers_Guard(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRBomberAT") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberAT"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Decide", "Watch_Mission12_STRBombers_Launch")
	Init_Mission12_STRBombers_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRBomberHC") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRBomberHC"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRBombers", "Watch_Mission12_STRBombers_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRBombers_Guard", "Watch_Mission12_STRBombers_Launch")
	Init_Mission12_STRBombers_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRBombers NullState state
--
function Init_Mission12_STRBombers_NullState(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	
end 


--
--  "watch" code for Mission12 STRBombers NullState state
--
function Watch_Mission12_STRBombers_NullState(TeamName)
	--FSM: FSM_Mission12_STRBombers
	--TeamName = "STRBomberAT"
	
end 


--
--  "initialize" code for Mission12 STRMG FSM
--
function Init_Mission12_STRMG(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	G_STRMGFighterIndex = 0 --created,set
	G_STRMGCorvetteIndex = 0 --created,set
	G_STRMGFightSelectionExhausted = 0 --created,set
	G_STRMGCorvSelectionExhausted = 0 --created,set
	--kasJump("WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Init_Mission12_STRMG")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 STRMG FSM
--
function Watch_Mission12_STRMG(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (_VIFONCE019[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #19    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE019[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_NullState", "Watch_Mission12_STRMG")
	Init_Mission12_STRMG_NullState(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	if (_VIFONCE020[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #20    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE020[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_NullState", "Watch_Mission12_STRMG")
	Init_Mission12_STRMG_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG WaitForLaunchOrder state
--
function Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	G_STRMGMGREADY = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	G_STRMGSFREADY = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRMG WaitForLaunchOrder state
--
function Watch_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (G_STRMGLAUNCH == 1) then 
	
	G_STRMGMGREADY = 0 --destroyed
	G_STRMGSFREADY = 0 --destroyed
	--kasJump("Build")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Build", "Watch_Mission12_STRMG_WaitForLaunchOrder")
	Init_Mission12_STRMG_Build(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG Build state
--
function Init_Mission12_STRMG_Build(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	G_STRMGMGBuilding = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	G_STRMGSFBuilding = 1 --created,set
	end 
	G_STRMGMGNewships = 0 --created,set
	G_STRMGSFNewships = 0 --created,set
	G_STRMGsToRequest = 0 --created,set
	G_STRSFsToRequest = 0 --created,set
	G_STRMGsToRequest = (5 + (10 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	G_STRSFsToRequest = (1 + (1 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 300 * (G_STRMGsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 300 * (___KAS_SCOPED_VAR____G_STRMGsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_MultiGunCorvette", G_STRMGsToRequest)    --kasfRequestShips("MultiGunCorvette", ___KAS_SCOPED_VAR____G_STRMGsToRequest_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 800 * (G_STRSFsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 800 * (___KAS_SCOPED_VAR____G_STRSFsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_SupportFrigate", G_STRSFsToRequest)    --kasfRequestShips("AdvanceSupportFrigate", ___KAS_SCOPED_VAR____G_STRSFsToRequest_)
	end 
	end 
	G_STRMGMGTeamIsBuilt = 0 --destroyed
	
end 


--
--  "watch" code for Mission12 STRMG Build state
--
function Watch_Mission12_STRMG_Build(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if ((G_STRMGMGBuilding == 1) and (G_STRMGSFBuilding == 1)) then 
	
	G_STRMGLAUNCH = 0 --destroyed
	G_STRMGMGBuilding = 0 --destroyed
	G_STRMGSFBuilding = 0 --destroyed
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	G_STRMGMGNewships = G_STRMGMGNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	elseif (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	G_STRMGSFNewships = G_STRMGSFNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	end 
	if (((G_STRMGMGNewships == G_STRMGsToRequest) and (G_STRMGSFNewships == G_STRSFsToRequest)) or ((SobGroup_Count("Carrier") == 0) and ((SobGroup_Count("STRMGMG") > 0) or (SobGroup_Count("STRMGSF") > 0)))) then     --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGMG"))    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	G_STRMGMGTeamIsBuilt = 1 --created,set
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Build")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRMGSF") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGSF"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Guard", "Watch_Mission12_STRMG_Build")
	Init_Mission12_STRMG_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG Decide state
--
function Init_Mission12_STRMG_Decide(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGFighters", "GrowSelection_FleetAtMothership", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGFighters"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGCorvettes", "GrowSelection_FleetAtMothership", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGCorvettes"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Corvette")
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGWorldFighters", "GrowSelection_AllShipsInWorld", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGWorldFighters"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGWorldCorvettes", "GrowSelection_AllShipsInWorld", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGWorldCorvettes"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Corvette")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRMGSingleFighter", "GrowSelection_STRMGWorldFighters", G_STRMGFighterIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRMGSingleFighter"), kasGrowSelectionPtr("STRMGWorldFighters"), ___KAS_SCOPED_VAR____G_STRMGFighterIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRMGSingleFighter", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRMGSingleFighter"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRMGSingleFighter", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRMGSingleFighter"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRMGSingleFighter", "GrowSelection_STRMGSingleFighter", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRMGSingleFighter"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGWorldNearbyFighters", "GrowSelection_STRMGSingleFighter", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGWorldNearbyFighters"), kasGrowSelectionPtr("STRMGSingleFighter"), "CLASS_Fighter")
	G_STRMGFighterIndex = G_STRMGFighterIndex + 1
	else
	
	G_STRMGFightSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRMGSingleCorvette", "GrowSelection_STRMGWorldCorvettes", G_STRMGCorvetteIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRMGSingleCorvette"), kasGrowSelectionPtr("STRMGWorldCorvettes"), ___KAS_SCOPED_VAR____G_STRMGCorvetteIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRMGSingleCorvette", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRMGSingleCorvette"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRMGSingleCorvette", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRMGSingleCorvette"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRMGSingleCorvette", "GrowSelection_STRMGSingleCorvette", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRMGSingleCorvette"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGWorldNearbyCorv", "GrowSelection_STRMGSingleCorvette", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGWorldNearbyCorv"), kasGrowSelectionPtr("STRMGSingleCorvette"), "CLASS_Corvette")
	G_STRMGCorvetteIndex = G_STRMGCorvetteIndex + 1
	else
	
	G_STRMGCorvSelectionExhausted = 1 --set
	end 
	if ((62 * (SobGroup_Count("GrowSelection_STRMGFighters") + 222) * (SobGroup_Count("GrowSelection_STRMGCorvettes"))) > 300) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGCorvettes"))    --kasfShipsCount(kasGrowSelectionPtr("STRMGFighters"))
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	--kasJump("AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackFleetAtMothership", "Init_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_AttackFleetAtMothership(TeamName)
	return
	elseif ((G_STRMGFightSelectionExhausted == 0) or (G_STRMGCorvSelectionExhausted == 0)) then 
	
	if ((62 * (SobGroup_Count("GrowSelection_STRMGWorldNearbyFighters") + 222) * (SobGroup_Count("GrowSelection_STRMGWorldNearbyCorv"))) > 300) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldNearbyCorv"))    --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldNearbyFighters"))
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	--kasJump("AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackRestOfWorld", "Init_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_AttackRestOfWorld(TeamName)
	return
	else
	
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Init_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	--kasJump("GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_GuardCarrier", "Init_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_GuardCarrier(TeamName)
	return
	else
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	STRMGSFKamikazeNow[TeamName] = 1 --created,set
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_NullState", "Init_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_NullState(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 STRMG Decide state
--
function Watch_Mission12_STRMG_Decide(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	G_STRMGFighterIndex = 0 --set
	G_STRMGCorvetteIndex = 0 --set
	G_STRMGFightSelectionExhausted = 0 --set
	G_STRMGCorvSelectionExhausted = 0 --set
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_Decide")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG Guard state
--
function Init_Mission12_STRMG_Guard(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	SobGroup_GuardSobGroup(TeamName, "STRMGMG")    --kasfGuardShips(kasAITeamShipsPtr("STRMGMG"))
	
end 


--
--  "watch" code for Mission12 STRMG Guard state
--
function Watch_Mission12_STRMG_Guard(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_Guard")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRMGSFKamikazeNow[TeamName] == 1) then 
	
	STRMGSFKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_NullState", "Watch_Mission12_STRMG_Guard")
	Init_Mission12_STRMG_NullState(TeamName)
	return
	end 
	if ((G_STRMGMGTeamIsBuilt == 1) and (SobGroup_Count("STRMGMG") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRMGMG"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_Guard")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG AttackFleetAtMothership state
--
function Init_Mission12_STRMG_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGFleetFighters", "GrowSelection_PlayerFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGFleetFighters"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGFleetCorvettes", "GrowSelection_PlayerFleet", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGFleetCorvettes"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Corvette")
	if (SobGroup_Count("GrowSelection_STRMGFleetFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGFleetFighters"))
	
	KAS_ShipsAdd("GrowSelection_STRMGFleetATTACK", "GrowSelection_STRMGFleetFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGFleetATTACK"), kasGrowSelectionPtr("STRMGFleetFighters"))
	elseif (SobGroup_Count("GrowSelection_STRMGFleetCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGFleetCorvettes"))
	
	KAS_ShipsAdd("GrowSelection_STRMGFleetATTACK", "GrowSelection_STRMGFleetCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGFleetATTACK"), kasGrowSelectionPtr("STRMGFleetCorvettes"))
	else
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Init_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	KAS_Attack(TeamName, "GrowSelection_STRMGFleetATTACK")    --kasfAttack(kasGrowSelectionPtr("STRMGFleetATTACK"))
	
end 


--
--  "watch" code for Mission12 STRMG AttackFleetAtMothership state
--
function Watch_Mission12_STRMG_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRMGFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (KAS_GetCurrentOrder("STRMGMG") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRMGMG"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRMGFleetATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRMGFleetATTACK"), 14000)
	
	--kasJump("OnTheMoveToMothership")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_OnTheMoveToMothership", "Watch_Mission12_STRMG_AttackFleetAtMothership")
	Init_Mission12_STRMG_OnTheMoveToMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG OnTheMoveToMothership state
--
function Init_Mission12_STRMG_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	SobGroup_SetMaxSpeed(TeamName, 157.5)    --kasfTeamSetMaxVelocity(450)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRMG OnTheMoveToMothership state
--
function Watch_Mission12_STRMG_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (KAS_GetCurrentOrder("STRMGMG") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRMGMG"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRMGs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRMGs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRMGs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRMGs", "GrowSelection_AttackingSTRMGs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRMGs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRMGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackNearby", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRMGFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRMGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRMGFleetATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRMGFleetATTACK"), 14000)
	
	--kasJump("AttackFleetAtMothership")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackFleetAtMothership", "Watch_Mission12_STRMG_OnTheMoveToMothership")
	Init_Mission12_STRMG_AttackFleetAtMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG AttackNearby state
--
function Init_Mission12_STRMG_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGNearbyFighters", "GrowSelection_AttackingSTRMGs", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGNearbyFighters"), kasGrowSelectionPtr("AttackingSTRMGs"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRMGNearbyCorvettes", "GrowSelection_AttackingSTRMGs", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRMGNearbyCorvettes"), kasGrowSelectionPtr("AttackingSTRMGs"), "CLASS_Corvette")
	if (SobGroup_Count("GrowSelection_STRMGNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGNearbyFighters"))
	
	KAS_ShipsAdd("GrowSelection_STRMGNearbyATTACK", "GrowSelection_STRMGNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGNearbyATTACK"), kasGrowSelectionPtr("STRMGNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRMGNearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGNearbyCorvettes"))
	
	KAS_ShipsAdd("GrowSelection_STRMGNearbyATTACK", "GrowSelection_STRMGNearbyCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGNearbyATTACK"), kasGrowSelectionPtr("STRMGNearbyCorvettes"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRMGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	KAS_ShipsAdd("GrowSelection_STRMGNearbyATTACK", "GrowSelection_AttackingSTRMGs")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRMGs"))
	else
	
	SobGroup_Clear("GrowSelection_STRMGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Init_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRMGNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	
end 


--
--  "watch" code for Mission12 STRMG AttackNearby state
--
function Watch_Mission12_STRMG_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRMGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	SobGroup_Clear("GrowSelection_STRMGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRMGNearbyATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	
	SobGroup_Clear("GrowSelection_STRMGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (KAS_GetCurrentOrder("STRMGMG") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRMGMG"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRMGs") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	SobGroup_Clear("GrowSelection_STRMGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackNearby")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG AttackRestOfWorld state
--
function Init_Mission12_STRMG_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count("GrowSelection_STRMGWorldNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldNearbyFighters"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRMGWorldATTACK", "GrowSelection_STRMGWorldNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGWorldATTACK"), kasGrowSelectionPtr("STRMGWorldNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRMGWorldNearbyCorv") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldNearbyCorv"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRMGWorldATTACK", "GrowSelection_STRMGWorldNearbyCorv")    --kasfShipsAdd(kasGrowSelectionPtr("STRMGWorldATTACK"), kasGrowSelectionPtr("STRMGWorldNearbyCorv"))
	else
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Init_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRMGWorldATTACK")    --kasfAttack(kasGrowSelectionPtr("STRMGWorldATTACK"))
	
end 


--
--  "watch" code for Mission12 STRMG AttackRestOfWorld state
--
function Watch_Mission12_STRMG_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRMGWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (KAS_GetCurrentOrder("STRMGMG") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRMGMG"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRMGWorldATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRMGWorldATTACK"), 14000)
	
	--kasJump("OnTheMoveToRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld", "Watch_Mission12_STRMG_AttackRestOfWorld")
	Init_Mission12_STRMG_OnTheMoveToRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG OnTheMoveToRestOfWorld state
--
function Init_Mission12_STRMG_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	SobGroup_SetMaxSpeed(TeamName, 157.5)    --kasfTeamSetMaxVelocity(450)
	end 
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRMG OnTheMoveToRestOfWorld state
--
function Watch_Mission12_STRMG_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRMGMG") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRMGMG"))
	
	if (KAS_GetCurrentOrder("STRMGMG") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRMGMG"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRMGs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRMGs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRMGs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRMGs", "GrowSelection_AttackingSTRMGs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRMGs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRMGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRMGs"))
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackNearby", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRMGWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRMGWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRMGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRMGWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRMGWorldATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRMGWorldATTACK"), 14000)
	
	--kasJump("AttackRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_AttackRestOfWorld", "Watch_Mission12_STRMG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRMG_AttackRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG GuardCarrier state
--
function Init_Mission12_STRMG_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	KASTimer_Start(GoDecideAgain[TeamName], 30)
	
end 


--
--  "watch" code for Mission12 STRMG GuardCarrier state
--
function Watch_Mission12_STRMG_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_GuardCarrier")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (((KAS_TeamHealth(TeamName) < 40) or (KAS_TeamFuelLowest(TeamName) < 25)) and ((SobGroup_Count("STRMGSF") > 0) or (SobGroup_Count("Carrier") > 0))) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))    --kasfTeamFuelLowest()    --kasfTeamHealthAverage()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Dock", "Watch_Mission12_STRMG_GuardCarrier")
	Init_Mission12_STRMG_Dock(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(GoDecideAgain[TeamName]) ~= 0) then 
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_GuardCarrier")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG Dock state
--
function Init_Mission12_STRMG_Dock(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count("STRMGSF") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))
	
	SobGroup_DockSobGroupAndStayDocked(TeamName, "STRMGSF")    --kasfDockStay(kasAITeamPtr("STRMGSF"))
	DockingWithSupportFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	DockingWithCarrier[TeamName] = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRMG Dock state
--
function Watch_Mission12_STRMG_Dock(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	DockingWithSupportFrigate[TeamName] = 0 --destroyed
	DockingWithCarrier[TeamName] = 0 --destroyed
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_Dock")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (DockingWithSupportFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("STRMGSF") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))
	
	DockingWithSupportFrigate[TeamName] = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Dock")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	elseif (DockingWithCarrier[TeamName] == 1) then 
	
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	DockingWithCarrier[TeamName] = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Dock")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Launch", "Watch_Mission12_STRMG_Dock")
	Init_Mission12_STRMG_Launch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG Launch state
--
function Init_Mission12_STRMG_Launch(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 STRMG Launch state
--
function Watch_Mission12_STRMG_Launch(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	DockingWithSupportFrigate[TeamName] = 0 --destroyed
	DockingWithCarrier[TeamName] = 0 --destroyed
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_WaitForLaunchOrder", "Watch_Mission12_STRMG_Launch")
	Init_Mission12_STRMG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	DockingWithSupportFrigate[TeamName] = 0 --destroyed
	DockingWithCarrier[TeamName] = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Launch")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	if (DockingWithSupportFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("STRMGSF") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("STRMGSF"))
	
	DockingWithSupportFrigate[TeamName] = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Launch")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	elseif (DockingWithCarrier[TeamName] == 1) then 
	
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	DockingWithCarrier[TeamName] = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRMG", "Watch_Mission12_STRMG_Launch")
	KASRule_Add(TeamName, "Watch_Mission12_STRMG_Decide", "Watch_Mission12_STRMG_Launch")
	Init_Mission12_STRMG_Decide(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRMG NullState state
--
function Init_Mission12_STRMG_NullState(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	
end 


--
--  "watch" code for Mission12 STRMG NullState state
--
function Watch_Mission12_STRMG_NullState(TeamName)
	--FSM: FSM_Mission12_STRMG
	--TeamName = "STRMGMG"
	
end 


--
--  "initialize" code for Mission12 STRGW FSM
--
function Init_Mission12_STRGW(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	G_STRGWFighterIndex = 0 --created,set
	G_STRGWCorvetteIndex = 0 --created,set
	G_STRGWFightSelectionExhausted = 0 --created,set
	G_STRGWCorvSelectionExhausted = 0 --created,set
	--kasJump("WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Init_Mission12_STRGW")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 STRGW FSM
--
function Watch_Mission12_STRGW(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (_VIFONCE021[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #21    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE021[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Watch_Mission12_STRGW")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	if (_VIFONCE022[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #22    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE022[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Watch_Mission12_STRGW")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW WaitForLaunchOrder state
--
function Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	G_STRGWIonREADY = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	G_STRGWGravREADY = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRGW WaitForLaunchOrder state
--
function Watch_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (G_STRGWLAUNCH == 1) then 
	
	G_STRGWIonREADY = 0 --destroyed
	G_STRGWGravREADY = 0 --destroyed
	--kasJump("Build")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Build", "Watch_Mission12_STRGW_WaitForLaunchOrder")
	Init_Mission12_STRGW_Build(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW Build state
--
function Init_Mission12_STRGW_Build(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	G_STRGWIonBuilding = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	G_STRGWGravBuilding = 1 --created,set
	end 
	G_STRGWIonNewships = 0 --created,set
	G_STRGWGravNewships = 0 --created,set
	G_STRGWIonsToRequest = 0 --created,set
	G_STRGWGWsToRequest = 0 --created,set
	G_STRGWIonsToRequest = (1 + (1 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	G_STRGWGWsToRequest = (1 + (0 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 900 * (G_STRGWIonsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 900 * (___KAS_SCOPED_VAR____G_STRGWIonsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_IonCannonFrigate", G_STRGWIonsToRequest)    --kasfRequestShips("IonCannonFrigate", ___KAS_SCOPED_VAR____G_STRGWIonsToRequest_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 800 * (G_STRGWGWsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 800 * (___KAS_SCOPED_VAR____G_STRGWGWsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_GravWellGenerator", G_STRGWGWsToRequest)    --kasfRequestShips("GravWellGenerator", ___KAS_SCOPED_VAR____G_STRGWGWsToRequest_)
	end 
	end 
	G_STRGWIonTeamIsBuilt = 0 --destroyed
	
end 


--
--  "watch" code for Mission12 STRGW Build state
--
function Watch_Mission12_STRGW_Build(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if ((G_STRGWIonBuilding == 1) and (G_STRGWGravBuilding == 1)) then 
	
	G_STRGWLAUNCH = 0 --destroyed
	G_STRGWIonBuilding = 0 --destroyed
	G_STRGWGravBuilding = 0 --destroyed
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	G_STRGWIonNewships = G_STRGWIonNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	elseif (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	G_STRGWGravNewships = G_STRGWGravNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	end 
	if (((G_STRGWIonNewships == G_STRGWIonsToRequest) and (G_STRGWGravNewships == G_STRGWGWsToRequest)) or ((SobGroup_Count("Carrier") == 0) and ((SobGroup_Count("STRGWIon") > 0) or (SobGroup_Count("STRGWGrav") > 0)))) then     --kasfShipsCount(kasAITeamShipsPtr("STRGWGrav"))    --kasfShipsCount(kasAITeamShipsPtr("STRGWIon"))    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	G_STRGWIonTeamIsBuilt = 1 --created,set
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_Build")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRGWGrav") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWGrav"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Guard", "Watch_Mission12_STRGW_Build")
	Init_Mission12_STRGW_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW Decide state
--
function Init_Mission12_STRGW_Decide(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWFighters", "GrowSelection_FleetAtMothership", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWFighters"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWCorvettes", "GrowSelection_FleetAtMothership", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWCorvettes"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Corvette")
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWWorldFighters", "GrowSelection_AllShipsInWorld", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWWorldFighters"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWWorldCorvettes", "GrowSelection_AllShipsInWorld", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWWorldCorvettes"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Corvette")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRGWSingleFighter", "GrowSelection_STRGWWorldFighters", G_STRGWFighterIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRGWSingleFighter"), kasGrowSelectionPtr("STRGWWorldFighters"), ___KAS_SCOPED_VAR____G_STRGWFighterIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRGWSingleFighter", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRGWSingleFighter"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRGWSingleFighter", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRGWSingleFighter"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRGWSingleFighter", "GrowSelection_STRGWSingleFighter", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRGWSingleFighter"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWWorldNearbyFighters", "GrowSelection_STRGWSingleFighter", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWWorldNearbyFighters"), kasGrowSelectionPtr("STRGWSingleFighter"), "CLASS_Fighter")
	G_STRGWFighterIndex = G_STRGWFighterIndex + 1
	else
	
	G_STRGWFightSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRGWSingleCorvette", "GrowSelection_STRGWWorldCorvettes", G_STRGWCorvetteIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRGWSingleCorvette"), kasGrowSelectionPtr("STRGWWorldCorvettes"), ___KAS_SCOPED_VAR____G_STRGWCorvetteIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRGWSingleCorvette", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRGWSingleCorvette"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRGWSingleCorvette", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRGWSingleCorvette"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRGWSingleCorvette", "GrowSelection_STRGWSingleCorvette", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRGWSingleCorvette"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWWorldNearbyCorv", "GrowSelection_STRGWSingleCorvette", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWWorldNearbyCorv"), kasGrowSelectionPtr("STRGWSingleCorvette"), "CLASS_Corvette")
	G_STRGWCorvetteIndex = G_STRGWCorvetteIndex + 1
	else
	
	G_STRGWCorvSelectionExhausted = 1 --set
	end 
	if ((62 * (SobGroup_Count("GrowSelection_STRGWFighters") + 222) * (SobGroup_Count("GrowSelection_STRGWCorvettes"))) > 300) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWCorvettes"))    --kasfShipsCount(kasGrowSelectionPtr("STRGWFighters"))
	
	G_STRGWFighterIndex = 0 --set
	G_STRGWCorvetteIndex = 0 --set
	G_STRGWFightSelectionExhausted = 0 --set
	G_STRGWCorvSelectionExhausted = 0 --set
	--kasJump("AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackFleetAtMothership", "Init_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_AttackFleetAtMothership(TeamName)
	return
	elseif ((G_STRGWFightSelectionExhausted == 0) or (G_STRGWCorvSelectionExhausted == 0)) then 
	
	if ((62 * (SobGroup_Count("GrowSelection_STRGWWorldNearbyFighters") + 222) * (SobGroup_Count("GrowSelection_STRGWWorldNearbyCorv"))) > 300) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldNearbyCorv"))    --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldNearbyFighters"))
	
	G_STRGWFighterIndex = 0 --set
	G_STRGWCorvetteIndex = 0 --set
	G_STRGWFightSelectionExhausted = 0 --set
	G_STRGWCorvSelectionExhausted = 0 --set
	--kasJump("AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackRestOfWorld", "Init_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_AttackRestOfWorld(TeamName)
	return
	else
	
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Init_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	G_STRGWFighterIndex = 0 --set
	G_STRGWCorvetteIndex = 0 --set
	G_STRGWFightSelectionExhausted = 0 --set
	G_STRGWCorvSelectionExhausted = 0 --set
	--kasJump("GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_GuardCarrier", "Init_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_GuardCarrier(TeamName)
	return
	else
	
	G_STRGWFighterIndex = 0 --set
	G_STRGWCorvetteIndex = 0 --set
	G_STRGWFightSelectionExhausted = 0 --set
	G_STRGWCorvSelectionExhausted = 0 --set
	STRGWSFKamikazeNow[TeamName] = 1 --created,set
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Init_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 STRGW Decide state
--
function Watch_Mission12_STRGW_Decide(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	G_STRGWFighterIndex = 0 --set
	G_STRGWCorvetteIndex = 0 --set
	G_STRGWFightSelectionExhausted = 0 --set
	G_STRGWCorvSelectionExhausted = 0 --set
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_Decide")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW Guard state
--
function Init_Mission12_STRGW_Guard(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_GuardSobGroup(TeamName, "STRGWIon")    --kasfGuardShips(kasAITeamShipsPtr("STRGWIon"))
	
end 


--
--  "watch" code for Mission12 STRGW Guard state
--
function Watch_Mission12_STRGW_Guard(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_Guard")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRGWSFKamikazeNow[TeamName] == 1) then 
	
	STRGWSFKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Watch_Mission12_STRGW_Guard")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	if ((G_STRGWIonTeamIsBuilt == 1) and (SobGroup_Count("STRGWIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRGWIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_Guard")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRGWEVERYONE", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRGWEVERYONE"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRGWEVERYONE", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRGWEVERYONE", "GrowSelection_STRGWEVERYONE", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRGWEVERYONE"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooFighters", "GrowSelection_STRGWEVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooFighters"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooCorvettes", "GrowSelection_STRGWEVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooCorvettes"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooFighters"))
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooCorvettes"))
	if (SobGroup_Count("GrowSelection_STRGWStrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWStrikeCraft"))
	
	--kasJump("GuardGravityOn")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_GuardGravityOn", "Watch_Mission12_STRGW_Guard")
	Init_Mission12_STRGW_GuardGravityOn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW GuardGravityOn state
--
function Init_Mission12_STRGW_GuardGravityOn(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_GuardSobGroup(TeamName, "STRGWIon")    --kasfGuardShips(kasAITeamShipsPtr("STRGWIon"))
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 STRGW GuardGravityOn state
--
function Watch_Mission12_STRGW_GuardGravityOn(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_GuardGravityOn")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRGWSFKamikazeNow[TeamName] == 1) then 
	
	STRGWSFKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Watch_Mission12_STRGW_GuardGravityOn")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	if ((G_STRGWIonTeamIsBuilt == 1) and (SobGroup_Count("STRGWIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRGWIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_GuardGravityOn")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRGWEVERYONE", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRGWEVERYONE"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRGWEVERYONE", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRGWEVERYONE", "GrowSelection_STRGWEVERYONE", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRGWEVERYONE"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooFighters", "GrowSelection_STRGWEVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooFighters"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooCorvettes", "GrowSelection_STRGWEVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooCorvettes"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooFighters"))
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooCorvettes"))
	if (SobGroup_Count("GrowSelection_STRGWStrikeCraft") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWStrikeCraft"))
	
	--kasJump("GuardGravityOff")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_GuardGravityOff", "Watch_Mission12_STRGW_GuardGravityOn")
	Init_Mission12_STRGW_GuardGravityOff(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW GuardGravityOff state
--
function Init_Mission12_STRGW_GuardGravityOff(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_GuardSobGroup(TeamName, "STRGWIon")    --kasfGuardShips(kasAITeamShipsPtr("STRGWIon"))
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 STRGW GuardGravityOff state
--
function Watch_Mission12_STRGW_GuardGravityOff(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_GuardGravityOff")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRGWSFKamikazeNow[TeamName] == 1) then 
	
	STRGWSFKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_NullState", "Watch_Mission12_STRGW_GuardGravityOff")
	Init_Mission12_STRGW_NullState(TeamName)
	return
	end 
	if ((G_STRGWIonTeamIsBuilt == 1) and (SobGroup_Count("STRGWIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRGWIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_GuardGravityOff")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRGWEVERYONE", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRGWEVERYONE"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRGWEVERYONE", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRGWEVERYONE", "GrowSelection_STRGWEVERYONE", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRGWEVERYONE"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooFighters", "GrowSelection_STRGWEVERYONE", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooFighters"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWYahooCorvettes", "GrowSelection_STRGWEVERYONE", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWYahooCorvettes"), kasGrowSelectionPtr("STRGWEVERYONE"), "CLASS_Corvette")
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooFighters"))
	KAS_ShipsAdd("GrowSelection_STRGWStrikeCraft", "GrowSelection_STRGWYahooCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWStrikeCraft"), kasGrowSelectionPtr("STRGWYahooCorvettes"))
	if (SobGroup_Count("GrowSelection_STRGWStrikeCraft") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWStrikeCraft"))
	
	--kasJump("GuardGravityOn")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardGravityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_GuardGravityOn", "Watch_Mission12_STRGW_GuardGravityOff")
	Init_Mission12_STRGW_GuardGravityOn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW AttackFleetAtMothership state
--
function Init_Mission12_STRGW_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWFleetFighters", "GrowSelection_PlayerFleet", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWFleetFighters"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWFleetCorvettes", "GrowSelection_PlayerFleet", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWFleetCorvettes"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Corvette")
	if (SobGroup_Count("GrowSelection_STRGWFleetFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWFleetFighters"))
	
	KAS_ShipsAdd("GrowSelection_STRGWFleetATTACK", "GrowSelection_STRGWFleetFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWFleetATTACK"), kasGrowSelectionPtr("STRGWFleetFighters"))
	elseif (SobGroup_Count("GrowSelection_STRGWFleetCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWFleetCorvettes"))
	
	KAS_ShipsAdd("GrowSelection_STRGWFleetATTACK", "GrowSelection_STRGWFleetCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWFleetATTACK"), kasGrowSelectionPtr("STRGWFleetCorvettes"))
	else
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Init_Mission12_STRGW_AttackFleetAtMothership")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_Attack(TeamName, "GrowSelection_STRGWFleetATTACK")    --kasfAttack(kasGrowSelectionPtr("STRGWFleetATTACK"))
	
end 


--
--  "watch" code for Mission12 STRGW AttackFleetAtMothership state
--
function Watch_Mission12_STRGW_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRGWFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (KAS_GetCurrentOrder("STRGWIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRGWIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRGWFleetATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRGWFleetATTACK"), 14000)
	
	--kasJump("OnTheMoveToMothership")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_OnTheMoveToMothership", "Watch_Mission12_STRGW_AttackFleetAtMothership")
	Init_Mission12_STRGW_OnTheMoveToMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW OnTheMoveToMothership state
--
function Init_Mission12_STRGW_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRGW OnTheMoveToMothership state
--
function Watch_Mission12_STRGW_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (KAS_GetCurrentOrder("STRGWIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRGWIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRGWs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRGWs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRGWs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRGWs", "GrowSelection_AttackingSTRGWs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRGWs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRGWs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackNearby", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	Init_Mission12_STRGW_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRGWFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRGWFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRGWFleetATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRGWFleetATTACK"), 14000)
	
	--kasJump("AttackFleetAtMothership")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackFleetAtMothership", "Watch_Mission12_STRGW_OnTheMoveToMothership")
	Init_Mission12_STRGW_AttackFleetAtMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW AttackNearby state
--
function Init_Mission12_STRGW_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWNearbyFighters", "GrowSelection_AttackingSTRGWs", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWNearbyFighters"), kasGrowSelectionPtr("AttackingSTRGWs"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_STRGWNearbyCorvettes", "GrowSelection_AttackingSTRGWs", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRGWNearbyCorvettes"), kasGrowSelectionPtr("AttackingSTRGWs"), "CLASS_Corvette")
	if (SobGroup_Count("GrowSelection_STRGWNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWNearbyFighters"))
	
	KAS_ShipsAdd("GrowSelection_STRGWNearbyATTACK", "GrowSelection_STRGWNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWNearbyATTACK"), kasGrowSelectionPtr("STRGWNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRGWNearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWNearbyCorvettes"))
	
	KAS_ShipsAdd("GrowSelection_STRGWNearbyATTACK", "GrowSelection_STRGWNearbyCorvettes")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWNearbyATTACK"), kasGrowSelectionPtr("STRGWNearbyCorvettes"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRGWs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	KAS_ShipsAdd("GrowSelection_STRGWNearbyATTACK", "GrowSelection_AttackingSTRGWs")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRGWs"))
	else
	
	SobGroup_Clear("GrowSelection_STRGWNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Init_Mission12_STRGW_AttackNearby")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRGWNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	
end 


--
--  "watch" code for Mission12 STRGW AttackNearby state
--
function Watch_Mission12_STRGW_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRGWNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_AttackNearby")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRGWNearbyATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	
	SobGroup_Clear("GrowSelection_STRGWNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackNearby")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (KAS_GetCurrentOrder("STRGWIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRGWIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackNearby")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRGWs") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	SobGroup_Clear("GrowSelection_STRGWNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWNearbyATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackNearby")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW AttackRestOfWorld state
--
function Init_Mission12_STRGW_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count("GrowSelection_STRGWWorldNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldNearbyFighters"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRGWWorldATTACK", "GrowSelection_STRGWWorldNearbyFighters")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWWorldATTACK"), kasGrowSelectionPtr("STRGWWorldNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_STRGWWorldNearbyCorv") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldNearbyCorv"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRGWWorldATTACK", "GrowSelection_STRGWWorldNearbyCorv")    --kasfShipsAdd(kasGrowSelectionPtr("STRGWWorldATTACK"), kasGrowSelectionPtr("STRGWWorldNearbyCorv"))
	else
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Init_Mission12_STRGW_AttackRestOfWorld")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	KAS_Attack(TeamName, "GrowSelection_STRGWWorldATTACK")    --kasfAttack(kasGrowSelectionPtr("STRGWWorldATTACK"))
	
end 


--
--  "watch" code for Mission12 STRGW AttackRestOfWorld state
--
function Watch_Mission12_STRGW_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_AttackRestOfWorld")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRGWWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackRestOfWorld")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (KAS_GetCurrentOrder("STRGWIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRGWIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_AttackRestOfWorld")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRGWWorldATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRGWWorldATTACK"), 14000)
	
	--kasJump("OnTheMoveToRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld", "Watch_Mission12_STRGW_AttackRestOfWorld")
	Init_Mission12_STRGW_OnTheMoveToRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW OnTheMoveToRestOfWorld state
--
function Init_Mission12_STRGW_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRGW OnTheMoveToRestOfWorld state
--
function Watch_Mission12_STRGW_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRGWIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRGWIon"))
	
	if (KAS_GetCurrentOrder("STRGWIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRGWIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRGWs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRGWs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRGWs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRGWs", "GrowSelection_AttackingSTRGWs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRGWs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRGWs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRGWs"))
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackNearby", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	Init_Mission12_STRGW_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRGWWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRGWWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRGWWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRGWWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRGWWorldATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRGWWorldATTACK"), 14000)
	
	--kasJump("AttackRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_AttackRestOfWorld", "Watch_Mission12_STRGW_OnTheMoveToRestOfWorld")
	Init_Mission12_STRGW_AttackRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW GuardCarrier state
--
function Init_Mission12_STRGW_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	KASTimer_Start(GoDecideAgain[TeamName], 30)
	
end 


--
--  "watch" code for Mission12 STRGW GuardCarrier state
--
function Watch_Mission12_STRGW_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_WaitForLaunchOrder", "Watch_Mission12_STRGW_GuardCarrier")
	Init_Mission12_STRGW_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(GoDecideAgain[TeamName]) ~= 0) then 
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRGW", "Watch_Mission12_STRGW_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRGW_Decide", "Watch_Mission12_STRGW_GuardCarrier")
	Init_Mission12_STRGW_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRGW NullState state
--
function Init_Mission12_STRGW_NullState(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	
end 


--
--  "watch" code for Mission12 STRGW NullState state
--
function Watch_Mission12_STRGW_NullState(TeamName)
	--FSM: FSM_Mission12_STRGW
	--TeamName = "STRGWIon"
	
end 


--
--  "initialize" code for Mission12 STRCG FSM
--
function Init_Mission12_STRCG(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	G_STRCGFrigateIndex = 0 --created,set
	G_STRCGDestroyerIndex = 0 --created,set
	G_STRCGFrigSelectionExhausted = 0 --created,set
	G_STRCGDesSelectionExhausted = 0 --created,set
	--kasJump("WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Init_Mission12_STRCG")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 STRCG FSM
--
function Watch_Mission12_STRCG(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (_VIFONCE023[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #23    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE023[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Watch_Mission12_STRCG")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	if (_VIFONCE024[TeamName] == 0 and ((SobGroup_Count(TeamName) == 0) and (ACT3HasBegun[TeamName] == 1))) then  -- "ifonce" #24    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE024[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Watch_Mission12_STRCG")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG WaitForLaunchOrder state
--
function Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	G_STRCGIonREADY = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	G_STRCGCloakREADY = 1 --created,set
	end 
	
end 


--
--  "watch" code for Mission12 STRCG WaitForLaunchOrder state
--
function Watch_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (G_STRCGLAUNCH == 1) then 
	
	G_STRCGIonREADY = 0 --destroyed
	G_STRCGCloakREADY = 0 --destroyed
	--kasJump("Build")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_WaitForLaunchOrder")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Build", "Watch_Mission12_STRCG_WaitForLaunchOrder")
	Init_Mission12_STRCG_Build(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG Build state
--
function Init_Mission12_STRCG_Build(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	G_STRCGIonBuilding = 1 --created,set
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	G_STRCGCloakBuilding = 1 --created,set
	end 
	G_STRCGIonNewships = 0 --created,set
	G_STRCGCloakNewships = 0 --created,set
	G_STRCGIonsToRequest = 0 --created,set
	G_STRCGCGsToRequest = 0 --created,set
	G_STRCGIonsToRequest = (1 + (2 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	G_STRCGCGsToRequest = (1 + (0 * ((SobGroup_Count("TestTeam"))) / 100)) --set    --kasfShipsCount(kasAITeamShipsPtr("TestTeam"))
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 900 * (G_STRCGIonsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 900 * (___KAS_SCOPED_VAR____G_STRCGIonsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_IonCannonFrigate", G_STRCGIonsToRequest)    --kasfRequestShips("IonCannonFrigate", ___KAS_SCOPED_VAR____G_STRCGIonsToRequest_)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	Player_SetRU(1, (Player_GetRU(1) + 800 * (G_STRCGCGsToRequest)))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 800 * (___KAS_SCOPED_VAR____G_STRCGCGsToRequest_)))
	KAS_RequestShips(TeamName, "Tai_CloakGenerator", G_STRCGCGsToRequest)    --kasfRequestShips("CloakGenerator", ___KAS_SCOPED_VAR____G_STRCGCGsToRequest_)
	end 
	end 
	G_STRCGIonTeamIsBuilt = 0 --destroyed
	
end 


--
--  "watch" code for Mission12 STRCG Build state
--
function Watch_Mission12_STRCG_Build(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if ((G_STRCGIonBuilding == 1) and (G_STRCGCloakBuilding == 1)) then 
	
	G_STRCGLAUNCH = 0 --destroyed
	G_STRCGIonBuilding = 0 --destroyed
	G_STRCGCloakBuilding = 0 --destroyed
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	G_STRCGIonNewships = G_STRCGIonNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	elseif (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	G_STRCGCloakNewships = G_STRCGCloakNewships + KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	end 
	if (((G_STRCGIonNewships == G_STRCGIonsToRequest) and (G_STRCGCloakNewships == G_STRCGCGsToRequest)) or ((SobGroup_Count("Carrier") == 0) and ((SobGroup_Count("STRCGIon") > 0) or (SobGroup_Count("STRCGCloak") > 0)))) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsCount(kasAITeamShipsPtr("STRCGIon"))    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	G_STRCGIonTeamIsBuilt = 1 --created,set
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_Build")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	elseif (KAS_TeamNamesEqual(TeamName, "STRCGCloak") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGCloak"))
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Build")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Guard", "Watch_Mission12_STRCG_Build")
	Init_Mission12_STRCG_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG Decide state
--
function Init_Mission12_STRCG_Decide(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_FleetAtMothership")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("FleetAtMothership"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_FleetAtMothership", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_FleetAtMothership", "GrowSelection_FleetAtMothership", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("FleetAtMothership"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGFrigates", "GrowSelection_FleetAtMothership", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGFrigates"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGDestroyers", "GrowSelection_FleetAtMothership", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGDestroyers"), kasGrowSelectionPtr("FleetAtMothership"), "CLASS_Destroyer")
	KAS_FindEnemiesInside("WorldVolume", "GrowSelection_AllShipsInWorld")    --kasfFindEnemiesInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShipsInWorld"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AllShipsInWorld", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AllShipsInWorld", "GrowSelection_AllShipsInWorld", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AllShipsInWorld"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGWorldFrigates", "GrowSelection_AllShipsInWorld", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGWorldFrigates"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGWorldDestroyers", "GrowSelection_AllShipsInWorld", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGWorldDestroyers"), kasGrowSelectionPtr("AllShipsInWorld"), "CLASS_Destroyer")
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRCGSingleFrigate", "GrowSelection_STRCGWorldFrigates", G_STRCGFrigateIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRCGSingleFrigate"), kasGrowSelectionPtr("STRCGWorldFrigates"), ___KAS_SCOPED_VAR____G_STRCGFrigateIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGSingleFrigate", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGSingleFrigate"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRCGSingleFrigate", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRCGSingleFrigate"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRCGSingleFrigate", "GrowSelection_STRCGSingleFrigate", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRCGSingleFrigate"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGWorldNearbyFrigates", "GrowSelection_STRCGSingleFrigate", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGWorldNearbyFrigates"), kasGrowSelectionPtr("STRCGSingleFrigate"), "CLASS_Frigate")
	G_STRCGFrigateIndex = G_STRCGFrigateIndex + 1
	else
	
	G_STRCGFrigSelectionExhausted = 1 --set
	end 
	if (SobGroup_FillShipsByIndexRange("GrowSelection_STRCGSingleDestroyer", "GrowSelection_STRCGWorldDestroyers", G_STRCGDestroyerIndex, 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("STRCGSingleDestroyer"), kasGrowSelectionPtr("STRCGWorldDestroyers"), ___KAS_SCOPED_VAR____G_STRCGDestroyerIndex_)
	
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGSingleDestroyer", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGSingleDestroyer"), 10000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRCGSingleDestroyer", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRCGSingleDestroyer"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRCGSingleDestroyer", "GrowSelection_STRCGSingleDestroyer", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRCGSingleDestroyer"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGWorldNearbyDes", "GrowSelection_STRCGSingleDestroyer", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGWorldNearbyDes"), kasGrowSelectionPtr("STRCGSingleDestroyer"), "CLASS_Destroyer")
	G_STRCGDestroyerIndex = G_STRCGDestroyerIndex + 1
	else
	
	G_STRCGDesSelectionExhausted = 1 --set
	end 
	if ((612 * (SobGroup_Count("GrowSelection_STRCGFrigates") + 1425) * (SobGroup_Count("GrowSelection_STRCGDestroyers"))) > 500) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGDestroyers"))    --kasfShipsCount(kasGrowSelectionPtr("STRCGFrigates"))
	
	G_STRCGFrigateIndex = 0 --set
	G_STRCGDestroyerIndex = 0 --set
	G_STRCGFrigSelectionExhausted = 0 --set
	G_STRCGDesSelectionExhausted = 0 --set
	--kasJump("AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackFleetAtMothership", "Init_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_AttackFleetAtMothership(TeamName)
	return
	elseif ((G_STRCGFrigSelectionExhausted == 0) or (G_STRCGDesSelectionExhausted == 0)) then 
	
	if ((612 * (SobGroup_Count("GrowSelection_STRCGWorldNearbyFrigates") + 1425) * (SobGroup_Count("GrowSelection_STRCGWorldNearbyDes"))) > 500) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldNearbyDes"))    --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldNearbyFrigates"))
	
	G_STRCGFrigateIndex = 0 --set
	G_STRCGDestroyerIndex = 0 --set
	G_STRCGFrigSelectionExhausted = 0 --set
	G_STRCGDesSelectionExhausted = 0 --set
	--kasJump("AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackRestOfWorld", "Init_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_AttackRestOfWorld(TeamName)
	return
	else
	
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Init_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	G_STRCGFrigateIndex = 0 --set
	G_STRCGDestroyerIndex = 0 --set
	G_STRCGFrigSelectionExhausted = 0 --set
	G_STRCGDesSelectionExhausted = 0 --set
	--kasJump("GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_GuardCarrier", "Init_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_GuardCarrier(TeamName)
	return
	else
	
	G_STRCGFrigateIndex = 0 --set
	G_STRCGDestroyerIndex = 0 --set
	G_STRCGFrigSelectionExhausted = 0 --set
	G_STRCGDesSelectionExhausted = 0 --set
	STRCGCGKamikazeNow[TeamName] = 1 --created,set
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Init_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission12 STRCG Decide state
--
function Watch_Mission12_STRCG_Decide(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	G_STRCGFrigateIndex = 0 --set
	G_STRCGDestroyerIndex = 0 --set
	G_STRCGFrigSelectionExhausted = 0 --set
	G_STRCGDesSelectionExhausted = 0 --set
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_Decide")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG Guard state
--
function Init_Mission12_STRCG_Guard(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_GuardSobGroup(TeamName, "STRCGIon")    --kasfGuardShips(kasAITeamShipsPtr("STRCGIon"))
	
end 


--
--  "watch" code for Mission12 STRCG Guard state
--
function Watch_Mission12_STRCG_Guard(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_Guard")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRCGCGKamikazeNow[TeamName] == 1) then 
	
	STRCGCGKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Watch_Mission12_STRCG_Guard")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	if ((G_STRCGIonTeamIsBuilt == 1) and (SobGroup_Count("STRCGIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_Guard")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGEVERYONE", 4900)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGEVERYONE"), 14000)
	if (SobGroup_Count("GrowSelection_STRCGEVERYONE") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGEVERYONE"))
	
	--kasJump("GuardCloakityOn")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_Guard")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_GuardCloakityOn", "Watch_Mission12_STRCG_Guard")
	Init_Mission12_STRCG_GuardCloakityOn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG GuardCloakityOn state
--
function Init_Mission12_STRCG_GuardCloakityOn(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_GuardSobGroup(TeamName, "STRCGIon")    --kasfGuardShips(kasAITeamShipsPtr("STRCGIon"))
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 STRCG GuardCloakityOn state
--
function Watch_Mission12_STRCG_GuardCloakityOn(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_GuardCloakityOn")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRCGCGKamikazeNow[TeamName] == 1) then 
	
	STRCGCGKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Watch_Mission12_STRCG_GuardCloakityOn")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	if ((G_STRCGIonTeamIsBuilt == 1) and (SobGroup_Count("STRCGIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_GuardCloakityOn")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGEVERYONE", 4900)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGEVERYONE"), 14000)
	if (SobGroup_Count("GrowSelection_STRCGEVERYONE") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGEVERYONE"))
	
	--kasJump("GuardCloakityOff")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOn")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_GuardCloakityOff", "Watch_Mission12_STRCG_GuardCloakityOn")
	Init_Mission12_STRCG_GuardCloakityOff(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG GuardCloakityOff state
--
function Init_Mission12_STRCG_GuardCloakityOff(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_GuardSobGroup(TeamName, "STRCGIon")    --kasfGuardShips(kasAITeamShipsPtr("STRCGIon"))
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission12 STRCG GuardCloakityOff state
--
function Watch_Mission12_STRCG_GuardCloakityOff(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_GuardCloakityOff")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (STRCGCGKamikazeNow[TeamName] == 1) then 
	
	STRCGCGKamikazeNow[TeamName] = 0 --destroyed
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_NullState", "Watch_Mission12_STRCG_GuardCloakityOff")
	Init_Mission12_STRCG_NullState(TeamName)
	return
	end 
	if ((G_STRCGIonTeamIsBuilt == 1) and (SobGroup_Count("STRCGIon") == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGIon"))
	
	KAS_GiveToCPUPlayer(TeamName)    --kasfTeamGiveToAI()
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_GuardCloakityOff")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGEVERYONE", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGEVERYONE"), 10000)
	if (SobGroup_Count("GrowSelection_STRCGEVERYONE") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGEVERYONE"))
	
	--kasJump("GuardCloakityOn")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCloakityOff")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_GuardCloakityOn", "Watch_Mission12_STRCG_GuardCloakityOff")
	Init_Mission12_STRCG_GuardCloakityOn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG AttackFleetAtMothership state
--
function Init_Mission12_STRCG_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	KAS_FindEnemiesInside("MothershipSphere", "GrowSelection_PlayerFleet")    --kasfFindEnemiesInside(kasVolumePtr("MothershipSphere"), kasGrowSelectionPtr("PlayerFleet"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_PlayerFleet", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_PlayerFleet", "GrowSelection_PlayerFleet", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("PlayerFleet"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGFleetFrigates", "GrowSelection_PlayerFleet", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGFleetFrigates"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGFleetDestroyers", "GrowSelection_PlayerFleet", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGFleetDestroyers"), kasGrowSelectionPtr("PlayerFleet"), "CLASS_Destroyer")
	if (SobGroup_Count("GrowSelection_STRCGFleetFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGFleetFrigates"))
	
	KAS_ShipsAdd("GrowSelection_STRCGFleetATTACK", "GrowSelection_STRCGFleetFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGFleetATTACK"), kasGrowSelectionPtr("STRCGFleetFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRCGFleetDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGFleetDestroyers"))
	
	KAS_ShipsAdd("GrowSelection_STRCGFleetATTACK", "GrowSelection_STRCGFleetDestroyers")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGFleetATTACK"), kasGrowSelectionPtr("STRCGFleetDestroyers"))
	else
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Init_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_Attack(TeamName, "GrowSelection_STRCGFleetATTACK")    --kasfAttack(kasGrowSelectionPtr("STRCGFleetATTACK"))
	
end 


--
--  "watch" code for Mission12 STRCG AttackFleetAtMothership state
--
function Watch_Mission12_STRCG_AttackFleetAtMothership(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRCGFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (KAS_GetCurrentOrder("STRCGIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRCGIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	if ((KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor") ~= 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRCGFleetATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRCGFleetATTACK"), 14000)
	
	--kasJump("OnTheMoveToMothership")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_OnTheMoveToMothership", "Watch_Mission12_STRCG_AttackFleetAtMothership")
	Init_Mission12_STRCG_OnTheMoveToMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG OnTheMoveToMothership state
--
function Init_Mission12_STRCG_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRCG OnTheMoveToMothership state
--
function Watch_Mission12_STRCG_OnTheMoveToMothership(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (KAS_GetCurrentOrder("STRCGIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRCGIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRCGs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRCGs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRCGs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRCGs", "GrowSelection_AttackingSTRCGs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRCGs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRCGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	if ((KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor") ~= 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRCGFleetATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGFleetATTACK"))
	
	SobGroup_Clear("GrowSelection_STRCGFleetATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGFleetATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRCGFleetATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRCGFleetATTACK"), 14000)
	
	--kasJump("AttackFleetAtMothership")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackFleetAtMothership", "Watch_Mission12_STRCG_OnTheMoveToMothership")
	Init_Mission12_STRCG_AttackFleetAtMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG AttackNearby state
--
function Init_Mission12_STRCG_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_STRCGLookinForProx", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("STRCGLookinForProx"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_STRCGLookinForProx", "GrowSelection_STRCGLookinForProx", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("STRCGLookinForProx"), kasGrowSelectionPtr("Mothership"))
	KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor")    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGNearbyFrigates", "GrowSelection_AttackingSTRCGs", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGNearbyFrigates"), kasGrowSelectionPtr("AttackingSTRCGs"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_STRCGNearbyDestroyers", "GrowSelection_AttackingSTRCGs", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("STRCGNearbyDestroyers"), kasGrowSelectionPtr("AttackingSTRCGs"), "CLASS_Destroyer")
	if ((SobGroup_Count("GrowSelection_STRCGFleetProxSensors") > 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsCount(kasGrowSelectionPtr("STRCGFleetProxSensors"))
	
	G_AttackingProximitySensors = 1 --created,set
	KAS_ShipsAdd("GrowSelection_STRCGNearbyATTACK", "GrowSelection_STRCGFleetProxSensors")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGNearbyATTACK"), kasGrowSelectionPtr("STRCGFleetProxSensors"))
	elseif (SobGroup_Count("GrowSelection_STRCGNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGNearbyFrigates"))
	
	KAS_ShipsAdd("GrowSelection_STRCGNearbyATTACK", "GrowSelection_STRCGNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGNearbyATTACK"), kasGrowSelectionPtr("STRCGNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRCGNearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGNearbyDestroyers"))
	
	KAS_ShipsAdd("GrowSelection_STRCGNearbyATTACK", "GrowSelection_STRCGNearbyDestroyers")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGNearbyATTACK"), kasGrowSelectionPtr("STRCGNearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_AttackingSTRCGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	KAS_ShipsAdd("GrowSelection_STRCGNearbyATTACK", "GrowSelection_AttackingSTRCGs")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGNearbyATTACK"), kasGrowSelectionPtr("AttackingSTRCGs"))
	else
	
	SobGroup_Clear("GrowSelection_STRCGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	G_AttackingProximitySensors = 0 --destroyed
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Init_Mission12_STRCG_AttackNearby")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	if (KAS_FillShipsByCapital("GrowSelection_STRCGCapitalTargets", "GrowSelection_STRCGNearbyATTACK") ~= 0) then     --kasfShipsSelectCapital(kasGrowSelectionPtr("STRCGCapitalTargets"), kasGrowSelectionPtr("STRCGNearbyATTACK"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRCGNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	else
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	KAS_Attack(TeamName, "GrowSelection_STRCGNearbyATTACK")    --kasfAttack(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	end 
	
end 


--
--  "watch" code for Mission12 STRCG AttackNearby state
--
function Watch_Mission12_STRCG_AttackNearby(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRCGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	G_AttackingProximitySensors = 0 --destroyed
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_AttackNearby")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRCGNearbyATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	
	SobGroup_Clear("GrowSelection_STRCGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	G_AttackingProximitySensors = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackNearby")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (KAS_GetCurrentOrder("STRCGIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRCGIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackNearby")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	end 
	if ((KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRCGs") == 0) and (G_AttackingProximitySensors == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	SobGroup_Clear("GrowSelection_STRCGNearbyATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGNearbyATTACK"))
	G_AttackingProximitySensors = 0 --destroyed
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackNearby")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG AttackRestOfWorld state
--
function Init_Mission12_STRCG_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count("GrowSelection_STRCGWorldNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldNearbyFrigates"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRCGWorldATTACK", "GrowSelection_STRCGWorldNearbyFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGWorldATTACK"), kasGrowSelectionPtr("STRCGWorldNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_STRCGWorldNearbyDes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldNearbyDes"))
	
	SobGroup_SetMaxSpeed(TeamName, -1)    --kasfTeamClearMaxVelocity()
	KAS_ShipsAdd("GrowSelection_STRCGWorldATTACK", "GrowSelection_STRCGWorldNearbyDes")    --kasfShipsAdd(kasGrowSelectionPtr("STRCGWorldATTACK"), kasGrowSelectionPtr("STRCGWorldNearbyDes"))
	else
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("Decide")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Init_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	G_SHIPSSTRCGWorldATTACK = SobGroup_Count("GrowSelection_STRCGWorldATTACK") --created,set    --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldATTACK"))
	KAS_Attack(TeamName, "GrowSelection_STRCGWorldATTACK")    --kasfAttack(kasGrowSelectionPtr("STRCGWorldATTACK"))
	
end 


--
--  "watch" code for Mission12 STRCG AttackRestOfWorld state
--
function Watch_Mission12_STRCG_AttackRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_STRCGWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (KAS_GetCurrentOrder("STRCGIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRCGIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	if ((KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor") ~= 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRCGWorldATTACK"), 4900) == 0) then     --kasfNearby(kasShipsVectorPtr("STRCGWorldATTACK"), 14000)
	
	--kasJump("OnTheMoveToRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_AttackRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld", "Watch_Mission12_STRCG_AttackRestOfWorld")
	Init_Mission12_STRCG_OnTheMoveToRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG OnTheMoveToRestOfWorld state
--
function Init_Mission12_STRCG_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_SetROE(TeamName, PassiveROE)    --kasfTacticsNeutral()
	
end 


--
--  "watch" code for Mission12 STRCG OnTheMoveToRestOfWorld state
--
function Watch_Mission12_STRCG_OnTheMoveToRestOfWorld(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "STRCGIon") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("STRCGIon"))
	
	if (KAS_GetCurrentOrder("STRCGIon") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("STRCGIon"))
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSTRCGs") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSTRCGs", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSTRCGs"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSTRCGs", "GrowSelection_AttackingSTRCGs", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSTRCGs"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSTRCGs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSTRCGs"))
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	end 
	if (SobGroup_Count("GrowSelection_STRCGWorldATTACK") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("STRCGWorldATTACK"))
	
	SobGroup_Clear("GrowSelection_STRCGWorldATTACK")    --kasfGrowSelectionClear(kasGrowSelectionPtr("STRCGWorldATTACK"))
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	if ((KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor") ~= 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_STRCGWorldATTACK"), 4900) ~= 0) then     --kasfNearby(kasShipsVectorPtr("STRCGWorldATTACK"), 14000)
	
	--kasJump("AttackRestOfWorld")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackRestOfWorld", "Watch_Mission12_STRCG_OnTheMoveToRestOfWorld")
	Init_Mission12_STRCG_AttackRestOfWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG GuardCarrier state
--
function Init_Mission12_STRCG_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	KASTimer_Start(GoDecideAgain[TeamName], 30)
	
end 


--
--  "watch" code for Mission12 STRCG GuardCarrier state
--
function Watch_Mission12_STRCG_GuardCarrier(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("WaitForLaunchOrder")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_WaitForLaunchOrder", "Watch_Mission12_STRCG_GuardCarrier")
	Init_Mission12_STRCG_WaitForLaunchOrder(TeamName)
	return
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_STRCGLookinForProx", 5600)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("STRCGLookinForProx"), 16000)
	if ((KAS_FillShipsByType_Normal("GrowSelection_STRCGFleetProxSensors", "GrowSelection_STRCGLookinForProx", "ProximitySensor") ~= 0) and (SobGroup_Count("STRCGCloak") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("STRCGCloak"))    --kasfShipsSelectType(kasGrowSelectionPtr("STRCGFleetProxSensors"), kasGrowSelectionPtr("STRCGLookinForProx"), "ProximitySensor")
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_AttackNearby", "Watch_Mission12_STRCG_GuardCarrier")
	Init_Mission12_STRCG_AttackNearby(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(GoDecideAgain[TeamName]) ~= 0) then 
	
	--kasJump("Decide")
	--KASRule_Remove("FSM_Mission12_STRCG", "Watch_Mission12_STRCG_GuardCarrier")
	KASRule_Add(TeamName, "Watch_Mission12_STRCG_Decide", "Watch_Mission12_STRCG_GuardCarrier")
	Init_Mission12_STRCG_Decide(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 STRCG NullState state
--
function Init_Mission12_STRCG_NullState(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	
end 


--
--  "watch" code for Mission12 STRCG NullState state
--
function Watch_Mission12_STRCG_NullState(TeamName)
	--FSM: FSM_Mission12_STRCG
	--TeamName = "STRCGIon"
	
end 


--
--  "initialize" code for Mission12 Defector FSM
--
function Init_Mission12_Defector(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	SobGroup_SetHealth(TeamName, 200 / 100)    --kasfTeamSetPercentDamaged(200)
	SobGroup_SetDamageMultiplier("Defector", 200 / 100)    --kasfShipsSetDamageFactor(kasAITeamShipsPtr("Defector"), 200)
	KAS_ShipsAdd("GrowSelection_ThisIsTheDefector", "Defector")    --kasfShipsAdd(kasGrowSelectionPtr("ThisIsTheDefector"), kasAITeamShipsPtr("Defector"))
	--kasJump("HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_Defector_HyperspaceOut", "Init_Mission12_Defector")
	Init_Mission12_Defector_HyperspaceOut(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 Defector FSM
--
function Watch_Mission12_Defector(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	if (_VIFONCE025[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 25)) then  -- "ifonce" #25    --kasfTeamHealthAverage()
	
	_VIFONCE025[TeamName] = 1 --created,set;
	KASTimer_Start(KeepDefectorAlive[TeamName], 90)
	end 
	if ((KAS_TeamHealth(TeamName) < 25) and (KASTimer_GetRemaining(KeepDefectorAlive[TeamName]) > 0)) then     --kasfTeamHealthAverage()
	
	SobGroup_SetHealth(TeamName, 25 / 100)    --kasfTeamSetPercentDamaged(25)
	end 
	if (_VIFONCE026[TeamName] == 0 and (G_MakeDefectorAnAlly == 1)) then  -- "ifonce" #26
	
	_VIFONCE026[TeamName] = 1 --created,set;
	KAS_TeamAttributesSet(TeamName, 256)    --kasfTeamAttributesSet(256)
	end 
	
end 


--
--  "initialize" code for Mission12 Defector HyperspaceOut state
--
function Init_Mission12_Defector_HyperspaceOut(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	KAS_SetHidden(TeamName, 1)    --kasfHideShips((&kasThisTeamPtr->shipList))
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	
end 


--
--  "watch" code for Mission12 Defector HyperspaceOut state
--
function Watch_Mission12_Defector_HyperspaceOut(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	if (G_ACT3HasBegun == 1) then 
	
	--kasJump("HyperspaceIn")
	--KASRule_Remove("FSM_Mission12_Defector", "Watch_Mission12_Defector_HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_Defector_HyperspaceIn", "Watch_Mission12_Defector_HyperspaceOut")
	Init_Mission12_Defector_HyperspaceIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Defector HyperspaceIn state
--
function Init_Mission12_Defector_HyperspaceIn(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	KAS_TeamHyperspaceIn(TeamName, "DefectorIN")    --kasfTeamHyperspaceIn(kasVectorPtr("DefectorIN"))
	KASTimer_Start(TimerID_G_DefectorHasHyperspacedIn, 14)
	KASTimer_Start(TimerID_G_FocusOnDefectorNow, 19)
	KASTimer_Start(TimerID_G_ChaseDefectorsComeOnIn, 1)
	
end 


--
--  "watch" code for Mission12 Defector HyperspaceIn state
--
function Watch_Mission12_Defector_HyperspaceIn(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	if (KASTimer_IsExpired(TimerID_G_DefectorHasHyperspacedIn) ~= 0) then 
	
	--kasJump("GetToPlayerMothership")
	--KASRule_Remove("FSM_Mission12_Defector", "Watch_Mission12_Defector_HyperspaceIn")
	KASRule_Add(TeamName, "Watch_Mission12_Defector_GetToPlayerMothership", "Watch_Mission12_Defector_HyperspaceIn")
	Init_Mission12_Defector_GetToPlayerMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Defector GetToPlayerMothership state
--
function Init_Mission12_Defector_GetToPlayerMothership(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	SobGroup_FollowPath(TeamName, "DefectorSAFE", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("DefectorSAFE"))
	
end 


--
--  "watch" code for Mission12 Defector GetToPlayerMothership state
--
function Watch_Mission12_Defector_GetToPlayerMothership(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	if (_VIFONCE027[TeamName] == 0 and (SobGroup_GetNextPathPoint(TeamName) == 0)) then  -- "ifonce" #27    --kasfPathNextPoint()
	
	_VIFONCE027[TeamName] = 1 --created,set;
	G_DefectorIsReadyToLeave = 1 --created,set
	--kasJump("WaitToHyperspaceOut")
	--KASRule_Remove("FSM_Mission12_Defector", "Watch_Mission12_Defector_GetToPlayerMothership")
	KASRule_Add(TeamName, "Watch_Mission12_Defector_WaitToHyperspaceOut", "Watch_Mission12_Defector_GetToPlayerMothership")
	Init_Mission12_Defector_WaitToHyperspaceOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 Defector WaitToHyperspaceOut state
--
function Init_Mission12_Defector_WaitToHyperspaceOut(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	
end 


--
--  "watch" code for Mission12 Defector WaitToHyperspaceOut state
--
function Watch_Mission12_Defector_WaitToHyperspaceOut(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	
end 


--
--  "initialize" code for Mission12 Defector HyperspaceOut2 state
--
function Init_Mission12_Defector_HyperspaceOut2(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("NullState")
	KASRule_Add(TeamName, "Watch_Mission12_Defector_NullState", "Init_Mission12_Defector_HyperspaceOut2")
	Init_Mission12_Defector_NullState(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 Defector HyperspaceOut2 state
--
function Watch_Mission12_Defector_HyperspaceOut2(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	
end 


--
--  "initialize" code for Mission12 Defector NullState state
--
function Init_Mission12_Defector_NullState(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	
end 


--
--  "watch" code for Mission12 Defector NullState state
--
function Watch_Mission12_Defector_NullState(TeamName)
	--FSM: FSM_Mission12_Defector
	--TeamName = Defector
	
end 


--
--  "initialize" code for Mission12 ChaseDefector FSM
--
function Init_Mission12_ChaseDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	SobGroup_SetHealth(TeamName, 200 / 100)    --kasfTeamSetPercentDamaged(200)
	SobGroup_SetDamageMultiplier("ChaseDestroyer", 200 / 100)    --kasfShipsSetDamageFactor(kasAITeamShipsPtr("ChaseDestroyer"), 200)
	SobGroup_SetDamageMultiplier("ChaseFrigate", 200 / 100)    --kasfShipsSetDamageFactor(kasAITeamShipsPtr("ChaseFrigate"), 200)
	SobGroup_SetDamageMultiplier("ChaseSupport", 200 / 100)    --kasfShipsSetDamageFactor(kasAITeamShipsPtr("ChaseSupport"), 200)
	SobGroup_SetDamageMultiplier("ChaseInt", 200 / 100)    --kasfShipsSetDamageFactor(kasAITeamShipsPtr("ChaseInt"), 200)
	--kasJump("WaitToHyperspace")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_WaitToHyperspace", "Init_Mission12_ChaseDefector")
	Init_Mission12_ChaseDefector_WaitToHyperspace(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 ChaseDefector FSM
--
function Watch_Mission12_ChaseDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	
end 


--
--  "initialize" code for Mission12 ChaseDefector WaitToHyperspace state
--
function Init_Mission12_ChaseDefector_WaitToHyperspace(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (_VIFONCE028[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #28
	
	_VIFONCE028[TeamName] = 1 --created,set;
	KASTimer_Start(TimerID_G_WaitToHyperspaceOut, 3)
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	SobGroup_DockSobGroupInstant(TeamName, "ChaseSupport")    --kasfDockInstant(kasAITeamPtr("ChaseSupport"))
	--kasJump("WaitToLaunch")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_WaitToLaunch", "Init_Mission12_ChaseDefector_WaitToHyperspace")
	Init_Mission12_ChaseDefector_WaitToLaunch(TeamName)
	return
	end 
	if ((KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))    --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	end 
	
end 


--
--  "watch" code for Mission12 ChaseDefector WaitToHyperspace state
--
function Watch_Mission12_ChaseDefector_WaitToHyperspace(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToHyperspace")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_WaitToHyperspace")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KASTimer_IsExpired(TimerID_G_WaitToHyperspaceOut) ~= 0) then 
	
	--kasJump("HyperspaceOut")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToHyperspace")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_HyperspaceOut", "Watch_Mission12_ChaseDefector_WaitToHyperspace")
	Init_Mission12_ChaseDefector_HyperspaceOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector HyperspaceOut state
--
function Init_Mission12_ChaseDefector_HyperspaceOut(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	
end 


--
--  "watch" code for Mission12 ChaseDefector HyperspaceOut state
--
function Watch_Mission12_ChaseDefector_HyperspaceOut(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KASTimer_IsExpired(TimerID_G_ChaseDefectorsComeOnIn) ~= 0) then 
	
	if (_VIFONCE029[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #29
	
	_VIFONCE029[TeamName] = 1 --created,set;
	KASTimer_Start(TimerID_G_DestroyerComeOnIn, 4)
	KASTimer_Start(TimerID_G_FrigateComeOnIn, 7)
	KASTimer_Start(TimerID_G_SupportComeOnIn, 8)
	KASTimer_Start(TimerID_G_IntComeOnIn, 25)
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (KASTimer_IsExpired(TimerID_G_DestroyerComeOnIn) ~= 0) then 
	
	KAS_TeamHyperspaceIn(TeamName, "DestroyerIN")    --kasfTeamHyperspaceIn(kasVectorPtr("DestroyerIN"))
	KASTimer_Start(TimerID_G_DestroyerIsIn, 15)
	--kasJump("WaitToAttack")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_WaitToAttack", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	Init_Mission12_ChaseDefector_WaitToAttack(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (KASTimer_IsExpired(TimerID_G_FrigateComeOnIn) ~= 0) then 
	
	KAS_TeamHyperspaceIn(TeamName, "FrigateIN")    --kasfTeamHyperspaceIn(kasVectorPtr("FrigateIN"))
	KASTimer_Start(TimerID_G_FrigateIsIn, 15)
	--kasJump("WaitToAttack")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_WaitToAttack", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	Init_Mission12_ChaseDefector_WaitToAttack(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))
	
	if (KASTimer_IsExpired(TimerID_G_SupportComeOnIn) ~= 0) then 
	
	KAS_TeamHyperspaceIn(TeamName, "SupportIN")    --kasfTeamHyperspaceIn(kasVectorPtr("SupportIN"))
	KASTimer_Start(TimerID_G_SupportFrigateIsIn, 15)
	KASTimer_Start(TimerID_G_TellInterceptorsToLaunch, 45)
	--kasJump("WaitToAttack")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_WaitToAttack", "Watch_Mission12_ChaseDefector_HyperspaceOut")
	Init_Mission12_ChaseDefector_WaitToAttack(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector WaitToAttack state
--
function Init_Mission12_ChaseDefector_WaitToAttack(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	
end 


--
--  "watch" code for Mission12 ChaseDefector WaitToAttack state
--
function Watch_Mission12_ChaseDefector_WaitToAttack(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_WaitToAttack")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (KASTimer_IsExpired(TimerID_G_DestroyerIsIn) ~= 0) then 
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (KASTimer_IsExpired(TimerID_G_FrigateIsIn) ~= 0) then 
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))
	
	if (KASTimer_IsExpired(TimerID_G_SupportFrigateIsIn) ~= 0) then 
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_WaitToAttack")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector AttackDefector state
--
function Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	end 
	if ((KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))    --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	end 
	KAS_Attack(TeamName, "Defector")    --kasfAttack(kasAITeamShipsPtr("Defector"))
	G_SHIPSDefector = SobGroup_Count("Defector") --created,set    --kasfShipsCount(kasAITeamShipsPtr("Defector"))
	
end 


--
--  "watch" code for Mission12 ChaseDefector AttackDefector state
--
function Watch_Mission12_ChaseDefector_AttackDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("ChaseSupport") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("ChaseSupport"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_Dock", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_Dock(TeamName)
	return
	end 
	end 
	if ((KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))    --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))    --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_Defector"), 1750) ~= 0) then     --kasfNearby(kasShipsVectorPtr("Defector"), 5000)
	
	--kasJump("MoveAttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_MoveAttackDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if (KAS_GetCurrentOrder("ChaseInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseInt"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (KAS_GetCurrentOrder("ChaseDestroyer") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseDestroyer"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingChaseTeam") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingChaseTeam", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingChaseTeam", "GrowSelection_AttackingChaseTeam", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingChaseTeam"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingChaseTeam") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackNearby", "Watch_Mission12_ChaseDefector_AttackDefector")
	Init_Mission12_ChaseDefector_AttackNearby(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector MoveAttackDefector state
--
function Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if ((KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))    --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	end 
	KAS_MoveAttack(TeamName, "Defector")    --kasfMoveAttack(kasAITeamShipsPtr("Defector"))
	
end 


--
--  "watch" code for Mission12 ChaseDefector MoveAttackDefector state
--
function Watch_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if (KAS_GetCurrentOrder("ChaseInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseInt"))
	
	--kasJump("MoveAttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_MoveAttackDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (KAS_GetCurrentOrder("ChaseDestroyer") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseDestroyer"))
	
	--kasJump("MoveAttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_MoveAttackDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("MoveAttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_MoveAttackDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("MoveAttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_MoveAttackDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_MoveAttackDefector(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingChaseTeam") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingChaseTeam", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingChaseTeam", "GrowSelection_AttackingChaseTeam", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingChaseTeam"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingChaseTeam") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackNearby", "Watch_Mission12_ChaseDefector_MoveAttackDefector")
	Init_Mission12_ChaseDefector_AttackNearby(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector AttackNearby state
--
function Init_Mission12_ChaseDefector_AttackNearby(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	KAS_FillShipsByClass_Normal("GrowSelection_ChaseNearbyFighters", "GrowSelection_AttackingChaseTeam", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("ChaseNearbyFighters"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_ChaseNearbyFrigates", "GrowSelection_AttackingChaseTeam", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("ChaseNearbyFrigates"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_ChaseNearbyCorvettes", "GrowSelection_AttackingChaseTeam", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("ChaseNearbyCorvettes"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Corvette")
	KAS_FillShipsByClass_Normal("GrowSelection_ChaseNearbyDestroyers", "GrowSelection_AttackingChaseTeam", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("ChaseNearbyDestroyers"), kasGrowSelectionPtr("AttackingChaseTeam"), "CLASS_Destroyer")
	if (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (SobGroup_Count("GrowSelection_ChaseNearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	
	KAS_MoveAttack(TeamName, "GrowSelection_ChaseNearbyDestroyers")    --kasfMoveAttack(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	
	KAS_MoveAttack(TeamName, "GrowSelection_ChaseNearbyFrigates")    --kasfMoveAttack(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyFighters")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_AttackingChaseTeam") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	KAS_Attack(TeamName, "GrowSelection_AttackingChaseTeam")    --kasfAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	end 
	elseif ((KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) or (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0)) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))    --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (SobGroup_Count("GrowSelection_ChaseNearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	
	KAS_MoveAttack(TeamName, "GrowSelection_ChaseNearbyFrigates")    --kasfMoveAttack(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	
	KAS_MoveAttack(TeamName, "GrowSelection_ChaseNearbyDestroyers")    --kasfMoveAttack(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyFighters")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_AttackingChaseTeam") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	KAS_Attack(TeamName, "GrowSelection_AttackingChaseTeam")    --kasfAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if (SobGroup_Count("GrowSelection_ChaseNearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFighters"))
	
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyFighters")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyFighters"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyFrigates")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyFrigates"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyDestroyers") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyDestroyers")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyDestroyers"))
	elseif (SobGroup_Count("GrowSelection_ChaseNearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_Attack(TeamName, "GrowSelection_ChaseNearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("ChaseNearbyCorvettes"))
	elseif (SobGroup_Count("GrowSelection_AttackingChaseTeam") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	KAS_SetFormation(TeamName, "Claw")    --kasfFormationClaw()
	KAS_Attack(TeamName, "GrowSelection_AttackingChaseTeam")    --kasfAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	end 
	end 
	
end 


--
--  "watch" code for Mission12 ChaseDefector AttackNearby state
--
function Watch_Mission12_ChaseDefector_AttackNearby(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if ((KAS_TeamFuelLowest(TeamName) < 25) and (SobGroup_Count("ChaseSupport") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("ChaseSupport"))    --kasfTeamFuelLowest()
	
	--kasJump("Dock")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_Dock", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_Dock(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	if (KAS_GetCurrentOrder("ChaseInt") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseInt"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseDestroyer") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseDestroyer"))
	
	if (KAS_GetCurrentOrder("ChaseDestroyer") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseDestroyer"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseFrigate") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseFrigate"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "ChaseSupport") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseSupport"))
	
	if (KAS_GetCurrentOrder("ChaseFrigate") ~= 2) then     --kasfShipsOrder(kasAITeamShipsPtr("ChaseFrigate"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingChaseTeam") == 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingChaseTeam"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_AttackNearby")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector Dock state
--
function Init_Mission12_ChaseDefector_Dock(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	SobGroup_DockSobGroupAndStayDocked(TeamName, "ChaseSupport")    --kasfDockStay(kasAITeamPtr("ChaseSupport"))
	
end 


--
--  "watch" code for Mission12 ChaseDefector Dock state
--
function Watch_Mission12_ChaseDefector_Dock(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_Dock")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("LaunchInts")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_LaunchInts", "Watch_Mission12_ChaseDefector_Dock")
	Init_Mission12_ChaseDefector_LaunchInts(TeamName)
	return
	end 
	if (SobGroup_Count("ChaseSupport") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("ChaseSupport"))
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_Dock")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_Dock")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector WaitToLaunch state
--
function Init_Mission12_ChaseDefector_WaitToLaunch(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	
end 


--
--  "watch" code for Mission12 ChaseDefector WaitToLaunch state
--
function Watch_Mission12_ChaseDefector_WaitToLaunch(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToLaunch")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_WaitToLaunch")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_TellInterceptorsToLaunch) ~= 0) then 
	
	if (KAS_TeamNamesEqual(TeamName, "ChaseInt") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("ChaseInt"))
	
	--kasJump("LaunchInts")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_WaitToLaunch")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_LaunchInts", "Watch_Mission12_ChaseDefector_WaitToLaunch")
	Init_Mission12_ChaseDefector_LaunchInts(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector LaunchInts state
--
function Init_Mission12_ChaseDefector_LaunchInts(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission12 ChaseDefector LaunchInts state
--
function Watch_Mission12_ChaseDefector_LaunchInts(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_LaunchInts")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_NullState", "Watch_Mission12_ChaseDefector_LaunchInts")
	Init_Mission12_ChaseDefector_NullState(TeamName)
	return
	end 
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("AttackDefector")
	--KASRule_Remove("FSM_Mission12_ChaseDefector", "Watch_Mission12_ChaseDefector_LaunchInts")
	KASRule_Add(TeamName, "Watch_Mission12_ChaseDefector_AttackDefector", "Watch_Mission12_ChaseDefector_LaunchInts")
	Init_Mission12_ChaseDefector_AttackDefector(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 ChaseDefector NullState state
--
function Init_Mission12_ChaseDefector_NullState(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	
end 


--
--  "watch" code for Mission12 ChaseDefector NullState state
--
function Watch_Mission12_ChaseDefector_NullState(TeamName)
	--FSM: FSM_Mission12_ChaseDefector
	--TeamName = "ChaseDestroyer"
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch FSM
--
function Init_Mission12_StrikeTeamDispatch(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	TimeBetweenLaunches[TeamName] = 205 --created,set
	INTERCEPTORProductionTime[TeamName] = 200 --created,set
	BOMBERProductionTime[TeamName] = 200 --created,set
	MGProductionTime[TeamName] = 200 --created,set
	GWProductionTime[TeamName] = 200 --created,set
	CGProductionTime[TeamName] = 200 --created,set
	--kasJump("WaitForACT2")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_WaitForACT2", "Init_Mission12_StrikeTeamDispatch")
	Init_Mission12_StrikeTeamDispatch_WaitForACT2(TeamName)
	return
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch FSM
--
function Watch_Mission12_StrikeTeamDispatch(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if (_VIFONCE030[TeamName] == 0 and (G_ACT3HasBegun == 1)) then  -- "ifonce" #30
	
	_VIFONCE030[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_NullState", "Watch_Mission12_StrikeTeamDispatch")
	Init_Mission12_StrikeTeamDispatch_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch WaitForACT2 state
--
function Init_Mission12_StrikeTeamDispatch_WaitForACT2(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch WaitForACT2 state
--
function Watch_Mission12_StrikeTeamDispatch_WaitForACT2(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((G_ACT2HasBegun == 1) and (G_STRIntScoutREADY == 1) and (G_STRIntIntREADY == 1)) then 
	
	--kasJump("BeginSTRInterceptors")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_WaitForACT2")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRInterceptors", "Watch_Mission12_StrikeTeamDispatch_WaitForACT2")
	Init_Mission12_StrikeTeamDispatch_BeginSTRInterceptors(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch BeginSTRInterceptors state
--
function Init_Mission12_StrikeTeamDispatch_BeginSTRInterceptors(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	G_STRInterceptorsLAUNCH = 1 --created,set
	KASTimer_Start(LaunchNextTeam[TeamName], (TimeBetweenLaunches[TeamName] - BOMBERProductionTime[TeamName]))
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch BeginSTRInterceptors state
--
function Watch_Mission12_StrikeTeamDispatch_BeginSTRInterceptors(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((KASTimer_IsExpired(LaunchNextTeam[TeamName]) ~= 0) and (G_STRBomberATREADY == 1) and (G_STRBomberHCREADY == 1)) then 
	
	KASTimer_End(LaunchNextTeam[TeamName])
	--kasJump("BeginSTRBombers")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_BeginSTRInterceptors")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRBombers", "Watch_Mission12_StrikeTeamDispatch_BeginSTRInterceptors")
	Init_Mission12_StrikeTeamDispatch_BeginSTRBombers(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch BeginSTRBombers state
--
function Init_Mission12_StrikeTeamDispatch_BeginSTRBombers(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	G_STRBombersLAUNCH = 1 --created,set
	KASTimer_Start(LaunchNextTeam[TeamName], (TimeBetweenLaunches[TeamName] - MGProductionTime[TeamName]))
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch BeginSTRBombers state
--
function Watch_Mission12_StrikeTeamDispatch_BeginSTRBombers(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((KASTimer_IsExpired(LaunchNextTeam[TeamName]) ~= 0) and (G_STRMGMGREADY == 1) and (G_STRMGSFREADY == 1)) then 
	
	KASTimer_End(LaunchNextTeam[TeamName])
	--kasJump("BeginSTRMGs")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_BeginSTRBombers")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRMGs", "Watch_Mission12_StrikeTeamDispatch_BeginSTRBombers")
	Init_Mission12_StrikeTeamDispatch_BeginSTRMGs(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch BeginSTRMGs state
--
function Init_Mission12_StrikeTeamDispatch_BeginSTRMGs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	G_STRMGLAUNCH = 1 --created,set
	KASTimer_Start(LaunchNextTeam[TeamName], (TimeBetweenLaunches[TeamName] - GWProductionTime[TeamName]))
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch BeginSTRMGs state
--
function Watch_Mission12_StrikeTeamDispatch_BeginSTRMGs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((KASTimer_IsExpired(LaunchNextTeam[TeamName]) ~= 0) and (G_STRGWIonREADY == 1) and (G_STRGWGravREADY == 1)) then 
	
	KASTimer_End(LaunchNextTeam[TeamName])
	--kasJump("BeginSTRGWs")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_BeginSTRMGs")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRGWs", "Watch_Mission12_StrikeTeamDispatch_BeginSTRMGs")
	Init_Mission12_StrikeTeamDispatch_BeginSTRGWs(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch BeginSTRGWs state
--
function Init_Mission12_StrikeTeamDispatch_BeginSTRGWs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	G_STRGWLAUNCH = 1 --created,set
	KASTimer_Start(LaunchNextTeam[TeamName], (TimeBetweenLaunches[TeamName] - CGProductionTime[TeamName]))
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch BeginSTRGWs state
--
function Watch_Mission12_StrikeTeamDispatch_BeginSTRGWs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((KASTimer_IsExpired(LaunchNextTeam[TeamName]) ~= 0) and (G_STRCGIonREADY == 1) and (G_STRCGCloakREADY == 1)) then 
	
	KASTimer_End(LaunchNextTeam[TeamName])
	--kasJump("BeginSTRCGs")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_BeginSTRGWs")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRCGs", "Watch_Mission12_StrikeTeamDispatch_BeginSTRGWs")
	Init_Mission12_StrikeTeamDispatch_BeginSTRCGs(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch BeginSTRCGs state
--
function Init_Mission12_StrikeTeamDispatch_BeginSTRCGs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	G_STRCGLAUNCH = 1 --created,set
	KASTimer_Start(LaunchNextTeam[TeamName], (TimeBetweenLaunches[TeamName] - INTERCEPTORProductionTime[TeamName]))
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch BeginSTRCGs state
--
function Watch_Mission12_StrikeTeamDispatch_BeginSTRCGs(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	if ((KASTimer_IsExpired(LaunchNextTeam[TeamName]) ~= 0) and (G_STRIntScoutREADY == 1) and (G_STRIntIntREADY == 1)) then 
	
	KASTimer_End(LaunchNextTeam[TeamName])
	--kasJump("BeginSTRInterceptors")
	--KASRule_Remove("FSM_Mission12_StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch_BeginSTRCGs")
	KASRule_Add(TeamName, "Watch_Mission12_StrikeTeamDispatch_BeginSTRInterceptors", "Watch_Mission12_StrikeTeamDispatch_BeginSTRCGs")
	Init_Mission12_StrikeTeamDispatch_BeginSTRInterceptors(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission12 StrikeTeamDispatch NullState state
--
function Init_Mission12_StrikeTeamDispatch_NullState(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	
end 


--
--  "watch" code for Mission12 StrikeTeamDispatch NullState state
--
function Watch_Mission12_StrikeTeamDispatch_NullState(TeamName)
	--FSM: FSM_Mission12_StrikeTeamDispatch
	--TeamName = StrikeTeamDispatch
	
end 


--
--  "initialize" code for Mission12 mission
--
function Init_Mission12(MissionName)
	--FSM: FSM_Mission12
	--MissionName = "Mission12"
	--kasFSMCreate("FleetIntel")
	KASRule_AddFSM("FleetIntel", "Watch_Mission12_FleetIntel", "Init_Mission12")
	Init_Mission12_FleetIntel("FleetIntel")
	--kasFSMCreate("TestTeam")
	KASRule_AddFSM("TestTeam", "Watch_Mission12_TestTeam", "Init_Mission12")
	Init_Mission12_TestTeam("TestTeam")
	--kasFSMCreate("StrikeTeamDispatch")
	KASRule_AddFSM("StrikeTeamDispatch", "Watch_Mission12_StrikeTeamDispatch", "Init_Mission12")
	Init_Mission12_StrikeTeamDispatch("StrikeTeamDispatch")
	--kasFSMCreate("GravWells")
	KASRule_AddFSM("GravwellTeam1", "Watch_Mission12_GravWells", "Init_Mission12")
	Init_Mission12_GravWells("GravwellTeam1")
	--kasFSMCreate("GravWells")
	KASRule_AddFSM("GravwellTeam2", "Watch_Mission12_GravWells", "Init_Mission12")
	Init_Mission12_GravWells("GravwellTeam2")
	--kasFSMCreate("GravWells")
	KASRule_AddFSM("GravwellTeam3", "Watch_Mission12_GravWells", "Init_Mission12")
	Init_Mission12_GravWells("GravwellTeam3")
	--kasFSMCreate("GuardGravWells")
	KASRule_AddFSM("GuardGWTeam1", "Watch_Mission12_GuardGravWells", "Init_Mission12")
	Init_Mission12_GuardGravWells("GuardGWTeam1")
	--kasFSMCreate("GuardGravWells")
	KASRule_AddFSM("GuardGWTeam2", "Watch_Mission12_GuardGravWells", "Init_Mission12")
	Init_Mission12_GuardGravWells("GuardGWTeam2")
	--kasFSMCreate("GuardGravWells")
	KASRule_AddFSM("GuardGWTeam3", "Watch_Mission12_GuardGravWells", "Init_Mission12")
	Init_Mission12_GuardGravWells("GuardGWTeam3")
	--kasFSMCreate("GravWellSupport")
	KASRule_AddFSM("GW1Support", "Watch_Mission12_GravWellSupport", "Init_Mission12")
	Init_Mission12_GravWellSupport("GW1Support")
	--kasFSMCreate("GravWellSupport")
	KASRule_AddFSM("GW2Support", "Watch_Mission12_GravWellSupport", "Init_Mission12")
	Init_Mission12_GravWellSupport("GW2Support")
	--kasFSMCreate("GravWellSupport")
	KASRule_AddFSM("GW3Support", "Watch_Mission12_GravWellSupport", "Init_Mission12")
	Init_Mission12_GravWellSupport("GW3Support")
	--kasFSMCreate("AIShips")
	KASRule_AddFSM("AICollector", "Watch_Mission12_AIShips", "Init_Mission12")
	Init_Mission12_AIShips("AICollector")
	--kasFSMCreate("AIShips")
	KASRule_AddFSM("AIController", "Watch_Mission12_AIShips", "Init_Mission12")
	Init_Mission12_AIShips("AIController")
	--kasFSMCreate("Carrier")
	KASRule_AddFSM("Carrier", "Watch_Mission12_Carrier", "Init_Mission12")
	Init_Mission12_Carrier("Carrier")
	--kasFSMCreate("GuardCarrier")
	KASRule_AddFSM("GuardCarrierIon", "Watch_Mission12_GuardCarrier", "Init_Mission12")
	Init_Mission12_GuardCarrier("GuardCarrierIon")
	--kasFSMCreate("GuardCarrier")
	KASRule_AddFSM("GuardCarrierCorv", "Watch_Mission12_GuardCarrier", "Init_Mission12")
	Init_Mission12_GuardCarrier("GuardCarrierCorv")
	--kasFSMCreate("GuardCarrier")
	KASRule_AddFSM("GuardCarrierDef", "Watch_Mission12_GuardCarrier", "Init_Mission12")
	Init_Mission12_GuardCarrier("GuardCarrierDef")
	--kasFSMCreate("Cruiser")
	KASRule_AddFSM("Cruiser", "Watch_Mission12_Cruiser", "Init_Mission12")
	Init_Mission12_Cruiser("Cruiser")
	--kasFSMCreate("GuardCruiser")
	KASRule_AddFSM("GuardCruiserDef", "Watch_Mission12_GuardCruiser", "Init_Mission12")
	Init_Mission12_GuardCruiser("GuardCruiserDef")
	--kasFSMCreate("GuardCruiser")
	KASRule_AddFSM("GuardCruiserCorv", "Watch_Mission12_GuardCruiser", "Init_Mission12")
	Init_Mission12_GuardCruiser("GuardCruiserCorv")
	--kasFSMCreate("GuardCruiser")
	KASRule_AddFSM("GuardCruiserIon", "Watch_Mission12_GuardCruiser", "Init_Mission12")
	Init_Mission12_GuardCruiser("GuardCruiserIon")
	--kasFSMCreate("STRInterceptors")
	KASRule_AddFSM("STRIntScout", "Watch_Mission12_STRInterceptors", "Init_Mission12")
	Init_Mission12_STRInterceptors("STRIntScout")
	--kasFSMCreate("STRInterceptors")
	KASRule_AddFSM("STRIntInt", "Watch_Mission12_STRInterceptors", "Init_Mission12")
	Init_Mission12_STRInterceptors("STRIntInt")
	--kasFSMCreate("STRBombers")
	KASRule_AddFSM("STRBomberAT", "Watch_Mission12_STRBombers", "Init_Mission12")
	Init_Mission12_STRBombers("STRBomberAT")
	--kasFSMCreate("STRBombers")
	KASRule_AddFSM("STRBomberHC", "Watch_Mission12_STRBombers", "Init_Mission12")
	Init_Mission12_STRBombers("STRBomberHC")
	--kasFSMCreate("STRMG")
	KASRule_AddFSM("STRMGMG", "Watch_Mission12_STRMG", "Init_Mission12")
	Init_Mission12_STRMG("STRMGMG")
	--kasFSMCreate("STRMG")
	KASRule_AddFSM("STRMGSF", "Watch_Mission12_STRMG", "Init_Mission12")
	Init_Mission12_STRMG("STRMGSF")
	--kasFSMCreate("STRGW")
	KASRule_AddFSM("STRGWIon", "Watch_Mission12_STRGW", "Init_Mission12")
	Init_Mission12_STRGW("STRGWIon")
	--kasFSMCreate("STRGW")
	KASRule_AddFSM("STRGWGrav", "Watch_Mission12_STRGW", "Init_Mission12")
	Init_Mission12_STRGW("STRGWGrav")
	--kasFSMCreate("STRCG")
	KASRule_AddFSM("STRCGIon", "Watch_Mission12_STRCG", "Init_Mission12")
	Init_Mission12_STRCG("STRCGIon")
	--kasFSMCreate("STRCG")
	KASRule_AddFSM("STRCGCloak", "Watch_Mission12_STRCG", "Init_Mission12")
	Init_Mission12_STRCG("STRCGCloak")
	--kasFSMCreate("Defector")
	KASRule_AddFSM("Defector", "Watch_Mission12_Defector", "Init_Mission12")
	Init_Mission12_Defector("Defector")
	--kasFSMCreate("ChaseDefector")
	KASRule_AddFSM("ChaseDestroyer", "Watch_Mission12_ChaseDefector", "Init_Mission12")
	Init_Mission12_ChaseDefector("ChaseDestroyer")
	--kasFSMCreate("ChaseDefector")
	KASRule_AddFSM("ChaseFrigate", "Watch_Mission12_ChaseDefector", "Init_Mission12")
	Init_Mission12_ChaseDefector("ChaseFrigate")
	--kasFSMCreate("ChaseDefector")
	KASRule_AddFSM("ChaseSupport", "Watch_Mission12_ChaseDefector", "Init_Mission12")
	Init_Mission12_ChaseDefector("ChaseSupport")
	--kasFSMCreate("ChaseDefector")
	KASRule_AddFSM("ChaseInt", "Watch_Mission12_ChaseDefector", "Init_Mission12")
	Init_Mission12_ChaseDefector("ChaseInt")
	KAS_BuildControl(1)    --kasfBuildControl(1)
	KAS_EnableAllAIFeatures()    --kasfEnableAllAIFeatures()
	KAS_HW1CPUDisableAIFeature(1, 1)    --kasfDisableAIFeature(1, 1)
	KAS_HW1CPUDisableAIFeature(2, 1)    --kasfDisableAIFeature(2, 1)
	KAS_HW1CPUDisableAIFeature(10, 1)    --kasfDisableAIFeature(10, 1)
	KAS_HW1CPUDisableAIFeature(20, 1)    --kasfDisableAIFeature(20, 1)
	KAS_HW1CPUDisableAIFeature(40, 1)    --kasfDisableAIFeature(40, 1)
	KAS_HW1CPUDisableAIFeature(100, 1)    --kasfDisableAIFeature(100, 1)
	KAS_HW1CPUDisableAIFeature(200, 1)    --kasfDisableAIFeature(200, 1)
	KAS_CampaignAutoSave(12, "$61600")    --kasfSaveLevel(12, LSTRING_Savegame[strCurLanguage])
	
end 


--
--  "watch" code for Mission12 mission
--
function Watch_Mission12(MissionName)
	--FSM: FSM_Mission12
	--MissionName = "Mission12"
	if (_VIFONCE031 == 0 and (1 ~= 0)) then  -- "ifonce" #31
	
	_VIFONCE031 = 1 --created,set;
	KASTimer_Start(TimerID_LocationCardTimer, 1)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_LocationCardTimer) ~= 0) then 
	
	singlePlayerLocationCard("$61601", 5)    --kasfLocationCard(5000, LSTRING_LocationCard[strCurLanguage])
	end 
	if (_VIFONCE032 == 0 and ((SobGroup_Count("GuardGWTeam2") == 0) or (SobGroup_Count("GuardGWTeam3") == 0))) then  -- "ifonce" #32    --kasfShipsCount(kasAITeamShipsPtr("GuardGWTeam3"))    --kasfShipsCount(kasAITeamShipsPtr("GuardGWTeam2"))
	
	_VIFONCE032 = 1 --created,set;
	G_ACT2HasBegun = 1 --created,set
	end 
	if (_VIFONCE033 == 0 and (1 ~= 0)) then  -- "ifonce" #33
	
	_VIFONCE033 = 1 --created,set;
	G_TOTALCarrierAttackersACT1 = 0 --created,set
	end 
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierFightersACT1", "GrowSelection_CarrierAttackedACT1", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierFightersACT1"), kasGrowSelectionPtr("CarrierAttackedACT1"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierCorvettesACT1", "GrowSelection_CarrierAttackedACT1", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierCorvettesACT1"), kasGrowSelectionPtr("CarrierAttackedACT1"), "CLASS_Corvette")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierFrigatesACT1", "GrowSelection_CarrierAttackedACT1", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierFrigatesACT1"), kasGrowSelectionPtr("CarrierAttackedACT1"), "CLASS_Frigate")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierDestroyersACT1", "GrowSelection_CarrierAttackedACT1", "SmallCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierDestroyersACT1"), kasGrowSelectionPtr("CarrierAttackedACT1"), "CLASS_Destroyer")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierCarriersACT1", "GrowSelection_CarrierAttackedACT1", "BigCapitalShip")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierCarriersACT1"), kasGrowSelectionPtr("CarrierAttackedACT1"), "CLASS_Carrier")
	G_TOTALCarrierAttackersACT1 = 62 * (SobGroup_Count("GrowSelection_CarrierFightersACT1")) + 222 * (SobGroup_Count("GrowSelection_CarrierCorvettesACT1")) + 612 * (SobGroup_Count("GrowSelection_CarrierFrigatesACT1")) + 1425 * (SobGroup_Count("GrowSelection_CarrierDestroyersACT1")) + 2000 * (SobGroup_Count("GrowSelection_CarrierCarriersACT1")) --set    --kasfShipsCount(kasGrowSelectionPtr("CarrierCarriersACT1"))    --kasfShipsCount(kasGrowSelectionPtr("CarrierDestroyersACT1"))    --kasfShipsCount(kasGrowSelectionPtr("CarrierFrigatesACT1"))    --kasfShipsCount(kasGrowSelectionPtr("CarrierCorvettesACT1"))    --kasfShipsCount(kasGrowSelectionPtr("CarrierFightersACT1"))
	if (_VIFONCE034 == 0 and ((G_TOTALCarrierAttackersACT1 > 1000) and (G_ACT2HasBegun == 0))) then  -- "ifonce" #34
	
	_VIFONCE034 = 1 --created,set;
	G_ACT2HasBegun = 1 --created,set
	end 
	if (_VIFONCE035 == 0 and ((G_CarrierLowOnHealth == 1) and (G_ACT2HasBegun == 0))) then  -- "ifonce" #35
	
	_VIFONCE035 = 1 --created,set;
	G_ACT2HasBegun = 1 --created,set
	end 
	if (_VIFONCE036 == 0 and (SobGroup_Count("Cruiser") == 0)) then  -- "ifonce" #36    --kasfShipsCount(kasAITeamShipsPtr("Cruiser"))
	
	_VIFONCE036 = 1 --created,set;
	G_ACT3HasBegun = 1 --created,set
	end 
	if (_VIFONCE037 == 0 and (1 ~= 0)) then  -- "ifonce" #37
	
	_VIFONCE037 = 1 --created,set;
	KASTimer_Start(TimerID_G_FCHyperspaceSuccessful, 5)
	end 
	if (_VIFONCE038 == 0 and (1 ~= 0)) then  -- "ifonce" #38
	
	_VIFONCE038 = 1 --created,set;
	KASTimer_Start(TimerID_G_UnderAttackTimer, 30)
	end 
	if (_VIFONCE039 == 0 and ((G_UnderAttackHasPlayed == 1) and ((KAS_PlayerHasResearch(0, "GuidedMissiles") == 0) and (Player_CanResearch(0, "GuidedMissiles") == 0)))) then  -- "ifonce" #39    --kasfCanPlayerResearch("MissileWeapons")    --kasfDoesPlayerHave("MissileWeapons")
	
	_VIFONCE039 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayMissileTech, 10)
	end 
	if (_VIFONCE040 == 0 and (1 ~= 0)) then  -- "ifonce" #40
	
	_VIFONCE040 = 1 --created,set;
	KASTimer_Start(TimerID_G_TechnologyTimer, RandomIntRange(180, 250))    --kasfRandom(180, 250)
	end 
	if (_VIFONCE041 == 0 and (G_FleetIntelIntroHasPlayed == 1)) then  -- "ifonce" #41
	
	_VIFONCE041 = 1 --created,set;
	KASObjective_Add(ObjectiveID_DestroyField, "$61602", OT_Primary)    --kasfObjectiveCreate("DestroyField", LSTRING_FICaughtInFieldTASKBAR[strCurLanguage], LSTRING_FICaughtInFieldTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyField, "$60837")
	G_DestroyFieldObjectiveCreated = 1 --created,set
	end 
	if (_VIFONCE042 == 0 and ((SobGroup_Count("GravwellTeam1") == 0) and (SobGroup_Count("GravwellTeam2") == 0) and (SobGroup_Count("GravwellTeam3") == 0))) then  -- "ifonce" #42    --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam3"))    --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam2"))    --kasfShipsCount(kasAITeamShipsPtr("GravwellTeam1"))
	
	_VIFONCE042 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_DestroyField, 1)    --kasfObjectiveSet("DestroyField", 1)
	end 
	if (_VIFONCE043 == 0 and (G_UnderAttackHasPlayed == 1)) then  -- "ifonce" #43
	
	_VIFONCE043 = 1 --created,set;
	KASObjective_Add(ObjectiveID_ProtectFleet, "$61603", OT_Primary)    --kasfObjectiveCreate("ProtectFleet", LSTRING_FIUnderAttackTASKBAR[strCurLanguage], LSTRING_FIUnderAttackTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ProtectFleet, "$60838")
	end 
	if (_VIFONCE044 == 0 and (G_ProtectDefectorHasPlayed == 1)) then  -- "ifonce" #44
	
	_VIFONCE044 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ProtectFleet, 1)    --kasfObjectiveSet("ProtectFleet", 1)
	KASObjective_Add(ObjectiveID_ProtectDefector, "$61604", OT_Primary)    --kasfObjectiveCreate("ProtectDefector", LSTRING_FIHelpDefectorTASKBAR[strCurLanguage], LSTRING_FIHelpDefectorTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ProtectDefector, "$60839")
	end 
	if (_VIFONCE045 == 0 and ((KASTimer_IsExpired(TimerID_G_FocusOnDefectorNow) ~= 0) and (SobGroup_Count("Defector") == 0))) then  -- "ifonce" #45    --kasfShipsCount(kasAITeamShipsPtr("Defector"))
	
	_VIFONCE045 = 1 --created,set;
	KAS_MissionFailed()    --kasfMissionFailed()
	end 
	if (_VIFONCE046 == 0 and ((SobGroup_Count("ChaseDestroyer") == 0) and (SobGroup_Count("ChaseFrigate") == 0) and (SobGroup_Count("ChaseSupport") == 0))) then  -- "ifonce" #46    --kasfShipsCount(kasAITeamShipsPtr("ChaseSupport"))    --kasfShipsCount(kasAITeamShipsPtr("ChaseFrigate"))    --kasfShipsCount(kasAITeamShipsPtr("ChaseDestroyer"))
	
	_VIFONCE046 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ProtectDefector, 1)    --kasfObjectiveSet("ProtectDefector", 1)
	KAS_MusicStop(4)    --kasfMusicStop(4)
	KAS_PingRemove("DefectorPing", "$60666")    --kasfPingRemove("DefectorPing")
	end 
	if (_VIFONCE047 == 0 and ((KASObjective_GetState(ObjectiveID_DestroyField) == 1) and (KASObjective_GetState(ObjectiveID_ProtectFleet) == 1) and (KASObjective_GetState(ObjectiveID_ProtectDefector) == 1) and (G_DefectorIsReadyToLeave == 1))) then  -- "ifonce" #47    --kasfObjectiveGet("ProtectDefector")    --kasfObjectiveGet("ProtectFleet")    --kasfObjectiveGet("DestroyField")
	
	_VIFONCE047 = 1 --created,set;
	KASTimer_Start(TimerID_G_AllObjectivesComplete, 4)
	end 
	if (_VIFONCE048 == 0 and (G_DefectorIsOnBoard == 1)) then  -- "ifonce" #48
	
	_VIFONCE048 = 1 --created,set;
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end 
	if (_VIFONCE049 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #49    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE049 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end 
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end 
	if (_VIFONCE050 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #50    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE050 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end 
	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_AllShipsInWorld")
    KASSobGroup_Create("GrowSelection_AttackingChaseTeam")
    KASSobGroup_Create("GrowSelection_AttackingSTRBombers")
    KASSobGroup_Create("GrowSelection_AttackingSTRCGs")
    KASSobGroup_Create("GrowSelection_AttackingSTRGWs")
    KASSobGroup_Create("GrowSelection_AttackingSTRInt")
    KASSobGroup_Create("GrowSelection_AttackingSTRIntInt")
    KASSobGroup_Create("GrowSelection_AttackingSTRIntScout")
    KASSobGroup_Create("GrowSelection_AttackingSTRMGs")
    KASSobGroup_Create("GrowSelection_Capital")
    KASSobGroup_Create("GrowSelection_CarrierAttackedACT1")
    KASSobGroup_Create("GrowSelection_CarrierCarriersACT1")
    KASSobGroup_Create("GrowSelection_CarrierCorvettesACT1")
    KASSobGroup_Create("GrowSelection_CarrierDestroyersACT1")
    KASSobGroup_Create("GrowSelection_CarrierFightersACT1")
    KASSobGroup_Create("GrowSelection_CarrierFrigatesACT1")
    KASSobGroup_Create("GrowSelection_ChaseNearbyCorvettes")
    KASSobGroup_Create("GrowSelection_ChaseNearbyDestroyers")
    KASSobGroup_Create("GrowSelection_ChaseNearbyFighters")
    KASSobGroup_Create("GrowSelection_ChaseNearbyFrigates")
    KASSobGroup_Create("GrowSelection_CruiserFound")
    KASSobGroup_Create("GrowSelection_Defector")
    KASSobGroup_Create("GrowSelection_EntireFleet")
    KASSobGroup_Create("GrowSelection_FIPlayerCorvettes")
    KASSobGroup_Create("GrowSelection_FIPlayerFighters")
    KASSobGroup_Create("GrowSelection_FIPlayerShips")
    KASSobGroup_Create("GrowSelection_FIPlayerStrikeCraft")
    KASSobGroup_Create("GrowSelection_FleetAtMothership")
    KASSobGroup_Create("GrowSelection_FleetDestroyers")
    KASSobGroup_Create("GrowSelection_FleetFrigates")
    KASSobGroup_Create("GrowSelection_FleetNearMothership")
    KASSobGroup_Create("GrowSelection_GW1Capital")
    KASSobGroup_Create("GrowSelection_GW1Corvettes")
    KASSobGroup_Create("GrowSelection_GW1Destroyers")
    KASSobGroup_Create("GrowSelection_GW1EntireFleet")
    KASSobGroup_Create("GrowSelection_GW1Fighters")
    KASSobGroup_Create("GrowSelection_GW1Frigates")
    KASSobGroup_Create("GrowSelection_GW1StrikeCraft")
    KASSobGroup_Create("GrowSelection_GW2Capital")
    KASSobGroup_Create("GrowSelection_GW2Corvettes")
    KASSobGroup_Create("GrowSelection_GW2Destroyers")
    KASSobGroup_Create("GrowSelection_GW2EntireFleet")
    KASSobGroup_Create("GrowSelection_GW2Fighters")
    KASSobGroup_Create("GrowSelection_GW2Frigates")
    KASSobGroup_Create("GrowSelection_GW2StrikeCraft")
    KASSobGroup_Create("GrowSelection_GWCorvettes")
    KASSobGroup_Create("GrowSelection_GWFighters")
    KASSobGroup_Create("GrowSelection_GravWell1Corvettes")
    KASSobGroup_Create("GrowSelection_GravWell1EVERYONE")
    KASSobGroup_Create("GrowSelection_GravWell1Fighters")
    KASSobGroup_Create("GrowSelection_GravWell1StrikeCraft")
    KASSobGroup_Create("GrowSelection_GravWell2Corvettes")
    KASSobGroup_Create("GrowSelection_GravWell2EVERYONE")
    KASSobGroup_Create("GrowSelection_GravWell2Fighters")
    KASSobGroup_Create("GrowSelection_GravWell2StrikeCraft")
    KASSobGroup_Create("GrowSelection_GravWell3Corvettes")
    KASSobGroup_Create("GrowSelection_GravWell3EVERYONE")
    KASSobGroup_Create("GrowSelection_GravWell3Fighters")
    KASSobGroup_Create("GrowSelection_GravWell3StrikeCraft")
    KASSobGroup_Create("GrowSelection_Mothership")
    KASSobGroup_Create("GrowSelection_NearbyCorvettes")
    KASSobGroup_Create("GrowSelection_NearbyDestroyers")
    KASSobGroup_Create("GrowSelection_NearbyFrigates")
    KASSobGroup_Create("GrowSelection_PlayerFleet")
    KASSobGroup_Create("GrowSelection_PlayerMothership")
    KASSobGroup_Create("GrowSelection_Resource")
    KASSobGroup_Create("GrowSelection_STRBomFleetATTACK")
    KASSobGroup_Create("GrowSelection_STRBomFleetDestroyers")
    KASSobGroup_Create("GrowSelection_STRBomFleetFrigates")
    KASSobGroup_Create("GrowSelection_STRBomNearbyATTACK")
    KASSobGroup_Create("GrowSelection_STRBomNearbyDestroyers")
    KASSobGroup_Create("GrowSelection_STRBomNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRBomSingleDestroyer")
    KASSobGroup_Create("GrowSelection_STRBomSingleFrigate")
    KASSobGroup_Create("GrowSelection_STRBomWorldATTACK")
    KASSobGroup_Create("GrowSelection_STRBomWorldDestroyers")
    KASSobGroup_Create("GrowSelection_STRBomWorldFrigates")
    KASSobGroup_Create("GrowSelection_STRBomWorldNearbyDes")
    KASSobGroup_Create("GrowSelection_STRBomWorldNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRBomberDestroyer")
    KASSobGroup_Create("GrowSelection_STRBomberFrigates")
    KASSobGroup_Create("GrowSelection_STRCGCapitalTargets")
    KASSobGroup_Create("GrowSelection_STRCGDestroyers")
    KASSobGroup_Create("GrowSelection_STRCGEVERYONE")
    KASSobGroup_Create("GrowSelection_STRCGFleetATTACK")
    KASSobGroup_Create("GrowSelection_STRCGFleetDestroyers")
    KASSobGroup_Create("GrowSelection_STRCGFleetFrigates")
    KASSobGroup_Create("GrowSelection_STRCGFleetProxSensors")
    KASSobGroup_Create("GrowSelection_STRCGFrigates")
    KASSobGroup_Create("GrowSelection_STRCGLookinForProx")
    KASSobGroup_Create("GrowSelection_STRCGNearbyATTACK")
    KASSobGroup_Create("GrowSelection_STRCGNearbyDestroyers")
    KASSobGroup_Create("GrowSelection_STRCGNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRCGSingleDestroyer")
    KASSobGroup_Create("GrowSelection_STRCGSingleFrigate")
    KASSobGroup_Create("GrowSelection_STRCGWorldATTACK")
    KASSobGroup_Create("GrowSelection_STRCGWorldDestroyers")
    KASSobGroup_Create("GrowSelection_STRCGWorldFrigates")
    KASSobGroup_Create("GrowSelection_STRCGWorldNearbyDes")
    KASSobGroup_Create("GrowSelection_STRCGWorldNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRGWCorvettes")
    KASSobGroup_Create("GrowSelection_STRGWEVERYONE")
    KASSobGroup_Create("GrowSelection_STRGWFighters")
    KASSobGroup_Create("GrowSelection_STRGWFleetATTACK")
    KASSobGroup_Create("GrowSelection_STRGWFleetCorvettes")
    KASSobGroup_Create("GrowSelection_STRGWFleetFighters")
    KASSobGroup_Create("GrowSelection_STRGWNearbyATTACK")
    KASSobGroup_Create("GrowSelection_STRGWNearbyCorvettes")
    KASSobGroup_Create("GrowSelection_STRGWNearbyFighters")
    KASSobGroup_Create("GrowSelection_STRGWSingleCorvette")
    KASSobGroup_Create("GrowSelection_STRGWSingleFighter")
    KASSobGroup_Create("GrowSelection_STRGWStrikeCraft")
    KASSobGroup_Create("GrowSelection_STRGWWorldATTACK")
    KASSobGroup_Create("GrowSelection_STRGWWorldCorvettes")
    KASSobGroup_Create("GrowSelection_STRGWWorldFighters")
    KASSobGroup_Create("GrowSelection_STRGWWorldNearbyCorv")
    KASSobGroup_Create("GrowSelection_STRGWWorldNearbyFighters")
    KASSobGroup_Create("GrowSelection_STRGWYahooCorvettes")
    KASSobGroup_Create("GrowSelection_STRGWYahooFighters")
    KASSobGroup_Create("GrowSelection_STRIntFighters")
    KASSobGroup_Create("GrowSelection_STRIntFleetATTACK")
    KASSobGroup_Create("GrowSelection_STRIntFleetFighters")
    KASSobGroup_Create("GrowSelection_STRIntFleetFrigates")
    KASSobGroup_Create("GrowSelection_STRIntFrigates")
    KASSobGroup_Create("GrowSelection_STRIntNearbyATTACK")
    KASSobGroup_Create("GrowSelection_STRIntNearbyFighters")
    KASSobGroup_Create("GrowSelection_STRIntNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRIntSingleFighter")
    KASSobGroup_Create("GrowSelection_STRIntSingleFrigate")
    KASSobGroup_Create("GrowSelection_STRIntWorldATTACK")
    KASSobGroup_Create("GrowSelection_STRIntWorldFighters")
    KASSobGroup_Create("GrowSelection_STRIntWorldFrigates")
    KASSobGroup_Create("GrowSelection_STRIntWorldNearbyFighters")
    KASSobGroup_Create("GrowSelection_STRIntWorldNearbyFrigates")
    KASSobGroup_Create("GrowSelection_STRMGCorvettes")
    KASSobGroup_Create("GrowSelection_STRMGFighters")
    KASSobGroup_Create("GrowSelection_STRMGFleetATTACK")
    KASSobGroup_Create("GrowSelection_STRMGFleetCorvettes")
    KASSobGroup_Create("GrowSelection_STRMGFleetFighters")
    KASSobGroup_Create("GrowSelection_STRMGNearbyATTACK")
    KASSobGroup_Create("GrowSelection_STRMGNearbyCorvettes")
    KASSobGroup_Create("GrowSelection_STRMGNearbyFighters")
    KASSobGroup_Create("GrowSelection_STRMGSingleCorvette")
    KASSobGroup_Create("GrowSelection_STRMGSingleFighter")
    KASSobGroup_Create("GrowSelection_STRMGWorldATTACK")
    KASSobGroup_Create("GrowSelection_STRMGWorldCorvettes")
    KASSobGroup_Create("GrowSelection_STRMGWorldFighters")
    KASSobGroup_Create("GrowSelection_STRMGWorldNearbyCorv")
    KASSobGroup_Create("GrowSelection_STRMGWorldNearbyFighters")
    KASSobGroup_Create("GrowSelection_StrikeCraft")
    KASSobGroup_Create("GrowSelection_ThisIsTheDefector")
    KASSobGroup_CreateIfNotExist("AICollector")
    KASSobGroup_CreateIfNotExist("AIController")
    KASSobGroup_CreateIfNotExist("Carrier")
    KASSobGroup_CreateIfNotExist("ChaseDestroyer")
    KASSobGroup_CreateIfNotExist("ChaseFrigate")
    KASSobGroup_CreateIfNotExist("ChaseInt")
    KASSobGroup_CreateIfNotExist("ChaseSupport")
    KASSobGroup_CreateIfNotExist("Cruiser")
    KASSobGroup_CreateIfNotExist("Defector")
    KASSobGroup_CreateIfNotExist("GW1Support")
    KASSobGroup_CreateIfNotExist("GW2Support")
    KASSobGroup_CreateIfNotExist("GW3Support")
    KASSobGroup_CreateIfNotExist("GravwellTeam1")
    KASSobGroup_CreateIfNotExist("GravwellTeam2")
    KASSobGroup_CreateIfNotExist("GravwellTeam3")
    KASSobGroup_CreateIfNotExist("GuardCarrierCorv")
    KASSobGroup_CreateIfNotExist("GuardCarrierDef")
    KASSobGroup_CreateIfNotExist("GuardCarrierIon")
    KASSobGroup_CreateIfNotExist("GuardCruiserCorv")
    KASSobGroup_CreateIfNotExist("GuardCruiserDef")
    KASSobGroup_CreateIfNotExist("GuardCruiserIon")
    KASSobGroup_CreateIfNotExist("GuardGWTeam1")
    KASSobGroup_CreateIfNotExist("GuardGWTeam2")
    KASSobGroup_CreateIfNotExist("GuardGWTeam3")
    KASSobGroup_CreateIfNotExist("STRBomberAT")
    KASSobGroup_CreateIfNotExist("STRBomberHC")
    KASSobGroup_CreateIfNotExist("STRCGCloak")
    KASSobGroup_CreateIfNotExist("STRCGIon")
    KASSobGroup_CreateIfNotExist("STRGWGrav")
    KASSobGroup_CreateIfNotExist("STRGWIon")
    KASSobGroup_CreateIfNotExist("STRIntInt")
    KASSobGroup_CreateIfNotExist("STRIntScout")
    KASSobGroup_CreateIfNotExist("STRMGMG")
    KASSobGroup_CreateIfNotExist("STRMGSF")

    Sound_SpeechSubtitlePath("speech:missions/Mission12/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;AICollector;AIController;Carrier;ChaseDestroyer;ChaseFrigate;ChaseInt;ChaseSupport;Cruiser;Defector;FleetIntel;GW1Support;GW2Support;GW3Support;GravwellTeam1;GravwellTeam2;GravwellTeam3;GuardCarrierCorv;GuardCarrierDef;GuardCarrierIon;GuardCruiserCorv;GuardCruiserDef;GuardCruiserIon;GuardGWTeam1;GuardGWTeam2;GuardGWTeam3;STRBomberAT;STRBomberHC;STRCGCloak;STRCGIon;STRGWGrav;STRGWIon;STRIntInt;STRIntScout;STRMGMG;STRMGSF;StrikeTeamDispatch;TestTeam;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourSchemeColours(5, {0,0,0}, {0, 0, 0}, "DATA:Badges/Taiidan_red.tga", {0.8,0.40156862745098,0}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourScheme("AICollector", 1)
    KAS_SetColourScheme("AIController", 1)
    KAS_SetColourScheme("Carrier", 1)
    KAS_SetColourScheme("ChaseDestroyer", 5)
    KAS_SetColourScheme("ChaseFrigate", 5)
    KAS_SetColourScheme("ChaseInt", 5)
    KAS_SetColourScheme("ChaseSupport", 5)
    KAS_SetColourScheme("Cruiser", 1)
    KAS_SetColourScheme("Defector", 5)
    KAS_SetColourScheme("GW1Support", 1)
    KAS_SetColourScheme("GW2Support", 1)
    KAS_SetColourScheme("GW3Support", 1)
    KAS_SetColourScheme("GravwellTeam1", 1)
    KAS_SetColourScheme("GravwellTeam2", 1)
    KAS_SetColourScheme("GravwellTeam3", 1)
    KAS_SetColourScheme("GuardCarrierCorv", 1)
    KAS_SetColourScheme("GuardCarrierDef", 1)
    KAS_SetColourScheme("GuardCarrierIon", 1)
    KAS_SetColourScheme("GuardCruiserCorv", 1)
    KAS_SetColourScheme("GuardCruiserDef", 1)
    KAS_SetColourScheme("GuardCruiserIon", 1)
    KAS_SetColourScheme("GuardGWTeam1", 1)
    KAS_SetColourScheme("GuardGWTeam2", 1)
    KAS_SetColourScheme("GuardGWTeam3", 1)
    Player_SetPlayerName(1, "$60664")
    Player_SetPlayerName(2, "$60665")
    Player_SetPlayerName(3, "$60664")

    singlePlayerOnStartOrLoad(12)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(12)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission12", "Watch_Mission12", "OnInit")
    Init_Mission12("Mission12")
    KAS_SetLetterboxStart(1, 5, 0, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A05_mission6and12", MUS_Ambient )
    KAS_SetFormation("ChaseDestroyer", "Broad")
    KAS_SetFormation("ChaseFrigate", "Broad")
    KAS_SetFormation("GW1Support", "Wall")
    KAS_SetFormation("GW2Support", "Wall")
    KAS_SetFormation("GW3Support", "Wall")
    KAS_SetFormation("GuardCarrierCorv", "Delta")
    KAS_SetFormation("GuardCarrierDef", "Sphere")
    KAS_SetFormation("GuardCarrierIon", "Wall")
    KAS_SetFormation("GuardCruiserCorv", "Broad")
    KAS_SetFormation("GuardCruiserDef", "Sphere")
    KAS_SetFormation("GuardCruiserIon", "Wall")
    KAS_SetFormation("GuardGWTeam2", "Wall")
    KAS_SetFormation("GuardGWTeam3", "Wall")
end

