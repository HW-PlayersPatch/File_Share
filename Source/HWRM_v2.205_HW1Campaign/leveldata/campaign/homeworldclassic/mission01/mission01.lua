--
--  Generated\Mission01.c
--
--  Finite state machine routines for "Mission01" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission01.kp by KAS2C Version 2.05
--


--#include "Generated\Mission01.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfForceTaskbar
--kasfSoundEvent
--kasfTutHideNextButton
--kasfTutHideText
--kasfTutNextButtonClicked
--kasfTutSetPointerTargetFERegion
--kasfTutSetTextDisplayBoxToSubtitleRegion


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_BeginInterceptorTrialNOW = 0
G_BeginSalvageTrial = 0
G_BeginScoutTrialFormations = 0
G_BeginScoutTrialTactics = 0
G_BeginTacticsTrial = 0
G_CreateInitialObjectives = 0
G_CreateResearchObj = 0
G_CreateSalvageObjective = 0
G_FIFormationTrialHasPlayed = 0
G_FormationDronesHyperspaceIn = 0
G_FormationTrialRepopulation = 0
G_InterceptorTrialRepopulation = 0
G_NeverCreateTDIntPingAgain = 0
G_OnlyCreateResearchObjOnce = 0
G_PlayFIFormationImmediately = 0
G_PlayedCorvetteChassisRasp = 0
G_PlayedCorvetteChassisUnderwayRasp = 0
G_PlayerHasSalvaged = 0
G_PlayerHasUsedFormation = 0
G_PlayerHasUsedInterceptors = 0
G_PlayerHasUsedTactics = 0
G_ReadyToHYPERSPACE = 0
G_SalvageTrialHasBegun = 0
G_SalvageTrialRepopulation = 0
G_TDFormationGoToWaiting = 0
G_TDInterceptorGoToWaiting = 0
G_TDTacticsGoToWaiting = 0
G_TacticsTrialRepopulation = 0
_VIFONCE015 = 0
_VIFONCE016 = 0
_VIFONCE017 = 0
_VIFONCE018 = 0
_VIFONCE019 = 0
_VIFONCE020 = 0
_VIFONCE021 = 0
_VIFONCE022 = 0
_VIFONCE023 = 0
_VIFONCE024 = 0
_VIFONCE025 = 0
_VIFONCE026 = 0
_VIFONCE027 = 0
_VIFONCE028 = 0
_VIFONCE029 = 0
_VIFONCE030 = 0
_VIFONCE031 = 0
_VIFONCE032 = 0
_VIFONCE033 = 0
_VIFONCE034 = 0
_VIFONCE035 = 0
_VIFONCE036 = 0
_VIFONCE037 = 0
_VIFONCE038 = 0
_VIFONCE039 = 0
_VIFONCE040 = 0
_VIFONCE041 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.
G_BeginInterceptorTrial = 0;   --nReferences: 1
G_CLICK_Harvest = 0;   --nReferences: 3
G_CLICK_InterceptorTrial = 0;   --nReferences: 2
G_CLICK_ResearchShip = 0;   --nReferences: 3
G_CLICK_SalvageTrial = 0;   --nReferences: 2
G_CLICK_ScoutTrialFormations = 0;   --nReferences: 3
G_CLICK_ScoutTrialTactics = 0;   --nReferences: 2
G_CLICK_StartResearch = 0;   --nReferences: 2
--G_Nis1Complete : see SinglePlayerFlow.lua, nReferences: 4
--G_SalvageTD : see SinglePlayerFlow.lua, nReferences: 1
--G_SalvageTS : see SinglePlayerFlow.lua, nReferences: 2

--Following are Team-Scoped variables: referenced differently than globals.
IntelEvent = {["FleetIntel"] = 0}
NeverCreateFormationPingAgain = {["FleetIntel"] = 0}
NeverCreateInterceptorPingAgain = {["FleetIntel"] = 0}
NeverCreateSalvagePingAgain = {["FleetIntel"] = 0}
NeverCreateTacticsPingAgain = {["FleetIntel"] = 0}
ObjectivesBoxIsFlashing = {["FleetIntel"] = 0}
_VIFONCE001 = {["FleetIntel"] = 0}
_VIFONCE002 = {["FleetIntel"] = 0}
_VIFONCE003 = {["FleetIntel"] = 0}
_VIFONCE004 = {["FleetIntel"] = 0}
_VIFONCE005 = {["FleetIntel"] = 0}
_VIFONCE006 = {["FleetIntel"] = 0}
_VIFONCE007 = {["FleetIntel"] = 0}
_VIFONCE008 = {["FleetIntel"] = 0}
_VIFONCE009 = {["FleetIntel"] = 0}
_VIFONCE010 = {["FleetIntel"] = 0}
_VIFONCE011 = {["FleetIntel"] = 0}
_VIFONCE012 = {["FleetIntel"] = 0}
_VIFONCE013 = {["TDFormationTrial"] = 0}
_VIFONCE014 = {["TDFormationTrial"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
DisplayTutTip1 = {["FleetIntel"] = 12}
DisplayTutTip2 = {["FleetIntel"] = 13}
FIFormationTrialENDTimer = {["FleetIntel"] = 14}
FIFormationTrialLBXOutTimer = {["FleetIntel"] = 15}
FIFormationTrialPINGTimer = {["FleetIntel"] = 16}
FIFormationTrialTimer = {["FleetIntel"] = 17}
FIInterceptorTrialENDTimer = {["FleetIntel"] = 18}
FIInterceptorTrialLBXOutTimer = {["FleetIntel"] = 19}
FIInterceptorTrialPINGTimer = {["FleetIntel"] = 20}
FIInterceptorTrialTimer = {["FleetIntel"] = 21}
FIOpenSensorsTimer = {["FleetIntel"] = 22}
FISalvageTrialENDTimer = {["FleetIntel"] = 23}
FISalvageTrialLBXOutTimer = {["FleetIntel"] = 24}
FISalvageTrialPINGTimer = {["FleetIntel"] = 25}
FISalvageTrialTimer = {["FleetIntel"] = 26}
FITacticsTrialENDTimer = {["FleetIntel"] = 27}
FITacticsTrialLBXOutTimer = {["FleetIntel"] = 28}
FITacticsTrialPINGTimer = {["FleetIntel"] = 29}
FITacticsTrialTimer = {["FleetIntel"] = 30}
FlashTaskbar = {["FleetIntel"] = 31}
GoToTutorialTip1 = {["FleetIntel"] = 32}
GoToTutorialTip2 = {["FleetIntel"] = 33}
NotUnderAttack = {["TDInterceptorTrial"] = 34}
PlayCorvetteChassisRasp = {["FleetIntel"] = 35}
PlayCorvetteChassisUnderwayRasp = {["FleetIntel"] = 36}
TDIntHyperspaceInTimer = {["TDInterceptorTrial"] = 37}
WideScreenTimer = {["FleetIntel"] = 38}


--kas timer names, with mappings to indices
TimerID_G_BeginSalvageTrialNow = 6
TimerID_G_BeginScoutTrials = 2
TimerID_G_BeginTacticsTrialNow = 5
TimerID_G_FCCryoTrayJuice = 3
TimerID_G_FCHyperspaceJuice = 8
TimerID_G_FleetIntelTimer = 1
TimerID_G_MissionCompleteTimer = 0
TimerID_G_PlayFleetCommandSpeech = 11
TimerID_G_ResearchPopup = 4
TimerID_LocationCardTimer = 7
TimerID_PlayCorvetteChassisRasp = 9
TimerID_PlayCorvetteChassisUnderwayRasp = 10


--KAS objective names, set by KASObjective_Add
ObjectiveID_Harvest = 1
ObjectiveID_Hyperspace = 7
ObjectiveID_InterceptorTrial = 5
ObjectiveID_ResearchShip = 0
ObjectiveID_SalvageTrial = 6
ObjectiveID_ScoutTrialFormations = 2
ObjectiveID_ScoutTrialTactics = 4
ObjectiveID_StartResearch = 3
ObjectiveID_Count = 8


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_FormationTrialPOINTER = 0
PointerID_InterceptorTrialPOINTER = 3
PointerID_SalvageTrialPOINTER = 2
PointerID_TacticsTrialPOINTER = 1


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_LocationCard = {  -- multilingual strings
	"KHARAK SYSTEM",
	"SYSTEME KHARAK",
	"KHARAK-SYSTEM",
	"SISTEMA DE KHARAK",
	"IL SISTEMA DI KHARAK", }
LSTRING_HarvestTASKBAR = {  -- multilingual strings
	"Harvest asteroids",
	"Collecte asteroïdes",
	"Rohstoffe in Asteroiden ernten.",
	"Cosechar asteroides",
	"Raccogli degli asteroidi", }
LSTRING_ResearchShipTASKBAR = {  -- multilingual strings
	"Construct a Research Ship",
	"Construction Vaisseau de Recherche",
	"Ein Forschungsschiff bauen",
	"Construir nave de investigación",
	"Costruisci una Nave da Ricerca", }
LSTRING_StartResearchTASKBAR = {  -- multilingual strings
	"Research Fighter Chassis",
	"Recherche sur les châssis de chasseur",
	"Jäger-Chassis erforschen.",
	"Investigar chasis de caza",
	"Ricerca struttura Caccia Stellare", }
LSTRING_ScoutTrialFormationTASKBAR = {  -- multilingual strings
	"Destroy Target Drones using a formation",
	"Destruction des Drones-cibles. Méthode : Formation",
	"Zieldrohnen mit einer Formation vernichten.",
	"Destruir naves teledirigidas con una formación",
	"Distruggere il bersaglio Droni servendosi di una formazione", }
LSTRING_ScoutTrialTacticsTASKBAR = {  -- multilingual strings
	"Destroy Target Drones using tactics",
	"Destruction des Drones-cibles. Méthode : Tactique",
	"Zieldrohnen unter Verwendung von Taktiken zerstören.",
	"Destruir naves teledirigidas con tácticas",
	"Distruggi il bersaglio Droni con una strategia", }
LSTRING_SalvageTrialTASKBAR = {  -- multilingual strings
	"Capture the Drone using a Salvage Corvette.",
	"Capture du Drone. Moyens : Corvette de sauvetage.",
	"Drohne mit Hilfe einer Bergungskorvette übernehmen.",
	"Capturar la nave teledirigida con una corbeta de salvamento",
	"Cattura il Drone utilizzando una Corvetta di Recupero", }
LSTRING_InterceptorTrialTASKBAR = {  -- multilingual strings
	"Use Interceptors to destroy advanced drones",
	"Destruction des Drones de pointe. Moyens : Intercepteurs",
	"Abfangjäger zur Zerstörung von Superdrohnen verwenden.",
	"Usar interceptadores para destruir naves teledirigidas avanzadas",
	"Utilizza gli Intercettori per distruggere i Droni rimasti", }
LSTRING_HyperspaceTASKBAR = {  -- multilingual strings
	"                      HYPERSPACE",
	"                      HYPERESPACE",
	"           HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"                    IPERSPAZIO", }
LSTRING_ObjectiveIncomplete = {  -- multilingual strings
	"A mission objective remains incomplete. Consult objectives.",
	"Il reste un objectif de mission à accomplir. Consulter objectifs.Il reste un objectif de mission à accomplir. Consulter objectifs.",
	"Eine Aufgabe dieser Mission ist noch nicht abgeschlossen. Bitte Aufgabenziele überprüfen.",
	"",
	"", }

--
--  "initialize" code for Mission01 FleetIntel FSM
--
function Init_Mission01_FleetIntel(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Init_Mission01_FleetIntel")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FSM
--
function Watch_Mission01_FleetIntel(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if ((KAS_GameMessageReceived({"Game_TaskbarOff", "Start_BuildManager", "Start_ResearchManager", "Start_LaunchManager", "KB_Sensors", "TB_SensorsManager", "SP_EscMenu"}) ~= 0) and (ObjectivesBoxIsFlashing[TeamName] == 1)) then     --kasfTutGameSentMessage("Game_TaskbarOff,Start_BuildManager,Start_ResearchManager,Start_LaunchManager,KB_Sensors,TB_SensorsManager,SP_EscMenu")
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	ObjectivesBoxIsFlashing[TeamName] = 0 --destroyed
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIIntro state
--
function Init_Mission01_FleetIntel_FIIntro(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60376", 3)    --kasfSpeechEvent((376 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIIntro state
--
function Watch_Mission01_FleetIntel_FIIntro(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIntro2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIntro")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIntro2", "Watch_Mission01_FleetIntel_FIIntro")
	Init_Mission01_FleetIntel_FIIntro2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIIntro2 state
--
function Init_Mission01_FleetIntel_FIIntro2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60377", 3)    --kasfSpeechEvent((377 + 4096 + 268435456), 0)
	ignoredFunction()    --kasfForceTaskbar()
	ignoredFunction()    --kasfForceTaskbar()
	ignoredFunction()    --kasfSoundEvent(267)
	KASTimer_Start(FlashTaskbar[TeamName], 1)
	KASObjective_Add(ObjectiveID_ResearchShip, "$61052", OT_Primary)    --kasfObjectiveCreate("ResearchShip", LSTRING_ResearchShipTASKBAR[strCurLanguage], LSTRING_ResearchShipTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ResearchShip, "$60801")
	
end 


--
--  "watch" code for Mission01 FleetIntel FIIntro2 state
--
function Watch_Mission01_FleetIntel_FIIntro2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FlashTaskbar[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfTutSetPointerTargetFERegion("TaskbarPointer", "TB_ObjectivesWindowInit")
	ObjectivesBoxIsFlashing[TeamName] = 1 --created,set
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	G_CLICK_ResearchShip = 0 --destroyed
	if (_VIFONCE001[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	G_CreateInitialObjectives = 1 --created,set
	end 
	--kasJump("FIIntro3")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIntro2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIntro3", "Watch_Mission01_FleetIntel_FIIntro2")
	Init_Mission01_FleetIntel_FIIntro3(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIIntro3 state
--
function Init_Mission01_FleetIntel_FIIntro3(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60378", 3)    --kasfSpeechEvent((378 + 4096 + 268435456), 0)
	ignoredFunction()    --kasfSoundEvent(267)
	KASObjective_Add(ObjectiveID_Harvest, "$61051", OT_Primary)    --kasfObjectiveCreate("Harvest", LSTRING_HarvestTASKBAR[strCurLanguage], LSTRING_HarvestTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Harvest, "$60800")
	
end 


--
--  "watch" code for Mission01 FleetIntel FIIntro3 state
--
function Watch_Mission01_FleetIntel_FIIntro3(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	G_CLICK_Harvest = 0 --destroyed
	if (_VIFONCE002[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	G_CreateInitialObjectives = 1 --created,set
	end 
	if (_VIFONCE003[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	--kasJump("FCHyperspaceJuice")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIntro3")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FCHyperspaceJuice", "Watch_Mission01_FleetIntel_FIIntro3")
	Init_Mission01_FleetIntel_FCHyperspaceJuice(TeamName)
	return
	end 
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIntro3")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIIntro3")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialLBXIn state
--
function Init_Mission01_FleetIntel_FIFormationTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FIFormationOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationOpenSensors", "Init_Mission01_FleetIntel_FIFormationTrialLBXIn")
	Init_Mission01_FleetIntel_FIFormationOpenSensors(TeamName)
    --make the tactics trial fail by default
    SobGroup_SetROE("NIS_SobGroup", PassiveROE)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialLBXIn state
--
function Watch_Mission01_FleetIntel_FIFormationTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialLBXIn2 state
--
function Init_Mission01_FleetIntel_FIFormationTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	KASTimer_Start(WideScreenTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialLBXIn2 state
--
function Watch_Mission01_FleetIntel_FIFormationTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(WideScreenTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIFormationTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialLBXIn2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialPING", "Watch_Mission01_FleetIntel_FIFormationTrialLBXIn2")
	Init_Mission01_FleetIntel_FIFormationTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationOpenSensors state
--
function Init_Mission01_FleetIntel_FIFormationOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationOpenSensors state
--
function Watch_Mission01_FleetIntel_FIFormationOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIFormationTrial")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrial", "Watch_Mission01_FleetIntel_FIFormationOpenSensors")
	Init_Mission01_FleetIntel_FIFormationTrial(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrial state
--
function Init_Mission01_FleetIntel_FIFormationTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIFormationTrialTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrial state
--
function Watch_Mission01_FleetIntel_FIFormationTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIFormationTrialTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIFormationTrial2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrial")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrial2", "Watch_Mission01_FleetIntel_FIFormationTrial")
	Init_Mission01_FleetIntel_FIFormationTrial2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrial2 state
--
function Init_Mission01_FleetIntel_FIFormationTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60379", 3)    --kasfSpeechEvent((379 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrial2 state
--
function Watch_Mission01_FleetIntel_FIFormationTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIFormationTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialEND", "Watch_Mission01_FleetIntel_FIFormationTrial2")
	Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FIFormationTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialPING", "Watch_Mission01_FleetIntel_FIFormationTrial2")
	Init_Mission01_FleetIntel_FIFormationTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialPING state
--
function Init_Mission01_FleetIntel_FIFormationTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60380", 3)    --kasfSpeechEvent((380 + 4096 + 268435456), 0)
	UI_FlashButton('NewTaskbar', 'Claw', 4)
	KASTimer_Start(FIFormationTrialPINGTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialPING state
--
function Watch_Mission01_FleetIntel_FIFormationTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateFormationPingAgain[TeamName] == 0) then 
	
	KAS_PingAddShips("TDFormationTrial", "FormationTrialPING", "$60396")    --kasfPingAddShips(kasAITeamShipsPtr("TDFormationTrial"), "FormationTrialPING")
	NeverCreateFormationPingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIFormationTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialEND", "Watch_Mission01_FleetIntel_FIFormationTrialPING")
	Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FIFormationTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND", "Watch_Mission01_FleetIntel_FIFormationTrialPING")
	Init_Mission01_FleetIntel_FIFormationTrialWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIFormationTrialPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateFormationPingAgain[TeamName] == 0) then 
	
	KAS_PingAddShips("TDFormationTrial", "FormationTrialPING", "$60396")    --kasfPingAddShips(kasAITeamShipsPtr("TDFormationTrial"), "FormationTrialPING")
	NeverCreateFormationPingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_FormationTrialPOINTER = KASPointer_AddSobGroup("TDFormationTrial")    --kasfTutSetPointerTargetShipSelection("FormationTrialPOINTER", kasAITeamShipsPtr("TDFormationTrial"))
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialLBXOut state
--
function Init_Mission01_FleetIntel_FIFormationTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIFormationTrialLBXOutTimer[TeamName], 10)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialLBXOut state
--
function Watch_Mission01_FleetIntel_FIFormationTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIFormationTrialLBXOutTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FIFormationTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND", "Watch_Mission01_FleetIntel_FIFormationTrialLBXOut")
	Init_Mission01_FleetIntel_FIFormationTrialWAITEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIFormationTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialEND", "Watch_Mission01_FleetIntel_FIFormationTrialLBXOut")
	Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialWAITEND state
--
function Init_Mission01_FleetIntel_FIFormationTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIFormationTrialENDTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialWAITEND state
--
function Watch_Mission01_FleetIntel_FIFormationTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIFormationTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialEND", "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND")
	Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIFormationTrialENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIFormationTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialEND", "Watch_Mission01_FleetIntel_FIFormationTrialWAITEND")
	Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialEND state
--
function Init_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	G_CLICK_ScoutTrialFormations = 0 --destroyed
	if (_VIFONCE004[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #4
	
	_VIFONCE004[TeamName] = 1 --created,set;
	G_BeginScoutTrialFormations = 1 --created,set
	KASTimer_Start(DisplayTutTip1[TeamName], 7)
	end 
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Init_Mission01_FleetIntel_FIFormationTrialEND")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialEND state
--
function Watch_Mission01_FleetIntel_FIFormationTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel TutTip1 state
--
function Init_Mission01_FleetIntel_TutTip1(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(GoToTutorialTip1[TeamName], 10)
	
end 


--
--  "watch" code for Mission01 FleetIntel TutTip1 state
--
function Watch_Mission01_FleetIntel_TutTip1(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if ((ignoredFunctionInt(0) ~= 0) or (KASTimer_IsExpiredIfSoDestroy(GoToTutorialTip1[TeamName]) ~= 0)) then     --kasfTutNextButtonClicked()
	
	KASTimer_Start(DisplayTutTip2[TeamName], 1)
	--kasJump("TutorialWait")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_TutTip1")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_TutorialWait", "Watch_Mission01_FleetIntel_TutTip1")
	Init_Mission01_FleetIntel_TutorialWait(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel TutorialWait state
--
function Init_Mission01_FleetIntel_TutorialWait(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel TutorialWait state
--
function Watch_Mission01_FleetIntel_TutorialWait(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(DisplayTutTip2[TeamName]) ~= 0) then 
	
	--kasJump("TutTip2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_TutorialWait")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_TutTip2", "Watch_Mission01_FleetIntel_TutorialWait")
	Init_Mission01_FleetIntel_TutTip2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel TutTip2 state
--
function Init_Mission01_FleetIntel_TutTip2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(GoToTutorialTip2[TeamName], 10)
	
end 


--
--  "watch" code for Mission01 FleetIntel TutTip2 state
--
function Watch_Mission01_FleetIntel_TutTip2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if ((ignoredFunctionInt(0) ~= 0) or (KASTimer_IsExpiredIfSoDestroy(GoToTutorialTip2[TeamName]) ~= 0) or (G_CLICK_Harvest ~= 0) or (G_CLICK_ResearchShip ~= 0) or (G_CLICK_ScoutTrialFormations ~= 0)) then     --kasfTutNextButtonClicked()
	
	ignoredFunction()    --kasfTutHideText()
	ignoredFunction()    --kasfTutHideNextButton()
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_TutTip2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_TutTip2")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FCHyperspaceJuice state
--
function Init_Mission01_FleetIntel_FCHyperspaceJuice(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60391", 3)    --kasfSpeechEvent((391 + 2048 + 268435456), 0)
	G_FormationDronesHyperspaceIn = 1 --created,set
	
end 


--
--  "watch" code for Mission01 FleetIntel FCHyperspaceJuice state
--
function Watch_Mission01_FleetIntel_FCHyperspaceJuice(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FCHyperspaceJuice")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FCHyperspaceJuice")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIObjectiveIncomplete state
--
function Init_Mission01_FleetIntel_FIObjectiveIncomplete(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	Subtitle_Message("$61059", 0.3)    --kasfSubtitleSimulate(4, 300, LSTRING_ObjectiveIncomplete[strCurLanguage])
	
end 


--
--  "watch" code for Mission01 FleetIntel FIObjectiveIncomplete state
--
function Watch_Mission01_FleetIntel_FIObjectiveIncomplete(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIObjectiveIncomplete")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIObjectiveIncomplete")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FCCryoTrayJuice state
--
function Init_Mission01_FleetIntel_FCCryoTrayJuice(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FCCryoTrayJuice state
--
function Watch_Mission01_FleetIntel_FCCryoTrayJuice(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FCCryoTrayJuice")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FCCryoTrayJuice")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIStartResearching state
--
function Init_Mission01_FleetIntel_FIStartResearching(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60734", 3)    --kasfSpeechEvent((734 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIStartResearching state
--
function Watch_Mission01_FleetIntel_FIStartResearching(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	G_OnlyCreateResearchObjOnce = 1 --created,set
	G_CLICK_StartResearch = 0 --destroyed
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIStartResearching")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIStartResearching")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIAlreadyResearching state
--
function Init_Mission01_FleetIntel_FIAlreadyResearching(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FIAlreadyResearching state
--
function Watch_Mission01_FleetIntel_FIAlreadyResearching(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIAlreadyResearching")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIAlreadyResearching")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialLBXIn state
--
function Init_Mission01_FleetIntel_FITacticsTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FITacticsOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsOpenSensors", "Init_Mission01_FleetIntel_FITacticsTrialLBXIn")
	Init_Mission01_FleetIntel_FITacticsOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialLBXIn state
--
function Watch_Mission01_FleetIntel_FITacticsTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialLBXIn2 state
--
function Init_Mission01_FleetIntel_FITacticsTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	KASTimer_Start(WideScreenTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialLBXIn2 state
--
function Watch_Mission01_FleetIntel_FITacticsTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(WideScreenTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FITacticsTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialLBXIn2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialPING", "Watch_Mission01_FleetIntel_FITacticsTrialLBXIn2")
	Init_Mission01_FleetIntel_FITacticsTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsOpenSensors state
--
function Init_Mission01_FleetIntel_FITacticsOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsOpenSensors state
--
function Watch_Mission01_FleetIntel_FITacticsOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FITacticsTrial")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrial", "Watch_Mission01_FleetIntel_FITacticsOpenSensors")
	Init_Mission01_FleetIntel_FITacticsTrial(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrial state
--
function Init_Mission01_FleetIntel_FITacticsTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FITacticsTrialTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrial state
--
function Watch_Mission01_FleetIntel_FITacticsTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrial")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrial")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FITacticsTrialTimer[TeamName]) ~= 0) then 
	
	--kasJump("FITacticsTrial2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrial")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrial2", "Watch_Mission01_FleetIntel_FITacticsTrial")
	Init_Mission01_FleetIntel_FITacticsTrial2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrial2 state
--
function Init_Mission01_FleetIntel_FITacticsTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60382", 3)    --kasfSpeechEvent((382 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrial2 state
--
function Watch_Mission01_FleetIntel_FITacticsTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrial2")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FITacticsTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialPING", "Watch_Mission01_FleetIntel_FITacticsTrial2")
	Init_Mission01_FleetIntel_FITacticsTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialPING state
--
function Init_Mission01_FleetIntel_FITacticsTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60383", 3)    --kasfSpeechEvent((383 + 4096 + 268435456), 0)
	KASTimer_Start(FITacticsTrialPINGTimer[TeamName], 6)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialPING state
--
function Watch_Mission01_FleetIntel_FITacticsTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	UI_FlashButton('NewTaskbar', 'btnAggressive', 6)
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateTacticsPingAgain[TeamName] == 0) then 
	
	NeverCreateTacticsPingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialPING")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FITacticsTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialWAITEND", "Watch_Mission01_FleetIntel_FITacticsTrialPING")
	Init_Mission01_FleetIntel_FITacticsTrialWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FITacticsTrialPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateTacticsPingAgain[TeamName] == 0) then 
	
	NeverCreateTacticsPingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_TacticsTrialPOINTER = KASPointer_AddSobGroup("TDTacticsTrial")    --kasfTutSetPointerTargetShipSelection("TacticsTrialPOINTER", kasAITeamShipsPtr("TDTacticsTrial"))
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialPING2 state
--
function Init_Mission01_FleetIntel_FITacticsTrialPING2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialPING2 state
--
function Watch_Mission01_FleetIntel_FITacticsTrialPING2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FITacticsTrialPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateTacticsPingAgain[TeamName] == 0) then 
	
	NeverCreateTacticsPingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_TacticsTrialPOINTER = KASPointer_AddSobGroup("TDTacticsTrial")    --kasfTutSetPointerTargetShipSelection("TacticsTrialPOINTER", kasAITeamShipsPtr("TDTacticsTrial"))
	--kasJump("FITacticsTrialLBXOut")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialPING2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialLBXOut", "Watch_Mission01_FleetIntel_FITacticsTrialPING2")
	Init_Mission01_FleetIntel_FITacticsTrialLBXOut(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateTacticsPingAgain[TeamName] == 0) then 
	
	NeverCreateTacticsPingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_TacticsTrialPOINTER = KASPointer_AddSobGroup("TDTacticsTrial")    --kasfTutSetPointerTargetShipSelection("TacticsTrialPOINTER", kasAITeamShipsPtr("TDTacticsTrial"))
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialPING2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialPING2")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialLBXOut state
--
function Init_Mission01_FleetIntel_FITacticsTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FITacticsTrialLBXOutTimer[TeamName], 15)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialLBXOut state
--
function Watch_Mission01_FleetIntel_FITacticsTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FITacticsTrialLBXOutTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialLBXOut")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) == 2) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialLBXOut")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialWAITEND state
--
function Init_Mission01_FleetIntel_FITacticsTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FITacticsTrialENDTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialWAITEND state
--
function Watch_Mission01_FleetIntel_FITacticsTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialWAITEND")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FITacticsTrialENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FITacticsTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialEND", "Watch_Mission01_FleetIntel_FITacticsTrialWAITEND")
	Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialEND state
--
function Init_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialEND state
--
function Watch_Mission01_FleetIntel_FITacticsTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	if (_VIFONCE005[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #5
	
	_VIFONCE005[TeamName] = 1 --created,set;
	G_BeginScoutTrialTactics = 1 --created,set
	end 
	G_CLICK_ScoutTrialTactics = 0 --destroyed
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FITacticsTrialEND")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialLBXIn state
--
function Init_Mission01_FleetIntel_FISalvageTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE006[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #6
	
	_VIFONCE006[TeamName] = 1 --created,set;
	G_SalvageTrialHasBegun = 1 --created,set
	end 
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FISalvageOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageOpenSensors", "Init_Mission01_FleetIntel_FISalvageTrialLBXIn")
	Init_Mission01_FleetIntel_FISalvageOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialLBXIn state
--
function Watch_Mission01_FleetIntel_FISalvageTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialLBXIn2 state
--
function Init_Mission01_FleetIntel_FISalvageTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	KASTimer_Start(WideScreenTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialLBXIn2 state
--
function Watch_Mission01_FleetIntel_FISalvageTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(WideScreenTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FISalvageTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialLBXIn2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialPING", "Watch_Mission01_FleetIntel_FISalvageTrialLBXIn2")
	Init_Mission01_FleetIntel_FISalvageTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageOpenSensors state
--
function Init_Mission01_FleetIntel_FISalvageOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageOpenSensors state
--
function Watch_Mission01_FleetIntel_FISalvageOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FISalvageTrial")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrial", "Watch_Mission01_FleetIntel_FISalvageOpenSensors")
	Init_Mission01_FleetIntel_FISalvageTrial(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrial state
--
function Init_Mission01_FleetIntel_FISalvageTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISalvageTrialTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrial state
--
function Watch_Mission01_FleetIntel_FISalvageTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FISalvageTrialTimer[TeamName]) ~= 0) then 
	
	--kasJump("FISalvageTrial2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrial")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrial2", "Watch_Mission01_FleetIntel_FISalvageTrial")
	Init_Mission01_FleetIntel_FISalvageTrial2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrial2 state
--
function Init_Mission01_FleetIntel_FISalvageTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE007[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #7
	
	_VIFONCE007[TeamName] = 1 --created,set;
	G_CreateSalvageObjective = 1 --created,set
	end 
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60385", 3)    --kasfSpeechEvent((385 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrial2 state
--
function Watch_Mission01_FleetIntel_FISalvageTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISalvageTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialEND", "Watch_Mission01_FleetIntel_FISalvageTrial2")
	Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FISalvageTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialPING", "Watch_Mission01_FleetIntel_FISalvageTrial2")
	Init_Mission01_FleetIntel_FISalvageTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialPING state
--
function Init_Mission01_FleetIntel_FISalvageTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE008[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #8
	
	_VIFONCE008[TeamName] = 1 --created,set;
	G_CreateSalvageObjective = 1 --created,set
	end 
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60386", 3)    --kasfSpeechEvent((386 + 4096 + 268435456), 0)
	KASTimer_Start(FISalvageTrialPINGTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialPING state
--
function Watch_Mission01_FleetIntel_FISalvageTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateSalvagePingAgain[TeamName] == 0) then 
	
	NeverCreateSalvagePingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISalvageTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialEND", "Watch_Mission01_FleetIntel_FISalvageTrialPING")
	Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FISalvageTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND", "Watch_Mission01_FleetIntel_FISalvageTrialPING")
	Init_Mission01_FleetIntel_FISalvageTrialWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISalvageTrialPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateSalvagePingAgain[TeamName] == 0) then 
	
	NeverCreateSalvagePingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_SalvageTrialPOINTER = KASPointer_AddSobGroup("TDSalvageTrial")    --kasfTutSetPointerTargetShipSelection("SalvageTrialPOINTER", kasAITeamShipsPtr("TDSalvageTrial"))
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialLBXOut state
--
function Init_Mission01_FleetIntel_FISalvageTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISalvageTrialLBXOutTimer[TeamName], 5)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialLBXOut state
--
function Watch_Mission01_FleetIntel_FISalvageTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if ((KASTimer_IsExpiredIfSoDestroy(FISalvageTrialLBXOutTimer[TeamName]) ~= 0) or (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0)) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FISalvageTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND", "Watch_Mission01_FleetIntel_FISalvageTrialLBXOut")
	Init_Mission01_FleetIntel_FISalvageTrialWAITEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISalvageTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialEND", "Watch_Mission01_FleetIntel_FISalvageTrialLBXOut")
	Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialWAITEND state
--
function Init_Mission01_FleetIntel_FISalvageTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISalvageTrialENDTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialWAITEND state
--
function Watch_Mission01_FleetIntel_FISalvageTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISalvageTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialEND", "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND")
	Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISalvageTrialENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISalvageTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialEND", "Watch_Mission01_FleetIntel_FISalvageTrialWAITEND")
	Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialEND state
--
function Init_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	G_CLICK_SalvageTrial = 0 --destroyed
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Init_Mission01_FleetIntel_FISalvageTrialEND")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialEND state
--
function Watch_Mission01_FleetIntel_FISalvageTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialLBXIn state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FIInterceptorOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorOpenSensors", "Init_Mission01_FleetIntel_FIInterceptorTrialLBXIn")
	Init_Mission01_FleetIntel_FIInterceptorOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialLBXIn state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialLBXIn(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialLBXIn2 state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	KASTimer_Start(WideScreenTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialLBXIn2 state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialLBXIn2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(WideScreenTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIInterceptorTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXIn2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialPING", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXIn2")
	Init_Mission01_FleetIntel_FIInterceptorTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorOpenSensors state
--
function Init_Mission01_FleetIntel_FIInterceptorOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorOpenSensors state
--
function Watch_Mission01_FleetIntel_FIInterceptorOpenSensors(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIInterceptorTrial")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrial", "Watch_Mission01_FleetIntel_FIInterceptorOpenSensors")
	Init_Mission01_FleetIntel_FIInterceptorTrial(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrial state
--
function Init_Mission01_FleetIntel_FIInterceptorTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	G_BeginInterceptorTrialNOW = 1 --created,set
	KASTimer_Start(FIInterceptorTrialTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrial state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrial(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIInterceptorTrialTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIInterceptorTrial2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrial")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrial2", "Watch_Mission01_FleetIntel_FIInterceptorTrial")
	Init_Mission01_FleetIntel_FIInterceptorTrial2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrial2 state
--
function Init_Mission01_FleetIntel_FIInterceptorTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60388", 3)    --kasfSpeechEvent((388 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrial2 state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrial2(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIInterceptorTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialEND", "Watch_Mission01_FleetIntel_FIInterceptorTrial2")
	Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FIInterceptorTrialPING")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrial2")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialPING", "Watch_Mission01_FleetIntel_FIInterceptorTrial2")
	Init_Mission01_FleetIntel_FIInterceptorTrialPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialPING state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60389", 3)    --kasfSpeechEvent((389 + 4096 + 268435456), 0)
	KASTimer_Start(FIInterceptorTrialPINGTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialPING state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialPING(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateInterceptorPingAgain[TeamName] == 0) then 
	
	NeverCreateInterceptorPingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIInterceptorTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialPING")
	Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FIInterceptorTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialPING")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialPING")
	Init_Mission01_FleetIntel_FIInterceptorTrialWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIInterceptorTrialPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateInterceptorPingAgain[TeamName] == 0) then 
	
	NeverCreateInterceptorPingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_InterceptorTrialPOINTER = KASPointer_AddSobGroup("TDInterceptorTrial")    --kasfTutSetPointerTargetShipSelection("InterceptorTrialPOINTER", kasAITeamShipsPtr("TDInterceptorTrial"))
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialLBXOut state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIInterceptorTrialLBXOutTimer[TeamName], 10)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialLBXOut state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialLBXOut(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIInterceptorTrialLBXOutTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FIInterceptorTrialWAITEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXOut")
	Init_Mission01_FleetIntel_FIInterceptorTrialWAITEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIInterceptorTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXOut")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXOut")
	Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialWAITEND state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIInterceptorTrialENDTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialWAITEND state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIInterceptorTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND")
	Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIInterceptorTrialENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIInterceptorTrialEND")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialEND", "Watch_Mission01_FleetIntel_FIInterceptorTrialWAITEND")
	Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialEND state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	G_CLICK_InterceptorTrial = 0 --destroyed
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Init_Mission01_FleetIntel_FIInterceptorTrialEND")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialEND state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialEND(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIFormationTrialRepopulation state
--
function Init_Mission01_FleetIntel_FIFormationTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60381", 3)    --kasfSpeechEvent((381 + 4096 + 268435456), 0)
	UI_FlashButton('NewTaskbar', 'Claw', 4)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIFormationTrialRepopulation state
--
function Watch_Mission01_FleetIntel_FIFormationTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIFormationTrialRepopulation")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIFormationTrialRepopulation")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITacticsTrialRepopulation state
--
function Init_Mission01_FleetIntel_FITacticsTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60384", 3)    --kasfSpeechEvent((384 + 4096 + 268435456), 0)
	UI_FlashButton('NewTaskbar', 'btnAggressive', 4)
end 


--
--  "watch" code for Mission01 FleetIntel FITacticsTrialRepopulation state
--
function Watch_Mission01_FleetIntel_FITacticsTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITacticsTrialRepopulation")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FITacticsTrialRepopulation")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIInterceptorTrialRepopulation state
--
function Init_Mission01_FleetIntel_FIInterceptorTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60390", 3)    --kasfSpeechEvent((390 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIInterceptorTrialRepopulation state
--
function Watch_Mission01_FleetIntel_FIInterceptorTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIInterceptorTrialRepopulation")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FIInterceptorTrialRepopulation")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FISalvageTrialRepopulation state
--
function Init_Mission01_FleetIntel_FISalvageTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60387", 3)    --kasfSpeechEvent((387 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FISalvageTrialRepopulation state
--
function Watch_Mission01_FleetIntel_FISalvageTrialRepopulation(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FISalvageTrialRepopulation")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FISalvageTrialRepopulation")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FICorvetteChassisRasp state
--
function Init_Mission01_FleetIntel_FICorvetteChassisRasp(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FICorvetteChassisRasp state
--
function Watch_Mission01_FleetIntel_FICorvetteChassisRasp(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FICorvetteChassisRasp")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FICorvetteChassisRasp")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "initialize" code for Mission01 FleetIntel FICorvetteChassisUnderwayRasp state
--
function Init_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FICorvetteChassisUnderwayRasp state
--
function Watch_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIHyperspace state
--
function Init_Mission01_FleetIntel_FIHyperspace(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60392", 3)    --kasfSpeechEvent((755 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FIHyperspace state
--
function Watch_Mission01_FleetIntel_FIHyperspace(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FCHyperspaceModuleReady")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIHyperspace")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FCHyperspaceModuleReady", "Watch_Mission01_FleetIntel_FIHyperspace")
	Init_Mission01_FleetIntel_FCHyperspaceModuleReady(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FCHyperspaceModuleReady state
--
function Init_Mission01_FleetIntel_FCHyperspaceModuleReady(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60393", 3)    --kasfSpeechEvent((393 + 2048 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FCHyperspaceModuleReady state
--
function Watch_Mission01_FleetIntel_FCHyperspaceModuleReady(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FITriggerHyperspace")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FCHyperspaceModuleReady")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITriggerHyperspace", "Watch_Mission01_FleetIntel_FCHyperspaceModuleReady")
	Init_Mission01_FleetIntel_FITriggerHyperspace(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FITriggerHyperspace state
--
function Init_Mission01_FleetIntel_FITriggerHyperspace(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60394", 3)    --kasfSpeechEvent((394 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission01 FleetIntel FITriggerHyperspace state
--
function Watch_Mission01_FleetIntel_FITriggerHyperspace(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KASTimer_Start(TimerID_G_MissionCompleteTimer, 1)
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FITriggerHyperspace")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIdle", "Watch_Mission01_FleetIntel_FITriggerHyperspace")
	Init_Mission01_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 FleetIntel FIIdle state
--
function Init_Mission01_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission01 FleetIntel FIIdle state
--
function Watch_Mission01_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission01_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_FleetIntelTimer) ~= 0) then 
	
	--kasJump("FIIntro")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIntro", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIIntro(TeamName)
	return
	end 
	if (_VIFONCE009[TeamName] == 0 and ((KASTimer_IsExpiredIfSoDestroy(TimerID_G_BeginScoutTrials) ~= 0) or (G_PlayFIFormationImmediately == 1))) then  -- "ifonce" #9
	
	_VIFONCE009[TeamName] = 1 --created,set;
	G_PlayFIFormationImmediately = 0 --destroyed
	KASTimer_End(TimerID_G_BeginScoutTrials)
	G_FIFormationTrialHasPlayed = 1 --created,set
	--kasJump("FIFormationTrialLBXIn")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialLBXIn", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIFormationTrialLBXIn(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(DisplayTutTip1[TeamName]) ~= 0) then 
	
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_FCCryoTrayJuice) ~= 0) then 
	
	--kasJump("FCCryoTrayJuice")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FCCryoTrayJuice", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FCCryoTrayJuice(TeamName)
	return
	end 
	if ((G_ReadyToHYPERSPACE == 0) and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_ResearchPopup) ~= 0)) then 
	
	if (Player_IsResearching(0) ~= 0) then     --kasfTechIsResearching()
	
	--kasJump("FIAlreadyResearching")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIAlreadyResearching", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIAlreadyResearching(TeamName)
	return
	else
	
	--kasJump("FIStartResearching")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIStartResearching", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIStartResearching(TeamName)
	return
	end 
	end 
	if (_VIFONCE010[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_BeginTacticsTrialNow) ~= 0)) then  -- "ifonce" #10
	
	_VIFONCE010[TeamName] = 1 --created,set;
	--kasJump("FITacticsTrialLBXIn")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialLBXIn", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FITacticsTrialLBXIn(TeamName)
	return
	end 
	if (_VIFONCE011[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_BeginSalvageTrialNow) ~= 0)) then  -- "ifonce" #11
	
	_VIFONCE011[TeamName] = 1 --created,set;
	--kasJump("FISalvageTrialLBXIn")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialLBXIn", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FISalvageTrialLBXIn(TeamName)
	return
	end 
	if (G_FormationTrialRepopulation == 1) then 
	
	if (G_BeginScoutTrialFormations == 1) then 
	
	G_FormationTrialRepopulation = 0 --destroyed
	--kasJump("FIFormationTrialRepopulation")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialRepopulation", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIFormationTrialRepopulation(TeamName)
	return
	end 
	end 
	if (G_TacticsTrialRepopulation == 1) then 
	
	if (G_BeginScoutTrialTactics == 1) then 
	
	G_TacticsTrialRepopulation = 0 --destroyed
	--kasJump("FITacticsTrialRepopulation")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialRepopulation", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FITacticsTrialRepopulation(TeamName)
	return
	end 
	end 
	if (G_InterceptorTrialRepopulation == 1) then 
	
	if (G_BeginInterceptorTrialNOW == 1) then 
	
	G_InterceptorTrialRepopulation = 0 --destroyed
	--kasJump("FIInterceptorTrialRepopulation")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialRepopulation", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIInterceptorTrialRepopulation(TeamName)
	return
	end 
	end 
	if (G_SalvageTrialRepopulation == 1) then 
	
	if (G_BeginSalvageTrial == 1) then 
	
	G_SalvageTrialRepopulation = 0 --destroyed
	--kasJump("FISalvageTrialRepopulation")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialRepopulation", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FISalvageTrialRepopulation(TeamName)
	return
	end 
	end 
	if ((G_PlayedCorvetteChassisUnderwayRasp == 0) and (KASTimer_IsExpiredIfSoDestroy(PlayCorvetteChassisRasp[TeamName]) ~= 0)) then 
	
	--kasJump("FICorvetteChassisRasp")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FICorvetteChassisRasp", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FICorvetteChassisRasp(TeamName)
	return
	end 
	if ((G_PlayedCorvetteChassisUnderwayRasp == 0) and (KASTimer_IsExpiredIfSoDestroy(PlayCorvetteChassisUnderwayRasp[TeamName]) ~= 0)) then 
	
	G_PlayedCorvetteChassisRasp = 1 --created,set
	--kasJump("FICorvetteChassisUnderwayRasp")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FICorvetteChassisUnderwayRasp(TeamName)
	return
	end 
	if (_VIFONCE012[TeamName] == 0 and (G_ReadyToHYPERSPACE == 1)) then  -- "ifonce" #12
	
	_VIFONCE012[TeamName] = 1 --created,set;
	--kasJump("FIHyperspace")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIHyperspace", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIHyperspace(TeamName)
	return
	end 
	if (G_CLICK_ResearchShip ~= 0) then 
	
	--kasJump("FIIntro2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIntro2", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIIntro2(TeamName)
	return
	end 
	if (G_CLICK_Harvest ~= 0) then 
	
	--kasJump("FIIntro3")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIIntro3", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIIntro3(TeamName)
	return
	end 
	if (G_CLICK_ScoutTrialFormations ~= 0) then 
	
	--kasJump("FIFormationTrialLBXIn2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIFormationTrialLBXIn2", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIFormationTrialLBXIn2(TeamName)
	return
	end 
	if (G_CLICK_StartResearch ~= 0) then 
	
	--kasJump("FIStartResearching")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIStartResearching", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIStartResearching(TeamName)
	return
	end 
	if (G_CLICK_ScoutTrialTactics ~= 0) then 
	
	--kasJump("FITacticsTrialLBXIn2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FITacticsTrialLBXIn2", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FITacticsTrialLBXIn2(TeamName)
	return
	end 
	if (G_CLICK_SalvageTrial ~= 0) then 
	
	--kasJump("FISalvageTrialLBXIn2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FISalvageTrialLBXIn2", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FISalvageTrialLBXIn2(TeamName)
	return
	end 
	if (G_CLICK_InterceptorTrial ~= 0) then 
	
	--kasJump("FIInterceptorTrialLBXIn2")
	--KASRule_Remove("FSM_Mission01_FleetIntel", "Watch_Mission01_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission01_FleetIntel_FIInterceptorTrialLBXIn2", "Watch_Mission01_FleetIntel_FIIdle")
	Init_Mission01_FleetIntel_FIInterceptorTrialLBXIn2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationTrial FSM
--
function Init_Mission01_TDFormationTrial(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	KAS_TeamAttributesSet(TeamName, 128)    --kasfTeamAttributesSet(128)
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	
end 


--
--  "watch" code for Mission01 TDFormationTrial FSM
--
function Watch_Mission01_TDFormationTrial(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	if (SobGroup_Count(TeamName) > 1) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_FormTrialTDUnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("FormTrialTDUnderAttack"))
	
	end 
	else
	
	SobGroup_Clear("GrowSelection_FormTrialTDUnderAttack")    --kasfGrowSelectionClear(kasGrowSelectionPtr("FormTrialTDUnderAttack"))
	end 
	if (_VIFONCE013[TeamName] == 0 and (G_FormationDronesHyperspaceIn == 1)) then  -- "ifonce" #13
	
	_VIFONCE013[TeamName] = 1 --created,set;
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDFormationTrial", "Watch_Mission01_TDFormationTrial")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationTrial_GetIntoPosition", "Watch_Mission01_TDFormationTrial")
	Init_Mission01_TDFormationTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationTrial WatchForAttackers state
--
function Init_Mission01_TDFormationTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	
end 


--
--  "watch" code for Mission01 TDFormationTrial WatchForAttackers state
--
function Watch_Mission01_TDFormationTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	if (_VIFONCE014[TeamName] == 0 and ((SobGroup_Count("TDFormationTrial") < 9) and (G_FIFormationTrialHasPlayed == 0))) then  -- "ifonce" #14    --kasfShipsCount(kasAITeamShipsPtr("TDFormationTrial"))
	
	_VIFONCE014[TeamName] = 1 --created,set;
	G_PlayFIFormationImmediately = 1 --created,set
	end 
	if (G_TDFormationGoToWaiting == 1) then 
	
	G_TDFormationGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDFormationTrial", "Watch_Mission01_TDFormationTrial_WatchForAttackers")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationTrial_WaitingForShips", "Watch_Mission01_TDFormationTrial_WatchForAttackers")
	Init_Mission01_TDFormationTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationTrial WaitingForShips state
--
function Init_Mission01_TDFormationTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	
end 


--
--  "watch" code for Mission01 TDFormationTrial WaitingForShips state
--
function Watch_Mission01_TDFormationTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	if (SobGroup_Count("TDFormationTrial") == 9) then     --kasfShipsCount(kasAITeamShipsPtr("TDFormationTrial"))
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDFormationTrial", "Watch_Mission01_TDFormationTrial_WaitingForShips")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationTrial_GetIntoPosition", "Watch_Mission01_TDFormationTrial_WaitingForShips")
	Init_Mission01_TDFormationTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationTrial GetIntoPosition state
--
function Init_Mission01_TDFormationTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	KAS_TeamHyperspaceIn(TeamName, "FormationTrialPING")    --kasfTeamHyperspaceIn(kasVectorPtr("FormationTrialPING"))
	
end 


--
--  "watch" code for Mission01 TDFormationTrial GetIntoPosition state
--
function Watch_Mission01_TDFormationTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDFormationTrial
	--TeamName = TDFormationTrial
	if (SobGroup_IsShipNearPoint(TeamName, "TacticsTrialPING", 175) ~= 0) then     --kasfNearby(kasVectorPtr("TacticsTrialPING"), 500)
	
	KAS_PingAddShips("TDTacticsTrial", "TacticsTrialPING", "$60397")    --kasfPingAddShips(kasAITeamShipsPtr("TDTacticsTrial"), "TacticsTrialPING")
	--kasJump("WatchForAttackers")
	--KASRule_Remove("FSM_Mission01_TDFormationTrial", "Watch_Mission01_TDFormationTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationTrial_WatchForAttackers", "Watch_Mission01_TDFormationTrial_GetIntoPosition")
	Init_Mission01_TDFormationTrial_WatchForAttackers(TeamName)
	return
	end 
	if (G_TDFormationGoToWaiting == 1) then 
	
	G_TDFormationGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDFormationTrial", "Watch_Mission01_TDFormationTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationTrial_WaitingForShips", "Watch_Mission01_TDFormationTrial_GetIntoPosition")
	Init_Mission01_TDFormationTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationRepopulation FSM
--
function Init_Mission01_TDFormationRepopulation(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	--kasJump("WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationRepopulation_WatchForFailure", "Init_Mission01_TDFormationRepopulation")
	Init_Mission01_TDFormationRepopulation_WatchForFailure(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDFormationRepopulation FSM
--
function Watch_Mission01_TDFormationRepopulation(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	
end 


--
--  "initialize" code for Mission01 TDFormationRepopulation WatchForFailure state
--
function Init_Mission01_TDFormationRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 9)    --kasfRequestShips("TargetDrone", 9)
	
end 


--
--  "watch" code for Mission01 TDFormationRepopulation WatchForFailure state
--
function Watch_Mission01_TDFormationRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	if ((SobGroup_Count("TDFormationTrial") == 0) and (G_PlayerHasUsedFormation == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("TDFormationTrial"))
	
	KAS_PingRemove("FormationTrialPING", "$60396")    --kasfPingRemove("FormationTrialPING")
	G_FormationTrialRepopulation = 1 --created,set
	--kasJump("GiveDronesToTeam")
	--KASRule_Remove("FSM_Mission01_TDFormationRepopulation", "Watch_Mission01_TDFormationRepopulation_WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationRepopulation_GiveDronesToTeam", "Watch_Mission01_TDFormationRepopulation_WatchForFailure")
	Init_Mission01_TDFormationRepopulation_GiveDronesToTeam(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDFormationRepopulation GiveDronesToTeam state
--
function Init_Mission01_TDFormationRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	
end 


--
--  "watch" code for Mission01 TDFormationRepopulation GiveDronesToTeam state
--
function Watch_Mission01_TDFormationRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDFormationRepopulation
	--TeamName = TDFormationRepopulation
	if (SobGroup_Count("TDFormationRepopulation") == 9) then     --kasfShipsCount(kasAITeamShipsPtr("TDFormationRepopulation"))
	
	SobGroup_SobGroupAdd("TDFormationTrial", "TDFormationRepopulation")    --kasfReinforceTeamWithShips(kasAITeamPtr("TDFormationTrial"), kasAITeamShipsPtr("TDFormationRepopulation"))
	SobGroup_FillSubtract("TDFormationRepopulation", "TDFormationRepopulation", "TDFormationRepopulation")    --kasfShipsRemove(kasAITeamShipsPtr("TDFormationRepopulation"), kasAITeamShipsPtr("TDFormationRepopulation"))
	G_TDFormationGoToWaiting = 1 --created,set
	--kasJump("WatchForFailure")
	--KASRule_Remove("FSM_Mission01_TDFormationRepopulation", "Watch_Mission01_TDFormationRepopulation_GiveDronesToTeam")
	KASRule_Add(TeamName, "Watch_Mission01_TDFormationRepopulation_WatchForFailure", "Watch_Mission01_TDFormationRepopulation_GiveDronesToTeam")
	Init_Mission01_TDFormationRepopulation_WatchForFailure(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsTrial FSM
--
function Init_Mission01_TDTacticsTrial(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	--kasJump("WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_WaitForObjective", "Init_Mission01_TDTacticsTrial")
	Init_Mission01_TDTacticsTrial_WaitForObjective(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDTacticsTrial FSM
--
function Watch_Mission01_TDTacticsTrial(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	if (KAS_UnderAttack(TeamName, "GrowSelection_TacticsTrialTDUnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("TacticsTrialTDUnderAttack"))
	
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsTrial WaitForObjective state
--
function Init_Mission01_TDTacticsTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	KAS_SetHidden("TDTacticsTrial", 1)    --kasfHideShips(kasAITeamShipsPtr("TDTacticsTrial"))
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	
end 


--
--  "watch" code for Mission01 TDTacticsTrial WaitForObjective state
--
function Watch_Mission01_TDTacticsTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	if (G_BeginTacticsTrial == 1) then 
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDTacticsTrial", "Watch_Mission01_TDTacticsTrial_WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_GetIntoPosition", "Watch_Mission01_TDTacticsTrial_WaitForObjective")
	Init_Mission01_TDTacticsTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsTrial WaitingForShips state
--
function Init_Mission01_TDTacticsTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	
end 


--
--  "watch" code for Mission01 TDTacticsTrial WaitingForShips state
--
function Watch_Mission01_TDTacticsTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	if (SobGroup_Count("TDTacticsTrial") == 16) then     --kasfShipsCount(kasAITeamShipsPtr("TDTacticsTrial"))
	
	KAS_SetFormation(TeamName, "Wall")    --kasfFormationWall()
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDTacticsTrial", "Watch_Mission01_TDTacticsTrial_WaitingForShips")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_GetIntoPosition", "Watch_Mission01_TDTacticsTrial_WaitingForShips")
	Init_Mission01_TDTacticsTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsTrial GetIntoPosition state
--
function Init_Mission01_TDTacticsTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	KAS_TeamHyperspaceIn(TeamName, "TacticsTrialPING")    --kasfTeamHyperspaceIn(kasVectorPtr("TacticsTrialPING"))
	
end 


--
--  "watch" code for Mission01 TDTacticsTrial GetIntoPosition state
--
function Watch_Mission01_TDTacticsTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	if (SobGroup_IsShipNearPoint(TeamName, "TacticsTrialPING", 175) ~= 0) then     --kasfNearby(kasVectorPtr("TacticsTrialPING"), 500)
	
	KAS_PingAddShips("TDTacticsTrial", "TacticsTrialPING", "$60397")    --kasfPingAddShips(kasAITeamShipsPtr("TDTacticsTrial"), "TacticsTrialPING")
	--kasJump("WatchForAttackers")
	--KASRule_Remove("FSM_Mission01_TDTacticsTrial", "Watch_Mission01_TDTacticsTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_WatchForAttackers", "Watch_Mission01_TDTacticsTrial_GetIntoPosition")
	Init_Mission01_TDTacticsTrial_WatchForAttackers(TeamName)
	return
	end 
	if (G_TDTacticsGoToWaiting == 1) then 
	
	G_TDTacticsGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDTacticsTrial", "Watch_Mission01_TDTacticsTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_WaitingForShips", "Watch_Mission01_TDTacticsTrial_GetIntoPosition")
	Init_Mission01_TDTacticsTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsTrial WatchForAttackers state
--
function Init_Mission01_TDTacticsTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	
end 


--
--  "watch" code for Mission01 TDTacticsTrial WatchForAttackers state
--
function Watch_Mission01_TDTacticsTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDTacticsTrial
	--TeamName = TDTacticsTrial
	if (G_TDTacticsGoToWaiting == 1) then 
	
	G_TDTacticsGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDTacticsTrial", "Watch_Mission01_TDTacticsTrial_WatchForAttackers")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsTrial_WaitingForShips", "Watch_Mission01_TDTacticsTrial_WatchForAttackers")
	Init_Mission01_TDTacticsTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsRepopulation FSM
--
function Init_Mission01_TDTacticsRepopulation(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	--kasJump("WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsRepopulation_WatchForFailure", "Init_Mission01_TDTacticsRepopulation")
	Init_Mission01_TDTacticsRepopulation_WatchForFailure(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDTacticsRepopulation FSM
--
function Watch_Mission01_TDTacticsRepopulation(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	
end 


--
--  "initialize" code for Mission01 TDTacticsRepopulation WatchForFailure state
--
function Init_Mission01_TDTacticsRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 16)    --kasfRequestShips("TargetDrone", 16)
	
end 


--
--  "watch" code for Mission01 TDTacticsRepopulation WatchForFailure state
--
function Watch_Mission01_TDTacticsRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	if ((SobGroup_Count("TDTacticsTrial") == 0) and (G_PlayerHasUsedTactics == 0) and (G_BeginScoutTrialTactics == 1)) then     --kasfShipsCount(kasAITeamShipsPtr("TDTacticsTrial"))
	
	KAS_PingRemove("TacticsTrialPING", "$60397")    --kasfPingRemove("TacticsTrialPING")
	G_TacticsTrialRepopulation = 1 --created,set
	--kasJump("GiveDronesToTeam")
	--KASRule_Remove("FSM_Mission01_TDTacticsRepopulation", "Watch_Mission01_TDTacticsRepopulation_WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsRepopulation_GiveDronesToTeam", "Watch_Mission01_TDTacticsRepopulation_WatchForFailure")
	Init_Mission01_TDTacticsRepopulation_GiveDronesToTeam(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDTacticsRepopulation GiveDronesToTeam state
--
function Init_Mission01_TDTacticsRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	
end 


--
--  "watch" code for Mission01 TDTacticsRepopulation GiveDronesToTeam state
--
function Watch_Mission01_TDTacticsRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDTacticsRepopulation
	--TeamName = TDTacticsRepopulation
	if (SobGroup_Count("TDTacticsRepopulation") == 16) then     --kasfShipsCount(kasAITeamShipsPtr("TDTacticsRepopulation"))
	
	SobGroup_SobGroupAdd("TDTacticsTrial", "TDTacticsRepopulation")    --kasfReinforceTeamWithShips(kasAITeamPtr("TDTacticsTrial"), kasAITeamShipsPtr("TDTacticsRepopulation"))
	SobGroup_FillSubtract("TDTacticsRepopulation", "TDTacticsRepopulation", "TDTacticsRepopulation")    --kasfShipsRemove(kasAITeamShipsPtr("TDTacticsRepopulation"), kasAITeamShipsPtr("TDTacticsRepopulation"))
	G_TDTacticsGoToWaiting = 1 --created,set
	--kasJump("WatchForFailure")
	--KASRule_Remove("FSM_Mission01_TDTacticsRepopulation", "Watch_Mission01_TDTacticsRepopulation_GiveDronesToTeam")
	KASRule_Add(TeamName, "Watch_Mission01_TDTacticsRepopulation_WatchForFailure", "Watch_Mission01_TDTacticsRepopulation_GiveDronesToTeam")
	Init_Mission01_TDTacticsRepopulation_WatchForFailure(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial FSM
--
function Init_Mission01_TDInterceptorTrial(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	--kasJump("WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitForObjective", "Init_Mission01_TDInterceptorTrial")
	Init_Mission01_TDInterceptorTrial_WaitForObjective(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial FSM
--
function Watch_Mission01_TDInterceptorTrial(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial WaitForObjective state
--
function Init_Mission01_TDInterceptorTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 9)    --kasfRequestShips("TargetDrone", 9)
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial WaitForObjective state
--
function Watch_Mission01_TDInterceptorTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (G_BeginInterceptorTrial == 1) then 
	
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitingForShips", "Watch_Mission01_TDInterceptorTrial_WaitForObjective")
	Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial WaitingForShips state
--
function Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial WaitingForShips state
--
function Watch_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (SobGroup_Count("TDInterceptorTrial") == 9) then     --kasfShipsCount(kasAITeamShipsPtr("TDInterceptorTrial"))
	
	KAS_SetHidden("TDInterceptorTrial", 0)    --kasfUnhideShips(kasAITeamShipsPtr("TDInterceptorTrial"))
	KAS_SetFormation(TeamName, "Delta3D")    --kasfFormationDelta3D()
	KAS_SetHidden("TDInterceptorTrial", 1)    --kasfHideShips(kasAITeamShipsPtr("TDInterceptorTrial"))
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WaitingForShips")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_GetIntoPosition", "Watch_Mission01_TDInterceptorTrial_WaitingForShips")
	Init_Mission01_TDInterceptorTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial GetIntoPosition state
--
function Init_Mission01_TDInterceptorTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	KAS_TeamHyperspaceIn(TeamName, "InterceptorTrialPING")    --kasfTeamHyperspaceIn(kasVectorPtr("InterceptorTrialPING"))
	KASTimer_Start(TDIntHyperspaceInTimer[TeamName], 12)
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial GetIntoPosition state
--
function Watch_Mission01_TDInterceptorTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (KASTimer_IsExpiredIfSoDestroy(TDIntHyperspaceInTimer[TeamName]) ~= 0) then 
	
	if (G_NeverCreateTDIntPingAgain == 0) then 
	
	KAS_PingAddShips("TDInterceptorTrial", "InterceptorTrialPING", "$60398")    --kasfPingAddShips(kasAITeamShipsPtr("TDInterceptorTrial"), "InterceptorTrialPING")
	G_NeverCreateTDIntPingAgain = 1 --created,set
	end 
	SobGroup_SetHealth(TeamName, 600 / 100)    --kasfTeamSetPercentDamaged(600)
	--kasJump("WatchForAttackers")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WatchForAttackers", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	Init_Mission01_TDInterceptorTrial_WatchForAttackers(TeamName)
	return
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_AdvancedTDFOUND") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AdvancedTDFOUND"))
	
	KAS_FillShipsByType_Normal("GrowSelection_InterceptorTargets", "GrowSelection_AdvancedTDFOUND", "Interceptor")    --kasfShipsSelectType(kasGrowSelectionPtr("InterceptorTargets"), kasGrowSelectionPtr("AdvancedTDFOUND"), "HeavyInterceptor")
	if (SobGroup_Count("GrowSelection_InterceptorTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorTargets"))
	
	G_PlayerHasUsedInterceptors = 1 --created,set
	if (G_NeverCreateTDIntPingAgain == 0) then 
	
	KAS_PingAddShips("TDInterceptorTrial", "InterceptorTrialPING", "$60398")    --kasfPingAddShips(kasAITeamShipsPtr("TDInterceptorTrial"), "InterceptorTrialPING")
	G_NeverCreateTDIntPingAgain = 1 --created,set
	end 
	SobGroup_SetHealth(TeamName, 600 / 100)    --kasfTeamSetPercentDamaged(600)
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_Attack", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	Init_Mission01_TDInterceptorTrial_Attack(TeamName)
	return
	end 
	end 
	if (G_TDInterceptorGoToWaiting == 1) then 
	
	G_TDInterceptorGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitingForShips", "Watch_Mission01_TDInterceptorTrial_GetIntoPosition")
	Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial WatchForAttackers state
--
function Init_Mission01_TDInterceptorTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial WatchForAttackers state
--
function Watch_Mission01_TDInterceptorTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (KAS_FindEnemiesInside("InterceptorTRIAL", "GrowSelection_AdvancedTDFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("InterceptorTRIAL"), kasGrowSelectionPtr("AdvancedTDFOUND"), 2500)
	
	KAS_FillShipsByType_Normal("GrowSelection_InterceptorTargets", "GrowSelection_AdvancedTDFOUND", "Interceptor")    --kasfShipsSelectType(kasGrowSelectionPtr("InterceptorTargets"), kasGrowSelectionPtr("AdvancedTDFOUND"), "HeavyInterceptor")
	if (SobGroup_Count("GrowSelection_InterceptorTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorTargets"))
	
	G_PlayerHasUsedInterceptors = 1 --created,set
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WatchForAttackers")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_Attack", "Watch_Mission01_TDInterceptorTrial_WatchForAttackers")
	Init_Mission01_TDInterceptorTrial_Attack(TeamName)
	return
	end 
	end 
	if (G_TDInterceptorGoToWaiting == 1) then 
	
	G_TDInterceptorGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WatchForAttackers")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitingForShips", "Watch_Mission01_TDInterceptorTrial_WatchForAttackers")
	Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial Attack state
--
function Init_Mission01_TDInterceptorTrial_Attack(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	KAS_Attack(TeamName, "GrowSelection_InterceptorTargets")    --kasfAttack(kasGrowSelectionPtr("InterceptorTargets"))
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial Attack state
--
function Watch_Mission01_TDInterceptorTrial_Attack(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (KAS_FindEnemiesInside("InterceptorTRIAL", "GrowSelection_AdvancedTDFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("InterceptorTRIAL"), kasGrowSelectionPtr("AdvancedTDFOUND"), 1000)
	
	KAS_FillShipsByType_Normal("GrowSelection_InterceptorTargets", "GrowSelection_AdvancedTDFOUND", "Interceptor")    --kasfShipsSelectType(kasGrowSelectionPtr("InterceptorTargets"), kasGrowSelectionPtr("AdvancedTDFOUND"), "HeavyInterceptor")
	if (SobGroup_Count("GrowSelection_InterceptorTargets") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorTargets"))
	
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	KASTimer_Start(NotUnderAttack[TeamName], 10)
	--kasJump("WaitToPatrolAgain")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_Attack")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain", "Watch_Mission01_TDInterceptorTrial_Attack")
	Init_Mission01_TDInterceptorTrial_WaitToPatrolAgain(TeamName)
	return
	end 
	end 
	if (G_TDInterceptorGoToWaiting == 1) then 
	
	G_TDInterceptorGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_Attack")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitingForShips", "Watch_Mission01_TDInterceptorTrial_Attack")
	Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDInterceptorTrial WaitToPatrolAgain state
--
function Init_Mission01_TDInterceptorTrial_WaitToPatrolAgain(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	
end 


--
--  "watch" code for Mission01 TDInterceptorTrial WaitToPatrolAgain state
--
function Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain(TeamName)
	--FSM: FSM_Mission01_TDInterceptorTrial
	--TeamName = TDInterceptorTrial
	if (KAS_FindEnemiesInside("InterceptorTRIAL", "GrowSelection_AdvancedTDFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("InterceptorTRIAL"), kasGrowSelectionPtr("AdvancedTDFOUND"), 2500)
	
	KAS_FillShipsByType_Normal("GrowSelection_InterceptorTargets", "GrowSelection_AdvancedTDFOUND", "Interceptor")    --kasfShipsSelectType(kasGrowSelectionPtr("InterceptorTargets"), kasGrowSelectionPtr("AdvancedTDFOUND"), "HeavyInterceptor")
	if (SobGroup_Count("GrowSelection_InterceptorTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorTargets"))
	
	G_PlayerHasUsedInterceptors = 1 --created,set
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_Attack", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	Init_Mission01_TDInterceptorTrial_Attack(TeamName)
	return
	end 
	end 
	if (G_TDInterceptorGoToWaiting == 1) then 
	
	G_TDInterceptorGoToWaiting = 0 --destroyed
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WaitingForShips", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	Init_Mission01_TDInterceptorTrial_WaitingForShips(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(NotUnderAttack[TeamName]) ~= 0) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("InterceptorTrialPING"))    --kasfMoveTo(kasVectorPtr("InterceptorTrialPING"))
	--kasJump("WatchForAttackers")
	--KASRule_Remove("FSM_Mission01_TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	KASRule_Add(TeamName, "Watch_Mission01_TDInterceptorTrial_WatchForAttackers", "Watch_Mission01_TDInterceptorTrial_WaitToPatrolAgain")
	Init_Mission01_TDInterceptorTrial_WatchForAttackers(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDIntRepopulation FSM
--
function Init_Mission01_TDIntRepopulation(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	--kasJump("WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDIntRepopulation_WatchForFailure", "Init_Mission01_TDIntRepopulation")
	Init_Mission01_TDIntRepopulation_WatchForFailure(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDIntRepopulation FSM
--
function Watch_Mission01_TDIntRepopulation(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	
end 


--
--  "initialize" code for Mission01 TDIntRepopulation WatchForFailure state
--
function Init_Mission01_TDIntRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 9)    --kasfRequestShips("TargetDrone", 9)
	
end 


--
--  "watch" code for Mission01 TDIntRepopulation WatchForFailure state
--
function Watch_Mission01_TDIntRepopulation_WatchForFailure(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	if ((SobGroup_Count("TDInterceptorTrial") == 0) and (G_PlayerHasUsedInterceptors == 0) and (KASObjective_GetState(ObjectiveID_ScoutTrialFormations) == 1)) then     --kasfObjectiveGet("ScoutTrialFormations")    --kasfShipsCount(kasAITeamShipsPtr("TDInterceptorTrial"))
	
	KAS_PingRemove("InterceptorTrialPING", "$60398")    --kasfPingRemove("InterceptorTrialPING")
	G_InterceptorTrialRepopulation = 1 --created,set
	--kasJump("GiveDronesToTeam")
	--KASRule_Remove("FSM_Mission01_TDIntRepopulation", "Watch_Mission01_TDIntRepopulation_WatchForFailure")
	KASRule_Add(TeamName, "Watch_Mission01_TDIntRepopulation_GiveDronesToTeam", "Watch_Mission01_TDIntRepopulation_WatchForFailure")
	Init_Mission01_TDIntRepopulation_GiveDronesToTeam(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDIntRepopulation GiveDronesToTeam state
--
function Init_Mission01_TDIntRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	
end 


--
--  "watch" code for Mission01 TDIntRepopulation GiveDronesToTeam state
--
function Watch_Mission01_TDIntRepopulation_GiveDronesToTeam(TeamName)
	--FSM: FSM_Mission01_TDIntRepopulation
	--TeamName = TDIntRepopulation
	if (SobGroup_Count("TDIntRepopulation") == 9) then     --kasfShipsCount(kasAITeamShipsPtr("TDIntRepopulation"))
	
	SobGroup_SobGroupAdd("TDInterceptorTrial", "TDIntRepopulation")    --kasfReinforceTeamWithShips(kasAITeamPtr("TDInterceptorTrial"), kasAITeamShipsPtr("TDIntRepopulation"))
	SobGroup_FillSubtract("TDIntRepopulation", "TDIntRepopulation", "TDIntRepopulation")    --kasfShipsRemove(kasAITeamShipsPtr("TDIntRepopulation"), kasAITeamShipsPtr("TDIntRepopulation"))
	G_TDInterceptorGoToWaiting = 1 --created,set
	--kasJump("WatchForFailure")
	--KASRule_Remove("FSM_Mission01_TDIntRepopulation", "Watch_Mission01_TDIntRepopulation_GiveDronesToTeam")
	KASRule_Add(TeamName, "Watch_Mission01_TDIntRepopulation_WatchForFailure", "Watch_Mission01_TDIntRepopulation_GiveDronesToTeam")
	Init_Mission01_TDIntRepopulation_WatchForFailure(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDSalvageTrial FSM
--
function Init_Mission01_TDSalvageTrial(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	KAS_SetHidden("TDSalvageTrial", 1)    --kasfHideShips(kasAITeamShipsPtr("TDSalvageTrial"))
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_WaitForObjective", "Init_Mission01_TDSalvageTrial")
	Init_Mission01_TDSalvageTrial_WaitForObjective(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 TDSalvageTrial FSM
--
function Watch_Mission01_TDSalvageTrial(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	
end 


--
--  "initialize" code for Mission01 TDSalvageTrial WaitForObjective state
--
function Init_Mission01_TDSalvageTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	
end 


--
--  "watch" code for Mission01 TDSalvageTrial WaitForObjective state
--
function Watch_Mission01_TDSalvageTrial_WaitForObjective(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	if (G_BeginSalvageTrial == 1) then 
	
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDSalvageTrial", "Watch_Mission01_TDSalvageTrial_WaitForObjective")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_GetIntoPosition", "Watch_Mission01_TDSalvageTrial_WaitForObjective")
	Init_Mission01_TDSalvageTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDSalvageTrial WaitingForShips state
--
function Init_Mission01_TDSalvageTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	
end 


--
--  "watch" code for Mission01 TDSalvageTrial WaitingForShips state
--
function Watch_Mission01_TDSalvageTrial_WaitingForShips(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	if (SobGroup_Count("TDSalvageTrial") == 1) then     --kasfShipsCount(kasAITeamShipsPtr("TDSalvageTrial"))
	
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	--kasJump("GetIntoPosition")
	--KASRule_Remove("FSM_Mission01_TDSalvageTrial", "Watch_Mission01_TDSalvageTrial_WaitingForShips")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_GetIntoPosition", "Watch_Mission01_TDSalvageTrial_WaitingForShips")
	Init_Mission01_TDSalvageTrial_GetIntoPosition(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDSalvageTrial GetIntoPosition state
--
function Init_Mission01_TDSalvageTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	KAS_TeamHyperspaceIn(TeamName, "SalvageTrialPING")    --kasfTeamHyperspaceIn(kasVectorPtr("SalvageTrialPING"))
	
end 


--
--  "watch" code for Mission01 TDSalvageTrial GetIntoPosition state
--
function Watch_Mission01_TDSalvageTrial_GetIntoPosition(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	if (SobGroup_IsShipNearPoint(TeamName, "SalvageTrialPING", 175) ~= 0) then     --kasfNearby(kasVectorPtr("SalvageTrialPING"), 500)
	
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	end 
	if (SobGroup_IsShipNearPoint(TeamName, "SalvageTrialPING", 175) ~= 0) then     --kasfNearby(kasVectorPtr("SalvageTrialPING"), 500)
	
	KAS_PingAddShips("TDSalvageTrial", "SalvageTrialPING", "$60399")    --kasfPingAddShips(kasAITeamShipsPtr("TDSalvageTrial"), "SalvageTrialPING")
	--kasJump("WatchForAttackers")
	--KASRule_Remove("FSM_Mission01_TDSalvageTrial", "Watch_Mission01_TDSalvageTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_WatchForAttackers", "Watch_Mission01_TDSalvageTrial_GetIntoPosition")
	Init_Mission01_TDSalvageTrial_WatchForAttackers(TeamName)
	return
	end 
	if ((SobGroup_Count("TDSalvageTrial") == 0) and (G_PlayerHasSalvaged == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("TDSalvageTrial"))
	
	KAS_PingRemove("SalvageTrialPING", "$60399")    --kasfPingRemove("SalvageTrialPING")
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 1)    --kasfRequestShips("TargetDrone", 1)
	G_SalvageTrialRepopulation = 1 --created,set
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDSalvageTrial", "Watch_Mission01_TDSalvageTrial_GetIntoPosition")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_WaitingForShips", "Watch_Mission01_TDSalvageTrial_GetIntoPosition")
	Init_Mission01_TDSalvageTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 TDSalvageTrial WatchForAttackers state
--
function Init_Mission01_TDSalvageTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	
end 


--
--  "watch" code for Mission01 TDSalvageTrial WatchForAttackers state
--
function Watch_Mission01_TDSalvageTrial_WatchForAttackers(TeamName)
	--FSM: FSM_Mission01_TDSalvageTrial
	--TeamName = TDSalvageTrial
	if ((SobGroup_Count("TDSalvageTrial") == 0) and (G_PlayerHasSalvaged == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("TDSalvageTrial"))
	
	KAS_PingRemove("SalvageTrialPING", "$60399")    --kasfPingRemove("SalvageTrialPING")
	KAS_RequestShips(TeamName, "Tai_TargetDrone", 1)    --kasfRequestShips("TargetDrone", 1)
	G_SalvageTrialRepopulation = 1 --created,set
	--kasJump("WaitingForShips")
	--KASRule_Remove("FSM_Mission01_TDSalvageTrial", "Watch_Mission01_TDSalvageTrial_WatchForAttackers")
	KASRule_Add(TeamName, "Watch_Mission01_TDSalvageTrial_WaitingForShips", "Watch_Mission01_TDSalvageTrial_WatchForAttackers")
	Init_Mission01_TDSalvageTrial_WaitingForShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission01 R2Mothership FSM
--
function Init_Mission01_R2Mothership(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	--kasJump("Hide")
	KASRule_Add(TeamName, "Watch_Mission01_R2Mothership_Hide", "Init_Mission01_R2Mothership")
	Init_Mission01_R2Mothership_Hide(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 R2Mothership FSM
--
function Watch_Mission01_R2Mothership(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	
end 


--
--  "initialize" code for Mission01 R2Mothership Hide state
--
function Init_Mission01_R2Mothership_Hide(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	KAS_SetHidden("R2Mothership", 1)    --kasfHideShips(kasAITeamShipsPtr("R2Mothership"))
	--kasJump("Null")
	KASRule_Add(TeamName, "Watch_Mission01_R2Mothership_Null", "Init_Mission01_R2Mothership_Hide")
	Init_Mission01_R2Mothership_Null(TeamName)
	return
	
end 


--
--  "watch" code for Mission01 R2Mothership Hide state
--
function Watch_Mission01_R2Mothership_Hide(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	
end 


--
--  "initialize" code for Mission01 R2Mothership Null state
--
function Init_Mission01_R2Mothership_Null(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	
end 


--
--  "watch" code for Mission01 R2Mothership Null state
--
function Watch_Mission01_R2Mothership_Null(TeamName)
	--FSM: FSM_Mission01_R2Mothership
	--TeamName = R2Mothership
	
end 


--
--  "initialize" code for Mission01 mission
--
function Init_Mission01(MissionName)
	--FSM: FSM_Mission01
	--MissionName = "Mission01"
	--kasFSMCreate("FleetIntel")
	KASRule_AddFSM("FleetIntel", "Watch_Mission01_FleetIntel", "Init_Mission01")
	Init_Mission01_FleetIntel("FleetIntel")
	--kasFSMCreate("TDFormationTrial")
	KASRule_AddFSM("TDFormationTrial", "Watch_Mission01_TDFormationTrial", "Init_Mission01")
	Init_Mission01_TDFormationTrial("TDFormationTrial")
	--kasFSMCreate("TDFormationRepopulation")
	KASRule_AddFSM("TDFormationRepopulation", "Watch_Mission01_TDFormationRepopulation", "Init_Mission01")
	Init_Mission01_TDFormationRepopulation("TDFormationRepopulation")
	--kasFSMCreate("TDTacticsTrial")
	KASRule_AddFSM("TDTacticsTrial", "Watch_Mission01_TDTacticsTrial", "Init_Mission01")
	Init_Mission01_TDTacticsTrial("TDTacticsTrial")
	--kasFSMCreate("TDTacticsRepopulation")
	KASRule_AddFSM("TDTacticsRepopulation", "Watch_Mission01_TDTacticsRepopulation", "Init_Mission01")
	Init_Mission01_TDTacticsRepopulation("TDTacticsRepopulation")
	--kasFSMCreate("TDSalvageTrial")
	KASRule_AddFSM("TDSalvageTrial", "Watch_Mission01_TDSalvageTrial", "Init_Mission01")
	Init_Mission01_TDSalvageTrial("TDSalvageTrial")
	--kasFSMCreate("TDInterceptorTrial")
	KASRule_AddFSM("TDInterceptorTrial", "Watch_Mission01_TDInterceptorTrial", "Init_Mission01")
	Init_Mission01_TDInterceptorTrial("TDInterceptorTrial")
	--kasFSMCreate("TDIntRepopulation")
	KASRule_AddFSM("TDIntRepopulation", "Watch_Mission01_TDIntRepopulation", "Init_Mission01")
	Init_Mission01_TDIntRepopulation("TDIntRepopulation")
	--kasFSMCreate("R2Mothership")
	KASRule_AddFSM("R2Mothership", "Watch_Mission01_R2Mothership", "Init_Mission01")
	Init_Mission01_R2Mothership("R2Mothership")
	KAS_GrantResearchOption(0, "FighterDrive")    --kasfPlayerAcquiredTechnology("MassDrive1Kt")
	KAS_UnrestrictResearchOption(0, "FighterChassis")    --kasfAllowPlayerToResearch("Chassis1")
	
end 


--
--  "watch" code for Mission01 mission
--
function Watch_Mission01(MissionName)
	--FSM: FSM_Mission01
	--MissionName = "Mission01"
	if (_VIFONCE015 == 0 and (G_Nis1Complete ~= 0)) then  -- "ifonce" #15
	
	_VIFONCE015 = 1 --created,set;
	KASTimer_Start(TimerID_LocationCardTimer, 1)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_LocationCardTimer) ~= 0) then 
	
	singlePlayerLocationCard("$61050", 5)    --kasfLocationCard(5000, LSTRING_LocationCard[strCurLanguage])
	end 
	if (_VIFONCE016 == 0 and (G_Nis1Complete ~= 0)) then  -- "ifonce" #16
	
	_VIFONCE016 = 1 --created,set;
	KASTimer_Start(TimerID_G_FleetIntelTimer, 7)
	end 
	if (_VIFONCE017 == 0 and (G_Nis1Complete ~= 0)) then  -- "ifonce" #17
	
	_VIFONCE017 = 1 --created,set;
	KASTimer_Start(TimerID_G_FCHyperspaceJuice, (RandomIntRange(145, 180)))    --kasfRandom(145, 180)
	end 
	if (_VIFONCE018 == 0 and ((KASObjective_GetState(ObjectiveID_Harvest) ~= 0) and (KASObjective_GetState(ObjectiveID_ResearchShip) ~= 0) and (KASObjective_GetState(ObjectiveID_ScoutTrialFormations) ~= 0))) then  -- "ifonce" #18    --kasfObjectiveGet("ScoutTrialFormations")    --kasfObjectiveGet("ResearchShip")    --kasfObjectiveGet("Harvest")
	
	_VIFONCE018 = 1 --created,set;
	KASTimer_Start(TimerID_G_FCCryoTrayJuice, (RandomIntRange(55, 115)))    --kasfRandom(55, 115)
	end 
	if (_VIFONCE019 == 0 and (KASObjective_GetState(ObjectiveID_ResearchShip) == 1)) then  -- "ifonce" #19    --kasfObjectiveGet("ResearchShip")
	
	_VIFONCE019 = 1 --created,set;
	KASTimer_Start(TimerID_G_ResearchPopup, 5)
	end 
	if (_VIFONCE020 == 0 and ((Player_CanResearch(0, "CorvetteDrive") ~= 0) and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0) and (Player_IsResearching(0) == 0) and (G_PlayedCorvetteChassisUnderwayRasp == 0))) then  -- "ifonce" #20    --kasfCanPlayerResearch("MassDrive10Kt")    --kasfDoesPlayerHave("Chassis1")    --kasfTechIsResearching()
	
	_VIFONCE020 = 1 --created,set;
	KASTimer_Start(TimerID_PlayCorvetteChassisRasp, RandomIntRange(10, 30))    --kasfRandom(10, 30)
	G_PlayedCorvetteChassisRasp = 1 --created,set
	end 
	if (_VIFONCE021 == 0 and ((Player_CanResearch(0, "CorvetteDrive") ~= 0) and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0) and (G_PlayedCorvetteChassisRasp == 0))) then  -- "ifonce" #21    --kasfCanPlayerResearch("MassDrive10Kt")    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE021 = 1 --created,set;
	KASTimer_Start(TimerID_PlayCorvetteChassisUnderwayRasp, RandomIntRange(10, 30))    --kasfRandom(10, 30)
	G_PlayedCorvetteChassisUnderwayRasp = 1 --created,set
	end 
	if (_VIFONCE022 == 0 and (KAS_GatheredRUs() >= 500)) then  -- "ifonce" #22    --kasfRUsEnemyCollected()
	
	_VIFONCE022 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_Harvest, 1)    --kasfObjectiveSet("Harvest", 1)
	end 
	if (_VIFONCE023 == 0 and (KAS_FindPlayerShipsOfType("GrowSelection_Temp", "ResearchShip", 0) ~= 0)) then  -- "ifonce" #23    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("Temp"), "ResearchShip")
	
	_VIFONCE023 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ResearchShip, 1)    --kasfObjectiveSet("ResearchShip", 1)
	end 
	if (_VIFONCE024 == 0 and (G_OnlyCreateResearchObjOnce == 1)) then  -- "ifonce" #24
	
	_VIFONCE024 = 1 --created,set;
	G_CreateResearchObj = 1 --created,set
	end 
	if (_VIFONCE025 == 0 and (G_CreateResearchObj == 1)) then  -- "ifonce" #25
	
	_VIFONCE025 = 1 --created,set;
	KASObjective_Add(ObjectiveID_StartResearch, "$61053", OT_Secondary)    --kasfObjectiveCreateSecondary("StartResearch", LSTRING_StartResearchTASKBAR[strCurLanguage], LSTRING_StartResearchTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_StartResearch, "$60802")
	end 
	if (_VIFONCE026 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #26    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE026 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_StartResearch, 1)    --kasfObjectiveSet("StartResearch", 1)
	end 
	if (_VIFONCE027 == 0 and (G_Nis1Complete ~= 0)) then  -- "ifonce" #27
	
	_VIFONCE027 = 1 --created,set;
	KASTimer_Start(TimerID_G_BeginScoutTrials, (RandomIntRange(35, 55)))    --kasfRandom(35, 55)
	end 
	if (_VIFONCE028 == 0 and (G_BeginScoutTrialFormations == 1)) then  -- "ifonce" #28
	
	_VIFONCE028 = 1 --created,set;
	KASObjective_Add(ObjectiveID_ScoutTrialFormations, "$61054", OT_Primary)    --kasfObjectiveCreate("ScoutTrialFormations", LSTRING_ScoutTrialFormationTASKBAR[strCurLanguage], LSTRING_ScoutTrialFormationTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ScoutTrialFormations, "$60803")
	end 
	if (G_PlayerHasUsedFormation == 0) then 
	
        SobGroup_CreateIfNotExist("GrowSelection_FormTrialTDUnderAttackFighters")
        KAS_FillShipsByClass_Normal("GrowSelection_FormTrialTDUnderAttackFighters", "GrowSelection_FormTrialTDUnderAttack", "Fighter_hw1")
    	if (SobGroup_Count("GrowSelection_FormTrialTDUnderAttackFighters") > 0) then 
    	
    	    G_PlayerHasUsedFormation = 1 --created,set
    	end 
		-- BB - Hack to allow mission completion
		G_PlayerHasUsedFormation = 1 --created,set
	end 
	if (_VIFONCE029 == 0 and ((SobGroup_Count("TDFormationTrial") == 0) and (G_PlayerHasUsedFormation == 1))) then  -- "ifonce" #29    --kasfShipsCount(kasAITeamShipsPtr("TDFormationTrial"))
	
	_VIFONCE029 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ScoutTrialFormations, 1)    --kasfObjectiveSet("ScoutTrialFormations", 1)
	KAS_PingRemove("FormationTrialPING", "$60396")    --kasfPingRemove("FormationTrialPING")
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KASTimer_Start(TimerID_G_BeginTacticsTrialNow, 7)
	G_BeginTacticsTrial = 1 --created,set
	end 
	if (_VIFONCE030 == 0 and (G_BeginScoutTrialTactics == 1)) then  -- "ifonce" #30
	
	_VIFONCE030 = 1 --created,set;
	KASObjective_Add(ObjectiveID_ScoutTrialTactics, "$61055", OT_Primary)    --kasfObjectiveCreate("ScoutTrialTactics", LSTRING_ScoutTrialTacticsTASKBAR[strCurLanguage], LSTRING_ScoutTrialTacticsTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ScoutTrialTactics, "$60804")
	end 
	if (G_PlayerHasUsedTactics == 0) then 
	
	--if (((KASShipROEGet("GrowSelection_TacticsTrialTDUnderAttack") == 0) or (KASShipTacticsGet("GrowSelection_TacticsTrialTDUnderAttack") == 2)) and (G_BeginScoutTrialTactics == 1)) then     --kasfTutShipsTactics(kasGrowSelectionPtr("TacticsTrialTDUnderAttack"))    --kasfTutShipsTactics(kasGrowSelectionPtr("TacticsTrialTDUnderAttack"))
	if ((G_BeginScoutTrialTactics == 1)) then     --kasfTutShipsTactics(kasGrowSelectionPtr("TacticsTrialTDUnderAttack"))    --kasfTutShipsTactics(kasGrowSelectionPtr("TacticsTrialTDUnderAttack"))
	
	G_PlayerHasUsedTactics = 1 --created,set
	end 
	end 
	if (_VIFONCE031 == 0 and ((SobGroup_Count("TDTacticsTrial") == 0) and (G_PlayerHasUsedTactics == 1))) then  -- "ifonce" #31    --kasfShipsCount(kasAITeamShipsPtr("TDTacticsTrial"))
	
	_VIFONCE031 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ScoutTrialTactics, 1)    --kasfObjectiveSet("ScoutTrialTactics", 1)
	KAS_PingRemove("TacticsTrialPING", "$60397")    --kasfPingRemove("TacticsTrialPING")
	KASTimer_Start(TimerID_G_BeginSalvageTrialNow, 10)
	G_BeginSalvageTrial = 1 --created,set
	end 
	if (_VIFONCE032 == 0 and ((KAS_PlayerHasResearch(0, "FighterChassis") ~= 0) and ((Player_GetRU(0) > 55) or (KAS_FindPlayerShipsOfType("GrowSelection_Stuff", "Interceptor", 0) ~= 0)) and (G_ReadyToHYPERSPACE == 0))) then  -- "ifonce" #32    --kasfDoesPlayerHave("Chassis1")    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("Stuff"), "HeavyInterceptor")    --kasfRUsGet(0)
	
	_VIFONCE032 = 1 --created,set;
	end 
	if (_VIFONCE033 == 0 and (G_BeginInterceptorTrialNOW == 1)) then  -- "ifonce" #33
	
	_VIFONCE033 = 1 --created,set;
	KASObjective_Add(ObjectiveID_InterceptorTrial, "$61057", OT_Secondary)    --kasfObjectiveCreateSecondary("InterceptorTrial", LSTRING_InterceptorTrialTASKBAR[strCurLanguage], LSTRING_InterceptorTrialTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_InterceptorTrial, "$60806")
	G_InterceptorTrialRepopulation = 0 --destroyed
	end 
	if (_VIFONCE034 == 0 and ((G_PlayerHasUsedInterceptors == 1) and (SobGroup_Count("TDInterceptorTrial") == 0))) then  -- "ifonce" #34    --kasfShipsCount(kasAITeamShipsPtr("TDInterceptorTrial"))
	
	_VIFONCE034 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_InterceptorTrial, 1)    --kasfObjectiveSet("InterceptorTrial", 1)
	KAS_PingRemove("InterceptorTrialPING", "$60398")    --kasfPingRemove("InterceptorTrialPING")
	end 
	if (_VIFONCE035 == 0 and (G_CreateSalvageObjective == 1)) then  -- "ifonce" #35
	
	_VIFONCE035 = 1 --created,set;
	KASObjective_Add(ObjectiveID_SalvageTrial, "$61056", OT_Primary)    --kasfObjectiveCreate("SalvageTrial", LSTRING_SalvageTrialTASKBAR[strCurLanguage], LSTRING_SalvageTrialTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_SalvageTrial, "$60805")
	end 
	if (G_SalvageTD ~= 0) then 
	
	KAS_PingRemove("SalvageTrialPING", "$60399")    --kasfPingRemove("SalvageTrialPING")
	end 
	if (_VIFONCE036 == 0 and (G_SalvageTrialHasBegun == 1)) then  -- "ifonce" #36
	
	_VIFONCE036 = 1 --created,set;
	G_SalvageTS = 0 --set
	end 
	if (_VIFONCE037 == 0 and ((G_SalvageTrialHasBegun == 1) and (G_SalvageTS ~= 0))) then  -- "ifonce" #37
	
	_VIFONCE037 = 1 --created,set;
	G_PlayerHasSalvaged = 1 --created,set
	end 
	if (_VIFONCE038 == 0 and (G_PlayerHasSalvaged == 1)) then  -- "ifonce" #38
	
	_VIFONCE038 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_SalvageTrial, 1)    --kasfObjectiveSet("SalvageTrial", 1)
	KAS_PingRemove("SalvageTrialPING", "$60399")    --kasfPingRemove("SalvageTrialPING")
	end 
	if (_VIFONCE039 == 0 and ((KASObjective_GetState(ObjectiveID_Harvest) == 1) and (KASObjective_GetState(ObjectiveID_ResearchShip) == 1) and (KASObjective_GetState(ObjectiveID_ScoutTrialFormations) == 1) and (KASObjective_GetState(ObjectiveID_ScoutTrialTactics) == 1) and (KASObjective_GetState(ObjectiveID_SalvageTrial) == 1))) then  -- "ifonce" #39    --kasfObjectiveGet("SalvageTrial")    --kasfObjectiveGet("ScoutTrialTactics")    --kasfObjectiveGet("ScoutTrialFormations")    --kasfObjectiveGet("ResearchShip")    --kasfObjectiveGet("Harvest")
	
	_VIFONCE039 = 1 --created,set;
	G_ReadyToHYPERSPACE = 1 --created,set
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_MissionCompleteTimer) ~= 0) then 
	
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_HyperspaceTASKBAR[strCurLanguage], LSTRING_HyperspaceTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end 
	if (_VIFONCE040 == 0 and (G_ReadyToHYPERSPACE == 1)) then  -- "ifonce" #40
	
	_VIFONCE040 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayFleetCommandSpeech, 4)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_PlayFleetCommandSpeech) ~= 0) then 
	
	end 	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_AdvancedTDFOUND")
    KASSobGroup_Create("GrowSelection_FormTrialTDUnderAttack")
    KASSobGroup_Create("GrowSelection_InterceptorTargets")
    KASSobGroup_Create("GrowSelection_Stuff")
    KASSobGroup_Create("GrowSelection_TacticsTrialTDUnderAttack")
    KASSobGroup_Create("GrowSelection_Temp")
    KASSobGroup_CreateIfNotExist("FleetIntel")
    KASSobGroup_CreateIfNotExist("TDFormationRepopulation")
    KASSobGroup_CreateIfNotExist("TDFormationTrial")
    KASSobGroup_CreateIfNotExist("TDIntRepopulation")
    KASSobGroup_CreateIfNotExist("TDInterceptorTrial")
    KASSobGroup_CreateIfNotExist("TDSalvageTrial")
    KASSobGroup_CreateIfNotExist("TDTacticsRepopulation")
    KASSobGroup_CreateIfNotExist("TDTacticsTrial")

    Sound_SpeechSubtitlePath("speech:missions/Mission01/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;FleetIntel;R2Mothership;TDFormationRepopulation;TDFormationTrial;TDIntRepopulation;TDInterceptorTrial;TDSalvageTrial;TDTacticsRepopulation;TDTacticsTrial;")
    KAS_SetColourSchemeColours(0, {0.556862745098039,0.623529411764706,0.631372549019608}, {1, 1, 1}, "DATA:Badges/Taiidan.tga", {0.365,0.553,0.667}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Kushan.tga", {0.921,0.75,0.419}, "data:/effect/trails/kus_trail_clr.tga")
    KAS_SetColourSchemeColours(5, {1,1,1}, {1, 1, 1}, "DATA:Badges/Taiidan.tga", {0.8,0.40156862745098,0}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Kushan.tga", {0.921,0.75,0.419}, "data:/effect/trails/kus_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Kushan.tga", {0.921,0.75,0.419}, "data:/effect/trails/kus_trail_clr.tga")
    KAS_SetColourScheme("TDFormationTrial", 0)
    KAS_SetColourScheme("TDSalvageTrial", 5)
    KAS_SetColourScheme("TDTacticsTrial", 0)
    Player_SetPlayerName(1, "$60395")

    singlePlayerOnStartOrLoad(01)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(01)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission01", "Watch_Mission01", "OnInit")
    Init_Mission01("Mission01")
    KAS_SetLetterboxStart(1, 5, 0, 0)
    singlePlayerGamePauseDuringNIS()
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/battle/A01_mission1and16", MUS_Ambient )
    KAS_SetFormation("TDFormationTrial", "Delta")
    KAS_SetFormation("TDTacticsTrial", "Delta")
	SobGroup_FormStrikeGroup ("TDFormationTrial", "Wall")
	SobGroup_FormStrikeGroup ("TDTacticsTrial", "Wall")
end

