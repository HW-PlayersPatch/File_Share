--
--  Generated\Mission13.c
--
--  Finite state machine routines for "Mission13" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission13.kp by KAS2C Version 2.05
--


--#include "Generated\Mission13.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_AutoGuns = 0
G_CLICK_EstablishCommunicationsLink = 0
G_GunTimer = 0
G_TeleporterInUse = 0
G_ThisTeleporterIs = 0
SetMediumGuns = 0
_VIFONCE020 = 0
_VIFONCE021 = 0
_VIFONCE022 = 0
_VIFONCE023 = 0
_VIFONCE024 = 0
_VIFONCE025 = 0
_VIFONCE026 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.
--G_DawgHasBone : see SinglePlayerFlow.lua, nReferences: 2
--G_DockedWJydHQ : see SinglePlayerFlow.lua, nReferences: 1

--Following are Team-Scoped variables: referenced differently than globals.
DawgHasBone = {["JYDTeam"] = 0}
DistTo1 = {["JYDTeam"] = 0}
DistTo2 = {["JYDTeam"] = 0}
DistTo3 = {["JYDTeam"] = 0}
DistTo4 = {["JYDTeam"] = 0}
DistTo5 = {["JYDTeam"] = 0}
DistTo6 = {["JYDTeam"] = 0}
DistTo7 = {["JYDTeam"] = 0}
DistTo8 = {["JYDTeam"] = 0}
MinDist = {["JYDTeam"] = 0}
Missing = {["DummyTeam"] = 0}
Nearest2Enemy = {["JYDTeam"] = 0}
WhatDumpPoint = {["JYDTeam"] = 0}
WhereDump = {["JYDTeam"] = 0}
_VIFONCE001 = {["DummyTeam"] = 0}
_VIFONCE002 = {["DummyTeam"] = 0}
_VIFONCE003 = {["DummyTeam"] = 0}
_VIFONCE004 = {["DummyTeam"] = 0}
_VIFONCE005 = {["DummyTeam"] = 0}
_VIFONCE006 = {["DummyTeam"] = 0}
_VIFONCE007 = {["DummyTeam"] = 0}
_VIFONCE008 = {["DummyTeam"] = 0}
_VIFONCE009 = {["DummyTeam"] = 0}
_VIFONCE010 = {["DummyTeam"] = 0}
_VIFONCE011 = {["DummyTeam"] = 0}
_VIFONCE012 = {["DummyTeam"] = 0}
_VIFONCE013 = {["Defector"] = 0}
_VIFONCE014 = {["JYDTeam"] = 0}
_VIFONCE015 = {["JYDTeam"] = 0}
_VIFONCE016 = {["LGun1"] = 0, ["LGun10"] = 0, ["LGun11"] = 0, ["LGun12"] = 0, ["LGun13"] = 0, ["LGun14"] = 0, ["LGun15"] = 0, ["LGun16"] = 0, ["LGun17"] = 0, ["LGun18"] = 0, ["LGun19"] = 0, ["LGun2"] = 0, ["LGun20"] = 0, ["LGun21"] = 0, ["LGun22"] = 0, ["LGun23"] = 0, ["LGun24"] = 0, ["LGun25"] = 0, ["LGun26"] = 0, ["LGun27"] = 0, ["LGun28"] = 0, ["LGun29"] = 0, ["LGun3"] = 0, ["LGun30"] = 0, ["LGun31"] = 0, ["LGun32"] = 0, ["LGun4"] = 0, ["LGun5"] = 0, ["LGun6"] = 0, ["LGun7"] = 0, ["LGun8"] = 0, ["LGun9"] = 0}
_VIFONCE017 = {["LGun1"] = 0, ["LGun10"] = 0, ["LGun11"] = 0, ["LGun12"] = 0, ["LGun13"] = 0, ["LGun14"] = 0, ["LGun15"] = 0, ["LGun16"] = 0, ["LGun17"] = 0, ["LGun18"] = 0, ["LGun19"] = 0, ["LGun2"] = 0, ["LGun20"] = 0, ["LGun21"] = 0, ["LGun22"] = 0, ["LGun23"] = 0, ["LGun24"] = 0, ["LGun25"] = 0, ["LGun26"] = 0, ["LGun27"] = 0, ["LGun28"] = 0, ["LGun29"] = 0, ["LGun3"] = 0, ["LGun30"] = 0, ["LGun31"] = 0, ["LGun32"] = 0, ["LGun4"] = 0, ["LGun5"] = 0, ["LGun6"] = 0, ["LGun7"] = 0, ["LGun8"] = 0, ["LGun9"] = 0}
_VIFONCE018 = {["SGun1"] = 0, ["SGun10"] = 0, ["SGun11"] = 0, ["SGun12"] = 0, ["SGun13"] = 0, ["SGun14"] = 0, ["SGun15"] = 0, ["SGun16"] = 0, ["SGun17"] = 0, ["SGun18"] = 0, ["SGun19"] = 0, ["SGun2"] = 0, ["SGun20"] = 0, ["SGun21"] = 0, ["SGun22"] = 0, ["SGun23"] = 0, ["SGun24"] = 0, ["SGun25"] = 0, ["SGun26"] = 0, ["SGun27"] = 0, ["SGun28"] = 0, ["SGun29"] = 0, ["SGun3"] = 0, ["SGun30"] = 0, ["SGun31"] = 0, ["SGun32"] = 0, ["SGun33"] = 0, ["SGun34"] = 0, ["SGun35"] = 0, ["SGun36"] = 0, ["SGun37"] = 0, ["SGun38"] = 0, ["SGun39"] = 0, ["SGun4"] = 0, ["SGun40"] = 0, ["SGun41"] = 0, ["SGun42"] = 0, ["SGun43"] = 0, ["SGun44"] = 0, ["SGun45"] = 0, ["SGun46"] = 0, ["SGun47"] = 0, ["SGun48"] = 0, ["SGun49"] = 0, ["SGun5"] = 0, ["SGun50"] = 0, ["SGun51"] = 0, ["SGun52"] = 0, ["SGun53"] = 0, ["SGun54"] = 0, ["SGun55"] = 0, ["SGun56"] = 0, ["SGun57"] = 0, ["SGun58"] = 0, ["SGun59"] = 0, ["SGun6"] = 0, ["SGun60"] = 0, ["SGun61"] = 0, ["SGun62"] = 0, ["SGun63"] = 0, ["SGun64"] = 0, ["SGun65"] = 0, ["SGun7"] = 0, ["SGun8"] = 0, ["SGun9"] = 0}
_VIFONCE019 = {["SGun1"] = 0, ["SGun10"] = 0, ["SGun11"] = 0, ["SGun12"] = 0, ["SGun13"] = 0, ["SGun14"] = 0, ["SGun15"] = 0, ["SGun16"] = 0, ["SGun17"] = 0, ["SGun18"] = 0, ["SGun19"] = 0, ["SGun2"] = 0, ["SGun20"] = 0, ["SGun21"] = 0, ["SGun22"] = 0, ["SGun23"] = 0, ["SGun24"] = 0, ["SGun25"] = 0, ["SGun26"] = 0, ["SGun27"] = 0, ["SGun28"] = 0, ["SGun29"] = 0, ["SGun3"] = 0, ["SGun30"] = 0, ["SGun31"] = 0, ["SGun32"] = 0, ["SGun33"] = 0, ["SGun34"] = 0, ["SGun35"] = 0, ["SGun36"] = 0, ["SGun37"] = 0, ["SGun38"] = 0, ["SGun39"] = 0, ["SGun4"] = 0, ["SGun40"] = 0, ["SGun41"] = 0, ["SGun42"] = 0, ["SGun43"] = 0, ["SGun44"] = 0, ["SGun45"] = 0, ["SGun46"] = 0, ["SGun47"] = 0, ["SGun48"] = 0, ["SGun49"] = 0, ["SGun5"] = 0, ["SGun50"] = 0, ["SGun51"] = 0, ["SGun52"] = 0, ["SGun53"] = 0, ["SGun54"] = 0, ["SGun55"] = 0, ["SGun56"] = 0, ["SGun57"] = 0, ["SGun58"] = 0, ["SGun59"] = 0, ["SGun6"] = 0, ["SGun60"] = 0, ["SGun61"] = 0, ["SGun62"] = 0, ["SGun63"] = 0, ["SGun64"] = 0, ["SGun65"] = 0, ["SGun7"] = 0, ["SGun8"] = 0, ["SGun9"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
CominForYouTimer = {["DummyTeam"] = 2}
FIComPINGTimer = {["DummyTeam"] = 3}
FIFocusTimer = {["DummyTeam"] = 4}
FIGetOnWithItTimer = {["DummyTeam"] = 5}
FILostPINGTimer = {["DummyTeam"] = 6}
FIOpenSensorsTimer = {["DummyTeam"] = 7}
FISeTimer = {["DummyTeam"] = 8}
FITeleporterPINGTimer = {["DummyTeam"] = 9}
FuckTimer = {["DummyTeam"] = 10}
GateTimer = {["JYDTeam"] = 11}
HyperspaceTimer = {["JYDTeam"] = 12}
OldInAndOut = {["DummyTeam"] = 13}
StoleMyFirstShipTimer = {["DummyTeam"] = 14}
TimerTransOut = {["DummyTeam"] = 15}


--kas timer names, with mappings to indices
TimerID_BigGunTimer = 0
TimerID_CloakingTimer = 1


--KAS objective names, set by KASObjective_Add
ObjectiveID_EstablishCommunicationsLink = 0
ObjectiveID_Hyperspace = 1
ObjectiveID_Count = 2


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_JunkyardHQPOINTER = 0
PointerID_LastHerePOINTER = 1
PointerID_TeleporterPOINTER1 = 2
PointerID_TeleporterPOINTER2 = 3
PointerID_TeleporterPOINTER3 = 4
PointerID_TeleporterPOINTER4 = 5
PointerID_TeleporterPOINTER5 = 6
PointerID_TeleporterPOINTER6 = 7
PointerID_TeleporterPOINTER7 = 8
PointerID_TeleporterPOINTER8 = 9


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"13 - The Karos Graveyard",
	"13 - Le Cimetière de Karos",
	"13 – Der Friedhof von Karros",
	"13 - El cementerio de Karos",
	"13 - Il cimitero di Karos", }
LSTRING_LocationCard = {  -- multilingual strings
	"The Karos Graveyard - The Shining Hinterlands",
	"Cimetière de Karos - Arrière-pays des Lumières",
	"Der Friedhof von Karros – Das leuchtende Hinterland",
	"El cementerio de Karos - El interior brillante",
	"Il cimitero di Karos - il Territorio Splendente", }
LSTRING_Objective1 = {  -- multilingual strings
	"Dock Strike Craft With Communications Relay",
	"Amarrage de l'Unité légère avec le Relais de Communications",
	"Kampfschiff an Kommunikationsrelais andocken.",
	"Acoplar nave de ataque a relé de comunicaciones",
	"Attracca con la nave d'assalto al ripetitore di comunicazione", }
LSTRING_HyperSpaceEnabled = {  -- multilingual strings
	"Hyperspace Enabled.",
	"Hyperespace actif.",
	"Hypersprung-Aggregat eingeschaltet.",
	"Hiperespacio activado.",
	"Iperspazio attivato.", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                HYPERSPACE",
	"                HYPERESPACE",
	"        HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission13 MissionFlow FSM
--
function Init_Mission13_MissionFlow(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FuckTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow FSM
--
function Watch_Mission13_MissionFlow(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE001[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	--kasJump("Intro")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Intro", "Watch_Mission13_MissionFlow")
	Init_Mission13_MissionFlow_Intro(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow Intro state
--
function Init_Mission13_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60674", 3)    --kasfSpeechEvent((674 + 2048 + 268435456), 0)
	KASTimer_Start(FIGetOnWithItTimer[TeamName], 8)
end 


--
--  "watch" code for Mission13 MissionFlow Intro state
--
function Watch_Mission13_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIGetOnWithItTimer[TeamName]) ~= 0) then 
	
	--kasJump("ComTransIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Intro")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ComTransIn", "Watch_Mission13_MissionFlow_Intro")
	Init_Mission13_MissionFlow_ComTransIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow ComTransIn state
--
function Init_Mission13_MissionFlow_ComTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (G_CLICK_EstablishCommunicationsLink ~= 0) then 
	
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	else
	
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	end 
	--kasJump("ComOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ComOpenSensors", "Init_Mission13_MissionFlow_ComTransIn")
	Init_Mission13_MissionFlow_ComOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 MissionFlow ComTransIn state
--
function Watch_Mission13_MissionFlow_ComTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission13 MissionFlow ComOpenSensors state
--
function Init_Mission13_MissionFlow_ComOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission13 MissionFlow ComOpenSensors state
--
function Watch_Mission13_MissionFlow_ComOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FICom")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_ComOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FICom", "Watch_Mission13_MissionFlow_ComOpenSensors")
	Init_Mission13_MissionFlow_FICom(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow ComFocus state
--
function Init_Mission13_MissionFlow_ComFocus(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIFocusTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission13 MissionFlow ComFocus state
--
function Watch_Mission13_MissionFlow_ComFocus(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIFocusTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("JunkyardHQ")    --kasfTutCameraFocus(kasAITeamShipsPtr("JunkyardHQ"))
	--kasJump("FICom")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_ComFocus")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FICom", "Watch_Mission13_MissionFlow_ComFocus")
	Init_Mission13_MissionFlow_FICom(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FICom state
--
function Init_Mission13_MissionFlow_FICom(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60675", 3)    --kasfSpeechEvent((675 + 4096 + 268435456), 0)
	KASObjective_Add(ObjectiveID_EstablishCommunicationsLink, "$61652", OT_Primary)    --kasfObjectiveCreate("EstablishCommunicationsLink", LSTRING_Objective1[strCurLanguage], LSTRING_Objective1[strCurLanguage])
	Objective_SetDescription(ObjectiveID_EstablishCommunicationsLink, "$60840")
	KASTimer_Start(FISeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow FICom state
--
function Watch_Mission13_MissionFlow_FICom(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIComPING")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FICom")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FIComPING", "Watch_Mission13_MissionFlow_FICom")
	Init_Mission13_MissionFlow_FIComPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FIComPING state
--
function Init_Mission13_MissionFlow_FIComPING(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_PingAddShips("JunkyardHQ", "JunkyardHQ", "$60673")    --kasfPingAddShips(kasAITeamShipsPtr("JunkyardHQ"), "JunkyardHQ")
	KASTimer_Start(FIComPINGTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow FIComPING state
--
function Watch_Mission13_MissionFlow_FIComPING(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIComPointer")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FIComPING")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FIComPointer", "Watch_Mission13_MissionFlow_FIComPING")
	Init_Mission13_MissionFlow_FIComPointer(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIComPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIComPointer")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FIComPING")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FIComPointer", "Watch_Mission13_MissionFlow_FIComPING")
	Init_Mission13_MissionFlow_FIComPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FIComPointer state
--
function Init_Mission13_MissionFlow_FIComPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_JunkyardHQPOINTER = KASPointer_AddShip("JunkyardHQ")    --kasfTutSetPointerTargetShip("JunkyardHQPOINTER", kasAITeamShipsPtr("JunkyardHQ"))
	KASTimer_Start(FIComPINGTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission13 MissionFlow FIComPointer state
--
function Watch_Mission13_MissionFlow_FIComPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (G_CLICK_EstablishCommunicationsLink ~= 0) then 
	
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FIComPointer")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_AlmostDone", "Watch_Mission13_MissionFlow_FIComPointer")
	Init_Mission13_MissionFlow_AlmostDone(TeamName)
	return
	end 
	elseif ((Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) or (KASTimer_IsExpiredIfSoDestroy(FIComPINGTimer[TeamName]) ~= 0)) then     --kasfIntelEventEnded()
	
	--kasJump("ComTransOut")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FIComPointer")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ComTransOut", "Watch_Mission13_MissionFlow_FIComPointer")
	Init_Mission13_MissionFlow_ComTransOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow ComTransOut state
--
function Init_Mission13_MissionFlow_ComTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	KASTimer_Start(TimerTransOut[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow ComTransOut state
--
function Watch_Mission13_MissionFlow_ComTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_ComTransOut")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_AlmostDone", "Watch_Mission13_MissionFlow_ComTransOut")
	Init_Mission13_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow LostTransIn state
--
function Init_Mission13_MissionFlow_LostTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("LostOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_LostOpenSensors", "Init_Mission13_MissionFlow_LostTransIn")
	Init_Mission13_MissionFlow_LostOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 MissionFlow LostTransIn state
--
function Watch_Mission13_MissionFlow_LostTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission13 MissionFlow LostOpenSensors state
--
function Init_Mission13_MissionFlow_LostOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow LostOpenSensors state
--
function Watch_Mission13_MissionFlow_LostOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FILost")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_LostOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FILost", "Watch_Mission13_MissionFlow_LostOpenSensors")
	Init_Mission13_MissionFlow_FILost(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FILost state
--
function Init_Mission13_MissionFlow_FILost(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60676", 3)    --kasfSpeechEvent((676 + 4096 + 268435456), 0)
	KASTimer_Start(FISeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow FILost state
--
function Watch_Mission13_MissionFlow_FILost(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if ((Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) or (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0)) then     --kasfIntelEventEnded()
	
	--kasJump("FILostPointer")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FILost")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FILostPointer", "Watch_Mission13_MissionFlow_FILost")
	Init_Mission13_MissionFlow_FILostPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FILostPointer state
--
function Init_Mission13_MissionFlow_FILostPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_LastHerePOINTER = KASPointer_AddShip("JYDTeam")    --kasfTutSetPointerTargetShip("LastHerePOINTER", kasAITeamShipsPtr("JYDTeam"))
	KASTimer_Start(FILostPINGTimer[TeamName], 6)
	
end 


--
--  "watch" code for Mission13 MissionFlow FILostPointer state
--
function Watch_Mission13_MissionFlow_FILostPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FILostPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("LostTransOut")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FILostPointer")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_LostTransOut", "Watch_Mission13_MissionFlow_FILostPointer")
	Init_Mission13_MissionFlow_LostTransOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow LostTransOut state
--
function Init_Mission13_MissionFlow_LostTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	KASTimer_Start(TimerTransOut[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow LostTransOut state
--
function Watch_Mission13_MissionFlow_LostTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_LostTransOut")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_AlmostDone", "Watch_Mission13_MissionFlow_LostTransOut")
	Init_Mission13_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow TeleporterTransIn state
--
function Init_Mission13_MissionFlow_TeleporterTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("TeleporterOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_TeleporterOpenSensors", "Init_Mission13_MissionFlow_TeleporterTransIn")
	Init_Mission13_MissionFlow_TeleporterOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 MissionFlow TeleporterTransIn state
--
function Watch_Mission13_MissionFlow_TeleporterTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission13 MissionFlow TeleporterOpenSensors state
--
function Init_Mission13_MissionFlow_TeleporterOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow TeleporterOpenSensors state
--
function Watch_Mission13_MissionFlow_TeleporterOpenSensors(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FITeleporter")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_TeleporterOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FITeleporter", "Watch_Mission13_MissionFlow_TeleporterOpenSensors")
	Init_Mission13_MissionFlow_FITeleporter(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FITeleporter state
--
function Init_Mission13_MissionFlow_FITeleporter(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60677", 3)    --kasfSpeechEvent((677 + 4096 + 268435456), 0)
	KASTimer_Start(FISeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow FITeleporter state
--
function Watch_Mission13_MissionFlow_FITeleporter(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FITeleporterPointer")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FITeleporter")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FITeleporterPointer", "Watch_Mission13_MissionFlow_FITeleporter")
	Init_Mission13_MissionFlow_FITeleporterPointer(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FITeleporterPointer")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FITeleporter")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FITeleporterPointer", "Watch_Mission13_MissionFlow_FITeleporter")
	Init_Mission13_MissionFlow_FITeleporterPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FITeleporterPointer state
--
function Init_Mission13_MissionFlow_FITeleporterPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_TeleporterPOINTER1 = KASPointer_AddVolume("TeleportTrigger1")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER1", kasVolumePtr("TeleportTrigger1"))
	PointerID_TeleporterPOINTER2 = KASPointer_AddVolume("TeleportTrigger2")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER2", kasVolumePtr("TeleportTrigger2"))
	PointerID_TeleporterPOINTER3 = KASPointer_AddVolume("TeleportTrigger3")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER3", kasVolumePtr("TeleportTrigger3"))
	PointerID_TeleporterPOINTER4 = KASPointer_AddVolume("TeleportTrigger4")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER4", kasVolumePtr("TeleportTrigger4"))
	PointerID_TeleporterPOINTER5 = KASPointer_AddVolume("TeleportTrigger5")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER5", kasVolumePtr("TeleportTrigger5"))
	PointerID_TeleporterPOINTER6 = KASPointer_AddVolume("TeleportTrigger6")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER6", kasVolumePtr("TeleportTrigger6"))
	PointerID_TeleporterPOINTER7 = KASPointer_AddVolume("TeleportTrigger7")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER7", kasVolumePtr("TeleportTrigger7"))
	PointerID_TeleporterPOINTER8 = KASPointer_AddVolume("TeleportTrigger8")    --kasfTutSetPointerTargetAIVolume("TeleporterPOINTER8", kasVolumePtr("TeleportTrigger8"))
	KASTimer_Start(FITeleporterPINGTimer[TeamName], 6)
	
end 


--
--  "watch" code for Mission13 MissionFlow FITeleporterPointer state
--
function Watch_Mission13_MissionFlow_FITeleporterPointer(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("TeleporterTransOut")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FITeleporterPointer")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_TeleporterTransOut", "Watch_Mission13_MissionFlow_FITeleporterPointer")
	Init_Mission13_MissionFlow_TeleporterTransOut(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FITeleporterPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("TeleporterTransOut")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FITeleporterPointer")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_TeleporterTransOut", "Watch_Mission13_MissionFlow_FITeleporterPointer")
	Init_Mission13_MissionFlow_TeleporterTransOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow TeleporterTransOut state
--
function Init_Mission13_MissionFlow_TeleporterTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	KASTimer_Start(TimerTransOut[TeamName], 1)
	
end 


--
--  "watch" code for Mission13 MissionFlow TeleporterTransOut state
--
function Watch_Mission13_MissionFlow_TeleporterTransOut(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_TeleporterTransOut")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_AlmostDone", "Watch_Mission13_MissionFlow_TeleporterTransOut")
	Init_Mission13_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FindMissing state
--
function Init_Mission13_MissionFlow_FindMissing(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (SobGroup_FillShipsByIndexRange("GrowSelection_LeadGone", "GrowSelection_GoneShips", (Missing[TeamName]), 1) ~= 0) then     --kasfShipsSelectIndex(kasGrowSelectionPtr("LeadGone"), kasGrowSelectionPtr("GoneShips"), (___KAS_SCOPED_VAR____Missing_))
	
	if (KAS_ShipHasBeenRendered("GrowSelection_LeadGone", 3) ~= 0) then     --kasfRenderedShips(kasGrowSelectionPtr("LeadGone"), 3)
	
	--kasJump("MissingTransIn")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_MissingTransIn", "Init_Mission13_MissionFlow_FindMissing")
	Init_Mission13_MissionFlow_MissingTransIn(TeamName)
	return
	else
	
	Missing[TeamName] = Missing[TeamName] + 1
	--kasJump("FindMissing")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FindMissing", "Init_Mission13_MissionFlow_FindMissing")
	Init_Mission13_MissionFlow_FindMissing(TeamName)
	return
	end 
	else
	
	--kasJump("Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Init_Mission13_MissionFlow_FindMissing")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission13 MissionFlow FindMissing state
--
function Watch_Mission13_MissionFlow_FindMissing(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission13 MissionFlow MissingTransIn state
--
function Init_Mission13_MissionFlow_MissingTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(TimerTransOut[TeamName], 4)
	
end 


--
--  "watch" code for Mission13 MissionFlow MissingTransIn state
--
function Watch_Mission13_MissionFlow_MissingTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("GrowSelection_LeadGone")    --kasfTutCameraFocus(kasGrowSelectionPtr("LeadGone"))
	KAS_FocusShips("GrowSelection_LeadGone")    --kasfTutCameraFocus(kasGrowSelectionPtr("LeadGone"))
	--kasJump("FIMissing")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_MissingTransIn")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FIMissing", "Watch_Mission13_MissionFlow_MissingTransIn")
	Init_Mission13_MissionFlow_FIMissing(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow FIMissing state
--
function Init_Mission13_MissionFlow_FIMissing(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60678", 3)    --kasfSpeechEvent((678 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission13 MissionFlow FIMissing state
--
function Watch_Mission13_MissionFlow_FIMissing(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_FIMissing")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Watch_Mission13_MissionFlow_FIMissing")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow ImInTransIn state
--
function Init_Mission13_MissionFlow_ImInTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(TimerTransOut[TeamName], 6)
	
end 


--
--  "watch" code for Mission13 MissionFlow ImInTransIn state
--
function Watch_Mission13_MissionFlow_ImInTransIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("JunkyardHQ")    --kasfTutCameraFocus(kasAITeamShipsPtr("JunkyardHQ"))
	KAS_FocusShips("JunkyardHQ")    --kasfTutCameraFocus(kasAITeamShipsPtr("JunkyardHQ"))
	--kasJump("ImIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_ImInTransIn")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ImIn", "Watch_Mission13_MissionFlow_ImInTransIn")
	Init_Mission13_MissionFlow_ImIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow ImIn state
--
function Init_Mission13_MissionFlow_ImIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_FindShipsNearPoint("GrowSelection_Temp", KAS_NamedCentrePosition("JunkyardHQ"), 1050)    --kasfFindShipsNearPoint(kasGrowSelectionPtr("Temp"), kasTeamsVectorPtr("JunkyardHQ"), 3000)
	KAS_ShipsSelectByPlayer("GrowSelection_Docker", "GrowSelection_Temp", 0)    --kasfShipsSelectEnemy(kasGrowSelectionPtr("Docker"), kasGrowSelectionPtr("Temp"))
	Subtitle_Add(Actor_HW1_Ambassador, "$60680", 3)    --kasfSpeechEventShips(kasGrowSelectionPtr("Docker"), (680 + 1024 + 268435456), 0)
	KASTimer_Start(OldInAndOut[TeamName], 5)
	
end 


--
--  "watch" code for Mission13 MissionFlow ImIn state
--
function Watch_Mission13_MissionFlow_ImIn(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE002[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(OldInAndOut[TeamName]) ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	--kasJump("Farewell")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_ImIn")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Farewell", "Watch_Mission13_MissionFlow_ImIn")
	Init_Mission13_MissionFlow_Farewell(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow Farewell state
--
function Init_Mission13_MissionFlow_Farewell(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("Defector")    --kasfTutCameraFocus(kasAITeamShipsPtr("Defector"))
	KAS_FocusShips("Defector")    --kasfTutCameraFocus(kasAITeamShipsPtr("Defector"))
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_Defector, "$60681", 3)    --kasfSpeechEvent((681 + 262144 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_Defector, "$60682", 3)    --kasfSpeechEvent((682 + 262144 + 268435456), 0)
	end 
	
end 


--
--  "watch" code for Mission13 MissionFlow Farewell state
--
function Watch_Mission13_MissionFlow_Farewell(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE003[TeamName] == 0 and (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0)) then  -- "ifonce" #3    --kasfIntelEventEnded()
	
	_VIFONCE003[TeamName] = 1 --created,set;
	KAS_SubtitleAddOnce(Actor_HW1_Defector, "$60683", 3)    --kasfSpeechEvent((683 + 262144 + 268435456), 0)
	KASTimer_Start(FISeTimer[TeamName], 6)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0) then 
	
	KAS_MessageSendToAll(TeamName, "GetGoneYou")    --kasfMsgSendAll("GetGoneYou")
	--kasJump("TimeToGo")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Farewell")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_TimeToGo", "Watch_Mission13_MissionFlow_Farewell")
	Init_Mission13_MissionFlow_TimeToGo(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow TimeToGo state
--
function Init_Mission13_MissionFlow_TimeToGo(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60684", 3)    --kasfSpeechEvent((684 + 4096 + 268435456), 0)
	KASTimer_Start(FISeTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission13 MissionFlow TimeToGo state
--
function Watch_Mission13_MissionFlow_TimeToGo(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0) then 
	
	KASObjective_SetState(ObjectiveID_EstablishCommunicationsLink, 1)    --kasfObjectiveSet("EstablishCommunicationsLink", 1)
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_TimeToGo")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Watch_Mission13_MissionFlow_TimeToGo")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow BigGuns state
--
function Init_Mission13_MissionFlow_BigGuns(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60781", 3)    --kasfSpeechEvent((691 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission13 MissionFlow BigGuns state
--
function Watch_Mission13_MissionFlow_BigGuns(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_BigGuns")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Watch_Mission13_MissionFlow_BigGuns")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow CloakingTech state
--
function Init_Mission13_MissionFlow_CloakingTech(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60780", 3)    --kasfSpeechEvent((780 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission13 MissionFlow CloakingTech state
--
function Watch_Mission13_MissionFlow_CloakingTech(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_CloakingTech")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Watch_Mission13_MissionFlow_CloakingTech")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow Autoguns state
--
function Init_Mission13_MissionFlow_Autoguns(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60679", 3)    --kasfSpeechEvent((679 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission13 MissionFlow Autoguns state
--
function Watch_Mission13_MissionFlow_Autoguns(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Autoguns")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Watch_Mission13_MissionFlow_Autoguns")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 MissionFlow AlmostDone state
--
function Init_Mission13_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	--kasJump("Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Done", "Init_Mission13_MissionFlow_AlmostDone")
	Init_Mission13_MissionFlow_Done(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 MissionFlow AlmostDone state
--
function Watch_Mission13_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission13 MissionFlow Done state
--
function Init_Mission13_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	G_CLICK_EstablishCommunicationsLink = 0 --destroyed
	
end 


--
--  "watch" code for Mission13 MissionFlow Done state
--
function Watch_Mission13_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission13_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE004[TeamName] == 0 and (KAS_MessageReceived(TeamName, "CominForYou") ~= 0)) then  -- "ifonce" #4    --kasfMsgReceived("CominForYou")
	
	_VIFONCE004[TeamName] = 1 --created,set;
	KASTimer_Start(CominForYouTimer[TeamName], 2)
	end 
	if (_VIFONCE005[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(CominForYouTimer[TeamName]) ~= 0)) then  -- "ifonce" #5
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("TeleporterTransIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_TeleporterTransIn", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_TeleporterTransIn(TeamName)
	return
	end 
	if (_VIFONCE006[TeamName] == 0 and (KAS_MessageReceived(TeamName, "StoleMyFirstShip") ~= 0)) then  -- "ifonce" #6    --kasfMsgReceived("StoleMyFirstShip")
	
	_VIFONCE006[TeamName] = 1 --created,set;
	KASTimer_Start(StoleMyFirstShipTimer[TeamName], 5)
	end 
	if (_VIFONCE007[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(StoleMyFirstShipTimer[TeamName]) ~= 0)) then  -- "ifonce" #7
	
	_VIFONCE007[TeamName] = 1 --created,set;
	--kasJump("LostTransIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_LostTransIn", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_LostTransIn(TeamName)
	return
	end 
	if (_VIFONCE008[TeamName] == 0 and (KAS_MessageReceived(TeamName, "FoundShip") ~= 0)) then  -- "ifonce" #8    --kasfMsgReceived("FoundShip")
	
	_VIFONCE008[TeamName] = 1 --created,set;
	Missing[TeamName] = 0 --created,set
	--kasJump("FindMissing")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_FindMissing", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_FindMissing(TeamName)
	return
	end 
	if (_VIFONCE009[TeamName] == 0 and (KAS_MessageReceived(TeamName, "BigGuns") ~= 0)) then  -- "ifonce" #9    --kasfMsgReceived("BigGuns")
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("BigGuns")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_BigGuns", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_BigGuns(TeamName)
	return
	end 
	if (_VIFONCE010[TeamName] == 0 and (KAS_MessageReceived(TeamName, "CloakingTech") ~= 0)) then  -- "ifonce" #10    --kasfMsgReceived("CloakingTech")
	
	_VIFONCE010[TeamName] = 1 --created,set;
	--kasJump("CloakingTech")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_CloakingTech", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_CloakingTech(TeamName)
	return
	end 
	if (_VIFONCE011[TeamName] == 0 and (G_AutoGuns == 1)) then  -- "ifonce" #11
	
	_VIFONCE011[TeamName] = 1 --created,set;
	--kasJump("Autoguns")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_Autoguns", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_Autoguns(TeamName)
	return
	end 
	if (_VIFONCE012[TeamName] == 0 and (G_DockedWJydHQ == 1)) then  -- "ifonce" #12
	
	_VIFONCE012[TeamName] = 1 --created,set;
	--kasJump("ImInTransIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ImInTransIn", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_ImInTransIn(TeamName)
	return
	end 
	if (G_CLICK_EstablishCommunicationsLink ~= 0) then 
	
	--kasJump("ComTransIn")
	--KASRule_Remove("FSM_Mission13_MissionFlow", "Watch_Mission13_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission13_MissionFlow_ComTransIn", "Watch_Mission13_MissionFlow_Done")
	Init_Mission13_MissionFlow_ComTransIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 Defector FSM
--
function Init_Mission13_Defector(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	KAS_TeamAttributesSet(TeamName, 128)    --kasfTeamAttributesBitSet(128)
	KAS_TeamAttributesSet(TeamName, 256)    --kasfTeamAttributesBitSet(256)
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	KAS_ShipsSetRetaliation(TeamName, 0)    --kasfShipsSetNonRetaliation((&kasThisTeamPtr->shipList))
	--kasJump("PreWait")
	KASRule_Add(TeamName, "Watch_Mission13_Defector_PreWait", "Init_Mission13_Defector")
	Init_Mission13_Defector_PreWait(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 Defector FSM
--
function Watch_Mission13_Defector(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	
end 


--
--  "initialize" code for Mission13 Defector PreWait state
--
function Init_Mission13_Defector_PreWait(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	
end 


--
--  "watch" code for Mission13 Defector PreWait state
--
function Watch_Mission13_Defector_PreWait(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_Defector", "Watch_Mission13_Defector_PreWait")
	KASRule_Add(TeamName, "Watch_Mission13_Defector_Waiting", "Watch_Mission13_Defector_PreWait")
	Init_Mission13_Defector_Waiting(TeamName)
	return
	
end 


--
--  "initialize" code for Mission13 Defector Waiting state
--
function Init_Mission13_Defector_Waiting(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	KAS_TeamHyperspaceIn(TeamName, "DefectorPoint")    --kasfTeamHyperspaceIn(kasVectorPtr("DefectorPoint"))
	
end 


--
--  "watch" code for Mission13 Defector Waiting state
--
function Watch_Mission13_Defector_Waiting(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	if (_VIFONCE013[TeamName] == 0 and (KAS_MessageReceived(TeamName, "GetGoneYou") ~= 0)) then  -- "ifonce" #13    --kasfMsgReceived("GetGoneYou")
	
	_VIFONCE013[TeamName] = 1 --created,set;
	--kasJump("Leaving")
	--KASRule_Remove("FSM_Mission13_Defector", "Watch_Mission13_Defector_Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_Defector_Leaving", "Watch_Mission13_Defector_Waiting")
	Init_Mission13_Defector_Leaving(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 Defector Leaving state
--
function Init_Mission13_Defector_Leaving(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	
end 


--
--  "watch" code for Mission13 Defector Leaving state
--
function Watch_Mission13_Defector_Leaving(TeamName)
	--FSM: FSM_Mission13_Defector
	--TeamName = Defector
	
end 


--
--  "initialize" code for Mission13 JydHq FSM
--
function Init_Mission13_JydHq(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	KAS_TeamAttributesSet(TeamName, 8192)    --kasfTeamAttributesBitSet(8192)
	KAS_ShipsSetRetaliation(TeamName, 0)    --kasfShipsSetNonRetaliation((&kasThisTeamPtr->shipList))
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_JydHq_Waiting", "Init_Mission13_JydHq")
	Init_Mission13_JydHq_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 JydHq FSM
--
function Watch_Mission13_JydHq(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	
end 


--
--  "initialize" code for Mission13 JydHq Waiting state
--
function Init_Mission13_JydHq_Waiting(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	
end 


--
--  "watch" code for Mission13 JydHq Waiting state
--
function Watch_Mission13_JydHq_Waiting(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	
    --patch code to make the Junkyard Office allied with player (so player can dock) once in range
    --distance threshold comes from JUNKYARDHQ_MUSTBENEAR_TO_DOCK
    SobGroup_CreateIfNotExist("PlayerShipsNearOffice")
    --if (KAS_ShipHasBeenRendered(TeamName, 3) && KAS_FindEnemiesNearTeam(TeamName, "PlayerShipsNearOffice", 20000 * KAS_WORLD_SCALE))
    if (KAS_FindEnemiesNearTeam(TeamName, "PlayerShipsNearOffice", 20000 * KAS_WORLD_SCALE) ~= 0) then 
    
        SobGroup_CreateIfNotExist("PlayerStrikeCraftNearOffice")
        SobGroup_FilterInclude("PlayerStrikeCraftNearOffice", "PlayerShipsNearOffice", "displayFamily", "Fighter")
        if (SobGroup_AddFilterInclude("PlayerStrikeCraftNearOffice", "PlayerShipsNearOffice", "displayFamily", "Corvette") > 0) then 
        
            KAS_TeamAttributesSet(TeamName, 256)             --defect to allied team
            --KAS_ShipsSwitchPlayerOwner(TeamName);             //defect to player team
	        --kasJump("Attack")
	        --KASRule_Remove("FSM_Mission13_JydHq", "Watch_Mission13_JydHq_Waiting")
	        KASRule_Add(TeamName, "Watch_Mission13_JydHq_Attack", "Watch_Mission13_JydHq_Waiting")
	        Init_Mission13_JydHq_Attack(TeamName)
        end 
    end 
end 


--
--  "initialize" code for Mission13 JydHq Attack state
--
function Init_Mission13_JydHq_Attack(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	
end 


--
--  "watch" code for Mission13 JydHq Attack state
--
function Watch_Mission13_JydHq_Attack(TeamName)
	--FSM: FSM_Mission13_JydHq
	--TeamName = "JunkyardHQ"
	
end 


--
--  "initialize" code for Mission13 JYDTeam FSM
--
function Init_Mission13_JYDTeam(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	--___KAS_SCOPED_VAR____Nearest2Enemy_ --created
	--___KAS_SCOPED_VAR____Nearest2Dawg_ --created
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Init_Mission13_JYDTeam")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 JYDTeam FSM
--
function Watch_Mission13_JYDTeam(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	DistTo1[TeamName] = KAS_FindDistance("GATETeleportOutPoint1", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint1"), kasShipsVectorPtr("SnatchVictem"))
	DistTo2[TeamName] = KAS_FindDistance("GATETeleportOutPoint2", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint2"), kasShipsVectorPtr("SnatchVictem"))
	DistTo3[TeamName] = KAS_FindDistance("GATETeleportOutPoint3", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint3"), kasShipsVectorPtr("SnatchVictem"))
	DistTo4[TeamName] = KAS_FindDistance("GATETeleportOutPoint4", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint4"), kasShipsVectorPtr("SnatchVictem"))
	DistTo5[TeamName] = KAS_FindDistance("GATETeleportOutPoint5", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint5"), kasShipsVectorPtr("SnatchVictem"))
	DistTo6[TeamName] = KAS_FindDistance("GATETeleportOutPoint6", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint6"), kasShipsVectorPtr("SnatchVictem"))
	DistTo7[TeamName] = KAS_FindDistance("GATETeleportOutPoint7", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint7"), kasShipsVectorPtr("SnatchVictem"))
	DistTo8[TeamName] = KAS_FindDistance("GATETeleportOutPoint8", KAS_NamedCentrePosition("GrowSelection_SnatchVictem")) --created,set    --kasfFindDistance(kasVectorPtr("GATETeleportOutPoint8"), kasShipsVectorPtr("SnatchVictem"))
	MinDist[TeamName] = DistTo1[TeamName] --created,set
	Nearest2Enemy[TeamName] = 1 --created,set
	if (DistTo2[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo2[TeamName] --set
	Nearest2Enemy[TeamName] = (2) --set
	end 
	if (DistTo3[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo3[TeamName] --set
	Nearest2Enemy[TeamName] = (3) --set
	end 
	if (DistTo4[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo4[TeamName] --set
	Nearest2Enemy[TeamName] = (4) --set
	end 
	if (DistTo5[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo5[TeamName] --set
	Nearest2Enemy[TeamName] = (5) --set
	end 
	if (DistTo6[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo6[TeamName] --set
	Nearest2Enemy[TeamName] = (6) --set
	end 
	if (DistTo7[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo7[TeamName] --set
	Nearest2Enemy[TeamName] = (7) --set
	end 
	if (DistTo8[TeamName] < MinDist[TeamName]) then 
	
	MinDist[TeamName] = DistTo8[TeamName] --set
	Nearest2Enemy[TeamName] = (8) --set
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam Waiting state
--
function Init_Mission13_JYDTeam_Waiting(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_Count("GrowSelection_SnatchVictem") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("SnatchVictem"))
	
	SobGroup_FollowPath(TeamName, "DawgPatrol", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("DawgPatrol"))
	end 
	SobGroup_Clear("GrowSelection_DawgSeesYou")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DawgSeesYou"))
	SobGroup_Clear("GrowSelection_CapsInYard")    --kasfGrowSelectionClear(kasGrowSelectionPtr("CapsInYard"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	
end 


--
--  "watch" code for Mission13 JYDTeam Waiting state
--
function Watch_Mission13_JYDTeam_Waiting(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_FindEnemiesInside("DawgGuardArea", "GrowSelection_DawgSeesYou")    --kasfFindEnemiesInside(kasVolumePtr("DawgGuardArea"), kasGrowSelectionPtr("DawgSeesYou"), 1000)
	KAS_FillShipsByType_Normal("GrowSelection_ResourcingVictems", "GrowSelection_DawgSeesYou", "ResourceCollector")    --kasfShipsSelectType(kasGrowSelectionPtr("ResourcingVictems"), kasGrowSelectionPtr("DawgSeesYou"), "ResourceCollector")
	KAS_FillShipsByCapital("GrowSelection_CapsInYard", "GrowSelection_DawgSeesYou")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsInYard"), kasGrowSelectionPtr("DawgSeesYou"))
	if (KAS_FillShipsByClass_Normal("GrowSelection_PotSnatchVictem", "GrowSelection_CapsInYard", "BigCapitalShip") > 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("PotSnatchVictem"), kasGrowSelectionPtr("CapsInYard"), "CLASS_HeavyCruiser")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_PotSnatchVictem", "GrowSelection_CapsInYard", "BigCapitalShip") > 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("PotSnatchVictem"), kasGrowSelectionPtr("CapsInYard"), "CLASS_Carrier")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_PotSnatchVictem", "GrowSelection_CapsInYard", "SmallCapitalShip") > 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("PotSnatchVictem"), kasGrowSelectionPtr("CapsInYard"), "CLASS_Destroyer")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_PotSnatchVictem", "GrowSelection_CapsInYard", "Frigate") > 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("PotSnatchVictem"), kasGrowSelectionPtr("CapsInYard"), "CLASS_Frigate")
	
	elseif (KAS_ShipsAdd("GrowSelection_PotSnatchVictem", "GrowSelection_ResourcingVictems") > 0) then     --kasfShipsAdd(kasGrowSelectionPtr("PotSnatchVictem"), kasGrowSelectionPtr("ResourcingVictems"))
	
	end 
	SobGroup_FillShipsByIndexRange("GrowSelection_SnatchVictem", "GrowSelection_PotSnatchVictem", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("SnatchVictem"), kasGrowSelectionPtr("PotSnatchVictem"), 0)
	if (SobGroup_Count("GrowSelection_SnatchVictem") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("SnatchVictem"))
	
	--kasJump("Wants2Snatch")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Wants2Snatch", "Watch_Mission13_JYDTeam_Waiting")
	Init_Mission13_JYDTeam_Wants2Snatch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam Wants2Snatch state
--
function Init_Mission13_JYDTeam_Wants2Snatch(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateMoveToNearest(TeamName)    --kasfGateMoveToNearest()
	
end 


--
--  "watch" code for Mission13 JYDTeam Wants2Snatch state
--
function Watch_Mission13_JYDTeam_Wants2Snatch(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (KAS_GateShipsOutNearest(TeamName) == 1) then     --kasfGateShipsOutNearest((&kasThisTeamPtr->shipList))
	
	KASTimer_Start(GateTimer[TeamName], 12)
	--kasJump("ChooseWho")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Wants2Snatch")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_ChooseWho", "Watch_Mission13_JYDTeam_Wants2Snatch")
	Init_Mission13_JYDTeam_ChooseWho(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam ChooseWho state
--
function Init_Mission13_JYDTeam_ChooseWho(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	
end 


--
--  "watch" code for Mission13 JYDTeam ChooseWho state
--
function Watch_Mission13_JYDTeam_ChooseWho(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (KASTimer_IsExpiredIfSoDestroy(GateTimer[TeamName]) ~= 0) then 
	
	if (Nearest2Enemy[TeamName] == 1) then 
	
	--kasJump("UseGate1")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate1", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate1(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 2) then 
	
	--kasJump("UseGate2")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate2", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate2(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 3) then 
	
	--kasJump("UseGate3")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate3", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate3(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 4) then 
	
	--kasJump("UseGate4")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate4", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate4(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 5) then 
	
	--kasJump("UseGate5")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate5", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate5(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 6) then 
	
	--kasJump("UseGate6")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate6", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate6(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 7) then 
	
	--kasJump("UseGate7")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate7", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate7(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 8) then 
	
	--kasJump("UseGate8")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate8", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate8(TeamName)
	return
	elseif (Nearest2Enemy[TeamName] == 0) then 
	
	--kasJump("UseGate0")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseWho")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_UseGate0", "Watch_Mission13_JYDTeam_ChooseWho")
	Init_Mission13_JYDTeam_UseGate0(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate1 state
--
function Init_Mission13_JYDTeam_UseGate1(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint1")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint1"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate1 state
--
function Watch_Mission13_JYDTeam_UseGate1(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint1", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint1"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate1")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate1")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate2 state
--
function Init_Mission13_JYDTeam_UseGate2(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint2")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint2"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate2 state
--
function Watch_Mission13_JYDTeam_UseGate2(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint2", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint2"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate2")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate2")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate3 state
--
function Init_Mission13_JYDTeam_UseGate3(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint3")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint3"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate3 state
--
function Watch_Mission13_JYDTeam_UseGate3(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint3", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint3"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate3")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate3")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate4 state
--
function Init_Mission13_JYDTeam_UseGate4(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint4")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint4"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate4 state
--
function Watch_Mission13_JYDTeam_UseGate4(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint4", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint4"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate4")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate4")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate5 state
--
function Init_Mission13_JYDTeam_UseGate5(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint5")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint5"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate5 state
--
function Watch_Mission13_JYDTeam_UseGate5(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint5", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint5"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate5")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate5")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate6 state
--
function Init_Mission13_JYDTeam_UseGate6(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint6")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint6"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate6 state
--
function Watch_Mission13_JYDTeam_UseGate6(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint6", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint6"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate6")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate6")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate7 state
--
function Init_Mission13_JYDTeam_UseGate7(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint7")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint7"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate7 state
--
function Watch_Mission13_JYDTeam_UseGate7(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint7", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint7"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate7")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate7")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate8 state
--
function Init_Mission13_JYDTeam_UseGate8(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint8")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint8"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate8 state
--
function Watch_Mission13_JYDTeam_UseGate8(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint8", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint8"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate8")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate8")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam UseGate0 state
--
function Init_Mission13_JYDTeam_UseGate0(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint0")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint0"))
	
end 


--
--  "watch" code for Mission13 JYDTeam UseGate0 state
--
function Watch_Mission13_JYDTeam_UseGate0(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and SobGroup_IsShipNearPoint(TeamName, "GATETeleportOutPoint0", 175) ~= 0) then     --kasfNearby(kasVectorPtr("GATETeleportOutPoint0"), 500)
	
	--kasJump("Snatching")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_UseGate0")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatching", "Watch_Mission13_JYDTeam_UseGate0")
	Init_Mission13_JYDTeam_Snatching(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam Snatching state
--
function Init_Mission13_JYDTeam_Snatching(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	SobGroup_Clear("GrowSelection_DawgTarget")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DawgTarget"))
	SobGroup_FillShipsByIndexRange("GrowSelection_DawgTarget", "GrowSelection_SnatchVictem", 0, 1)    --kasfShipsSelectIndex(kasGrowSelectionPtr("DawgTarget"), kasGrowSelectionPtr("SnatchVictem"), 0)
	KAS_AttackSpecial(TeamName, "GrowSelection_DawgTarget")    --kasfAttackSpecial(kasGrowSelectionPtr("DawgTarget"))
	if (_VIFONCE014[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #14
	
	_VIFONCE014[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "CominForYou")    --kasfMsgSendAll("CominForYou")
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam Snatching state
--
function Watch_Mission13_JYDTeam_Snatching(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (G_DawgHasBone ~= 0 or DawgHasBone[TeamName] ~= 0) then 
	
	if (_VIFONCE015[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #15
	
	_VIFONCE015[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "StoleMyFirstShip")    --kasfMsgSendAll("StoleMyFirstShip")
	end 
	G_DawgHasBone = 0 --destroyed
	KAS_ShipsAtrributesBitSet(TeamName, 4096)    --kasfShipsAttributesBitSet(kasGrowSelectionPtr("DawgTarget"), 4096)
	--kasJump("Snatched")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Snatching")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Snatched", "Watch_Mission13_JYDTeam_Snatching")
	Init_Mission13_JYDTeam_Snatched(TeamName)
	return
	end 
	if ((SobGroup_Count("GrowSelection_SnatchVictem") < 1) or (KAS_GetCurrentOrder(TeamName) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("SnatchVictem"))    --kasfShipsOrder((&kasThisTeamPtr->shipList))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Snatching")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_Snatching")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam Snatched state
--
function Init_Mission13_JYDTeam_Snatched(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateMoveToNearest(TeamName)    --kasfGateMoveToNearest()
	
end 


--
--  "watch" code for Mission13 JYDTeam Snatched state
--
function Watch_Mission13_JYDTeam_Snatched(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (KAS_GateShipsOutNearest(TeamName) == 1) then     --kasfGateShipsOutNearest((&kasThisTeamPtr->shipList))
	
	--kasJump("HyperspaceDelay")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Snatched")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_HyperspaceDelay", "Watch_Mission13_JYDTeam_Snatched")
	Init_Mission13_JYDTeam_HyperspaceDelay(TeamName)
	return
	end 
	if ((SobGroup_Count("GrowSelection_SnatchVictem") < 1) or (KAS_GetCurrentOrder(TeamName) == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("SnatchVictem"))    --kasfShipsOrder((&kasThisTeamPtr->shipList))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_Snatched")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_Snatched")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam HyperspaceDelay state
--
function Init_Mission13_JYDTeam_HyperspaceDelay(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KASTimer_Start(HyperspaceTimer[TeamName], 8)
	
end 


--
--  "watch" code for Mission13 JYDTeam HyperspaceDelay state
--
function Watch_Mission13_JYDTeam_HyperspaceDelay(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (KASTimer_IsExpiredIfSoDestroy(HyperspaceTimer[TeamName]) ~= 0) then 
	
	--kasJump("ChooseDump")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_HyperspaceDelay")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_ChooseDump", "Watch_Mission13_JYDTeam_HyperspaceDelay")
	Init_Mission13_JYDTeam_ChooseDump(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam ChooseDump state
--
function Init_Mission13_JYDTeam_ChooseDump(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	WhereDump[TeamName] = 0 --destroyed
	WhereDump[TeamName] = (RandomIntRange(1, 8)) --created,set    --kasfRandom(1, 8)
	
end 


--
--  "watch" code for Mission13 JYDTeam ChooseDump state
--
function Watch_Mission13_JYDTeam_ChooseDump(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (WhereDump[TeamName] == 1) then 
	
	--kasJump("DumpGate1")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate1", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate1(TeamName)
	return
	elseif (WhereDump[TeamName] == 2) then 
	
	--kasJump("DumpGate2")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate2", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate2(TeamName)
	return
	elseif (WhereDump[TeamName] == 3) then 
	
	--kasJump("DumpGate3")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate3", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate3(TeamName)
	return
	elseif (WhereDump[TeamName] == 4) then 
	
	--kasJump("DumpGate4")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate4", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate4(TeamName)
	return
	elseif (WhereDump[TeamName] == 5) then 
	
	--kasJump("DumpGate5")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate5", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate5(TeamName)
	return
	elseif (WhereDump[TeamName] == 6) then 
	
	--kasJump("DumpGate6")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate6", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate6(TeamName)
	return
	elseif (WhereDump[TeamName] == 7) then 
	
	--kasJump("DumpGate7")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate7", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate7(TeamName)
	return
	elseif (WhereDump[TeamName] == 8) then 
	
	--kasJump("DumpGate8")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_ChooseDump")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_DumpGate8", "Watch_Mission13_JYDTeam_ChooseDump")
	Init_Mission13_JYDTeam_DumpGate8(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate1 state
--
function Init_Mission13_JYDTeam_DumpGate1(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint1")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint1"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint1")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint1"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint1a"))    --kasfMoveTo(kasVectorPtr("DumpPoint1a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint1b"))    --kasfMoveTo(kasVectorPtr("DumpPoint1b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint1c"))    --kasfMoveTo(kasVectorPtr("DumpPoint1c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint1d"))    --kasfMoveTo(kasVectorPtr("DumpPoint1d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate1 state
--
function Watch_Mission13_JYDTeam_DumpGate1(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint1a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint1b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint1c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint1d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint1d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint1c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint1b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint1a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate1")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate1")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate2 state
--
function Init_Mission13_JYDTeam_DumpGate2(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint2")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint2"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint2")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint2"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint2a"))    --kasfMoveTo(kasVectorPtr("DumpPoint2a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint2b"))    --kasfMoveTo(kasVectorPtr("DumpPoint2b"))
	KASTimer_Start(GateTimer[TeamName], 12)
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint2c"))    --kasfMoveTo(kasVectorPtr("DumpPoint2c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint2d"))    --kasfMoveTo(kasVectorPtr("DumpPoint2d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate2 state
--
function Watch_Mission13_JYDTeam_DumpGate2(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint2a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint2b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint2c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint2d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint2d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint2c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint2b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint2a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate2")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate2")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate3 state
--
function Init_Mission13_JYDTeam_DumpGate3(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint3")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint3"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint3")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint3"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint3a"))    --kasfMoveTo(kasVectorPtr("DumpPoint3a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint3b"))    --kasfMoveTo(kasVectorPtr("DumpPoint3b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint3c"))    --kasfMoveTo(kasVectorPtr("DumpPoint3c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint3d"))    --kasfMoveTo(kasVectorPtr("DumpPoint3d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate3 state
--
function Watch_Mission13_JYDTeam_DumpGate3(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint3a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint3b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint3c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint3d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint3d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint3c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint3b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint3a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate3")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate3")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate4 state
--
function Init_Mission13_JYDTeam_DumpGate4(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint4")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint4"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint4")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint4"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint4a"))    --kasfMoveTo(kasVectorPtr("DumpPoint4a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint4b"))    --kasfMoveTo(kasVectorPtr("DumpPoint4b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint4c"))    --kasfMoveTo(kasVectorPtr("DumpPoint4c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint4d"))    --kasfMoveTo(kasVectorPtr("DumpPoint4d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate4 state
--
function Watch_Mission13_JYDTeam_DumpGate4(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint4a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint4b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint4c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint4d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint4d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint4c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint4b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint4a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate4")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate4")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate5 state
--
function Init_Mission13_JYDTeam_DumpGate5(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint5")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint5"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint5")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint5"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint5a"))    --kasfMoveTo(kasVectorPtr("DumpPoint5a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint5b"))    --kasfMoveTo(kasVectorPtr("DumpPoint5b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint5c"))    --kasfMoveTo(kasVectorPtr("DumpPoint5c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint5d"))    --kasfMoveTo(kasVectorPtr("DumpPoint5d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate5 state
--
function Watch_Mission13_JYDTeam_DumpGate5(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint5a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint5b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint5c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint5d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint5d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint5c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint5b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint5a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate5")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate5")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate6 state
--
function Init_Mission13_JYDTeam_DumpGate6(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint6")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint6"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint6")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint6"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint6a"))    --kasfMoveTo(kasVectorPtr("DumpPoint6a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint6b"))    --kasfMoveTo(kasVectorPtr("DumpPoint6b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint6c"))    --kasfMoveTo(kasVectorPtr("DumpPoint6c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint6d"))    --kasfMoveTo(kasVectorPtr("DumpPoint6d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate6 state
--
function Watch_Mission13_JYDTeam_DumpGate6(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint6a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint6b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint6c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint6d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint6d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint6c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint6b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint6a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate6")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate6")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate7 state
--
function Init_Mission13_JYDTeam_DumpGate7(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint7")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint7"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint7")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint7"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint7a"))    --kasfMoveTo(kasVectorPtr("DumpPoint7a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint7b"))    --kasfMoveTo(kasVectorPtr("DumpPoint7b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint7c"))    --kasfMoveTo(kasVectorPtr("DumpPoint7c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint7d"))    --kasfMoveTo(kasVectorPtr("DumpPoint7d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate7 state
--
function Watch_Mission13_JYDTeam_DumpGate7(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint7a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint7b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint7c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint7d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint7d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint7c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint7b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint7a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate7")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate7")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 JYDTeam DumpGate8 state
--
function Init_Mission13_JYDTeam_DumpGate8(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	KAS_GateShipsIn(TeamName, "GATETeleportOutPoint8")    --kasfGateShipsIn((&kasThisTeamPtr->shipList), kasVectorPtr("GATETeleportOutPoint8"))
	KAS_GateShipsIn("GrowSelection_DawgTarget", "GATETeleportOutPoint8")    --kasfGateShipsIn(kasGrowSelectionPtr("DawgTarget"), kasVectorPtr("GATETeleportOutPoint8"))
	WhatDumpPoint[TeamName] = (RandomIntRange(1, 4)) --created,set    --kasfRandom(1, 4)
	if (WhatDumpPoint[TeamName] == 1) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint8a"))    --kasfMoveTo(kasVectorPtr("DumpPoint8a"))
	elseif (WhatDumpPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint8b"))    --kasfMoveTo(kasVectorPtr("DumpPoint8b"))
	elseif (WhatDumpPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint8c"))    --kasfMoveTo(kasVectorPtr("DumpPoint8c"))
	elseif (WhatDumpPoint[TeamName] == 4) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("DumpPoint8d"))    --kasfMoveTo(kasVectorPtr("DumpPoint8d"))
	end 
	
end 


--
--  "watch" code for Mission13 JYDTeam DumpGate8 state
--
function Watch_Mission13_JYDTeam_DumpGate8(TeamName)
	--FSM: FSM_Mission13_JYDTeam
	--TeamName = JYDTeam
	if (SobGroup_GetCurrentOrder(TeamName) == COMMAND_Idle and ((SobGroup_IsShipNearPoint(TeamName, "DumpPoint8a", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint8b", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint8c", 420) ~= 0) or (SobGroup_IsShipNearPoint(TeamName, "DumpPoint8d", 420) ~= 0))) then     --kasfNearby(kasVectorPtr("DumpPoint8d"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint8c"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint8b"), 1200)    --kasfNearby(kasVectorPtr("DumpPoint8a"), 1200)
	
	KAS_DropSalvageTarget(TeamName)    --kasfTargetDrop()
	KAS_ShipsAdd("GrowSelection_GoneShips", "GrowSelection_SnatchVictem")    --kasfShipsAdd(kasGrowSelectionPtr("GoneShips"), kasGrowSelectionPtr("SnatchVictem"))
	SobGroup_Clear("GrowSelection_SnatchVictem")    --kasfGrowSelectionClear(kasGrowSelectionPtr("SnatchVictem"))
	KAS_ResetShipRenderedFlags("GrowSelection_GoneShips")    --kasfResetShipRenderFlags(kasGrowSelectionPtr("GoneShips"))
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_JYDTeam", "Watch_Mission13_JYDTeam_DumpGate8")
	KASRule_Add(TeamName, "Watch_Mission13_JYDTeam_Waiting", "Watch_Mission13_JYDTeam_DumpGate8")
	Init_Mission13_JYDTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 LGuns FSM
--
function Init_Mission13_LGuns(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	KAS_TeamAttributesSet(TeamName, 4096)    --kasfTeamAttributesBitSet(4096)
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Waiting", "Init_Mission13_LGuns")
	Init_Mission13_LGuns_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 LGuns FSM
--
function Watch_Mission13_LGuns(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	if (_VIFONCE016[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #16    --kasfTeamCount()
	
	_VIFONCE016[TeamName] = 1 --created,set;
	--kasJump("Dead")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Dead", "Watch_Mission13_LGuns")
	Init_Mission13_LGuns_Dead(TeamName)
	return
	end 
	SobGroup_Clear("GrowSelection_NearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearGuns"))
	SobGroup_Clear("GrowSelection_InjuredNearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredNearGuns"))
	SobGroup_Clear("GrowSelection_CapsNearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("CapsNearGuns"))
	
end 


--
--  "initialize" code for Mission13 LGuns Waiting state
--
function Init_Mission13_LGuns_Waiting(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	
end 


--
--  "watch" code for Mission13 LGuns Waiting state
--
function Watch_Mission13_LGuns_Waiting(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	if (G_GunTimer == 0) then 
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearGuns", 3150) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearGuns"), 9000)
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns_Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Attack", "Watch_Mission13_LGuns_Waiting")
	Init_Mission13_LGuns_Attack(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission13 LGuns Dead state
--
function Init_Mission13_LGuns_Dead(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	
end 


--
--  "watch" code for Mission13 LGuns Dead state
--
function Watch_Mission13_LGuns_Dead(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	
end 


--
--  "initialize" code for Mission13 LGuns Attack state
--
function Init_Mission13_LGuns_Attack(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearGuns", 3150)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearGuns"), 9000)
	KAS_FillShipsByCapital("GrowSelection_CapsNearGuns", "GrowSelection_NearGuns")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsNearGuns"), kasGrowSelectionPtr("NearGuns"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredNearGuns", "GrowSelection_NearGuns", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredNearGuns"), kasGrowSelectionPtr("NearGuns"), 99)
	if (SobGroup_Count("GrowSelection_CapsNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsNearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_CapsNearGuns")    --kasfAttack(kasGrowSelectionPtr("CapsNearGuns"))
	elseif (SobGroup_Count("GrowSelection_InjuredNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredNearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredNearGuns")    --kasfAttack(kasGrowSelectionPtr("InjuredNearGuns"))
	elseif (SobGroup_Count("GrowSelection_NearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_NearGuns")    --kasfAttack(kasGrowSelectionPtr("NearGuns"))
	elseif (SobGroup_Count("GrowSelection_NearGuns") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))
	
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Waiting", "Init_Mission13_LGuns_Attack")
	Init_Mission13_LGuns_Waiting(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission13 LGuns Attack state
--
function Watch_Mission13_LGuns_Attack(TeamName)
	--FSM: FSM_Mission13_LGuns
	--TeamName = "LGun1"
	if (_VIFONCE017[TeamName] == 0 and ( not(G_AutoGuns == 1))) then  -- "ifonce" #17
	
	_VIFONCE017[TeamName] = 1 --created,set;
	G_AutoGuns = 1 --created,set
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearGuns", 3150)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearGuns"), 9000)
	KAS_FillShipsByCapital("GrowSelection_CapsNearGuns", "GrowSelection_NearGuns")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsNearGuns"), kasGrowSelectionPtr("NearGuns"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredNearGuns", "GrowSelection_NearGuns", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredNearGuns"), kasGrowSelectionPtr("NearGuns"), 99)
	if (SobGroup_Count("GrowSelection_NearGuns") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Waiting", "Watch_Mission13_LGuns_Attack")
	Init_Mission13_LGuns_Waiting(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_CapsNearGuns") < 1) and (SobGroup_Count("GrowSelection_NearGuns") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))    --kasfShipsCount(kasGrowSelectionPtr("CapsNearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Attack", "Watch_Mission13_LGuns_Attack")
	Init_Mission13_LGuns_Attack(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_InjuredNearGuns") > 0) and (SobGroup_Count("GrowSelection_NearGuns") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))    --kasfShipsCount(kasGrowSelectionPtr("InjuredNearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Attack", "Watch_Mission13_LGuns_Attack")
	Init_Mission13_LGuns_Attack(TeamName)
	return
	elseif (SobGroup_Count("GrowSelection_NearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_LGuns", "Watch_Mission13_LGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_LGuns_Attack", "Watch_Mission13_LGuns_Attack")
	Init_Mission13_LGuns_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 SGuns FSM
--
function Init_Mission13_SGuns(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	KAS_TeamAttributesSet(TeamName, 4096)    --kasfTeamAttributesBitSet(4096)
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Waiting", "Init_Mission13_SGuns")
	Init_Mission13_SGuns_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 SGuns FSM
--
function Watch_Mission13_SGuns(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	if (_VIFONCE018[TeamName] == 0 and (SobGroup_Count(TeamName) < 1)) then  -- "ifonce" #18    --kasfTeamCount()
	
	_VIFONCE018[TeamName] = 1 --created,set;
	--kasJump("Dead")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Dead", "Watch_Mission13_SGuns")
	Init_Mission13_SGuns_Dead(TeamName)
	return
	end 
	SobGroup_Clear("GrowSelection_sNearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("sNearGuns"))
	SobGroup_Clear("GrowSelection_sInjuredNearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("sInjuredNearGuns"))
	SobGroup_Clear("GrowSelection_sStrikeNearGuns")    --kasfGrowSelectionClear(kasGrowSelectionPtr("sStrikeNearGuns"))
	
end 


--
--  "initialize" code for Mission13 SGuns Waiting state
--
function Init_Mission13_SGuns_Waiting(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	
end 


--
--  "watch" code for Mission13 SGuns Waiting state
--
function Watch_Mission13_SGuns_Waiting(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	if (G_GunTimer == 1) then 
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_sNearGuns", 3150) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("sNearGuns"), 9000)
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Attack", "Watch_Mission13_SGuns_Waiting")
	Init_Mission13_SGuns_Attack(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission13 SGuns Attack state
--
function Init_Mission13_SGuns_Attack(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_sNearGuns", 3150)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("sNearGuns"), 9000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_sInjuredNearGuns", "GrowSelection_sNearGuns", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("sInjuredNearGuns"), kasGrowSelectionPtr("sNearGuns"), 99)
	KAS_FillShipsByNonCapital("GrowSelection_sStrikeNearGuns", "GrowSelection_sNearGuns")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("sStrikeNearGuns"), kasGrowSelectionPtr("sNearGuns"))
	if (SobGroup_Count("GrowSelection_sStrikeNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("sStrikeNearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_sStrikeNearGuns")    --kasfAttack(kasGrowSelectionPtr("sStrikeNearGuns"))
	elseif (SobGroup_Count("GrowSelection_sInjuredNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("sInjuredNearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_sInjuredNearGuns")    --kasfAttack(kasGrowSelectionPtr("sInjuredNearGuns"))
	elseif (SobGroup_Count("GrowSelection_sNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))
	
	KAS_Attack(TeamName, "GrowSelection_sNearGuns")    --kasfAttack(kasGrowSelectionPtr("sNearGuns"))
	elseif (SobGroup_Count("GrowSelection_sNearGuns") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))
	
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Waiting", "Init_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Waiting(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission13 SGuns Attack state
--
function Watch_Mission13_SGuns_Attack(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	if (_VIFONCE019[TeamName] == 0 and ( not(G_AutoGuns == 1))) then  -- "ifonce" #19
	
	_VIFONCE019[TeamName] = 1 --created,set;
	G_AutoGuns = 1 --created,set
	end 
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_sNearGuns", 3150)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("sNearGuns"), 9000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_sInjuredNearGuns", "GrowSelection_sNearGuns", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("sInjuredNearGuns"), kasGrowSelectionPtr("sNearGuns"), 99)
	KAS_FillShipsByNonCapital("GrowSelection_sStrikeNearGuns", "GrowSelection_sNearGuns")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("sStrikeNearGuns"), kasGrowSelectionPtr("sNearGuns"))
	if (SobGroup_Count("GrowSelection_sNearGuns") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Waiting", "Watch_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Waiting(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_sStrikeNearGuns") < 1) and (SobGroup_Count("GrowSelection_sNearGuns") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))    --kasfShipsCount(kasGrowSelectionPtr("sStrikeNearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Attack", "Watch_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Attack(TeamName)
	return
	elseif ((SobGroup_Count("GrowSelection_sInjuredNearGuns") > 0) and (SobGroup_Count("GrowSelection_sNearGuns") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))    --kasfShipsCount(kasGrowSelectionPtr("sInjuredNearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Attack", "Watch_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Attack(TeamName)
	return
	elseif (SobGroup_Count("GrowSelection_sNearGuns") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Attack", "Watch_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Attack(TeamName)
	return
	elseif (SobGroup_Count("GrowSelection_sNearGuns") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("sNearGuns"))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission13_SGuns", "Watch_Mission13_SGuns_Attack")
	KASRule_Add(TeamName, "Watch_Mission13_SGuns_Waiting", "Watch_Mission13_SGuns_Attack")
	Init_Mission13_SGuns_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission13 SGuns Dead state
--
function Init_Mission13_SGuns_Dead(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	
end 


--
--  "watch" code for Mission13 SGuns Dead state
--
function Watch_Mission13_SGuns_Dead(TeamName)
	--FSM: FSM_Mission13_SGuns
	--TeamName = "SGun1"
	
end 


--
--  "initialize" code for Mission13 Prox FSM
--
function Init_Mission13_Prox(TeamName)
	--FSM: FSM_Mission13_Prox
	--TeamName = "Prox1"
	KAS_TeamAttributesSet(TeamName, 4096)    --kasfTeamAttributesBitSet(4096)
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission13_Prox_Wait", "Init_Mission13_Prox")
	Init_Mission13_Prox_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission13 Prox FSM
--
function Watch_Mission13_Prox(TeamName)
	--FSM: FSM_Mission13_Prox
	--TeamName = "Prox1"
	
end 


--
--  "initialize" code for Mission13 Prox Wait state
--
function Init_Mission13_Prox_Wait(TeamName)
	--FSM: FSM_Mission13_Prox
	--TeamName = "Prox1"
	
end 


--
--  "watch" code for Mission13 Prox Wait state
--
function Watch_Mission13_Prox_Wait(TeamName)
	--FSM: FSM_Mission13_Prox
	--TeamName = "Prox1"
	
end 


--
--  "initialize" code for Mission13 mission
--
function Init_Mission13(MissionName)
	--FSM: FSM_Mission13
	--MissionName = "Mission13"
	--kasFSMCreate("Defector")
	KASRule_AddFSM("Defector", "Watch_Mission13_Defector", "Init_Mission13")
	Init_Mission13_Defector("Defector")
	--kasFSMCreate("JYDTeam")
	KASRule_AddFSM("JYDTeam", "Watch_Mission13_JYDTeam", "Init_Mission13")
	Init_Mission13_JYDTeam("JYDTeam")
	--kasFSMCreate("JydHq")
	KASRule_AddFSM("JunkyardHQ", "Watch_Mission13_JydHq", "Init_Mission13")
	Init_Mission13_JydHq("JunkyardHQ")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun1", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun1")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun2", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun2")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun3", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun3")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun4", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun4")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun5", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun5")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun6", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun6")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun7", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun7")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun8", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun8")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun9", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun9")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun10", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun10")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun11", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun11")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun12", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun12")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun13", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun13")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun14", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun14")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun15", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun15")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun16", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun16")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun17", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun17")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun18", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun18")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun19", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun19")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun20", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun20")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun21", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun21")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun22", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun22")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun23", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun23")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun24", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun24")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun25", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun25")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun26", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun26")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun27", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun27")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun28", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun28")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun29", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun29")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun30", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun30")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun31", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun31")
	--kasFSMCreate("LGuns")
	KASRule_AddFSM("LGun32", "Watch_Mission13_LGuns", "Init_Mission13")
	Init_Mission13_LGuns("LGun32")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun1", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun1")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun2", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun2")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun3", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun3")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun4", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun4")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun5", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun5")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun6", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun6")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun7", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun7")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun8", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun8")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun9", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun9")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun10", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun10")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun11", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun11")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun12", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun12")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun13", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun13")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun14", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun14")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun15", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun15")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun16", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun16")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun17", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun17")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun18", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun18")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun19", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun19")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun20", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun20")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun21", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun21")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun22", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun22")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun23", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun23")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun24", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun24")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun25", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun25")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun26", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun26")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun27", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun27")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun28", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun28")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun29", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun29")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun30", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun30")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun31", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun31")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun32", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun32")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun33", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun33")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun34", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun34")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun35", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun35")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun36", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun36")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun37", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun37")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun38", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun38")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun39", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun39")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun40", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun40")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun41", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun41")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun42", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun42")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun43", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun43")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun44", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun44")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun45", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun45")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun46", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun46")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun47", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun47")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun48", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun48")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun49", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun49")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun50", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun50")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun51", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun51")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun52", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun52")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun53", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun53")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun54", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun54")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun55", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun55")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun56", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun56")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun57", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun57")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun58", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun58")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun59", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun59")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun60", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun60")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun61", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun61")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun62", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun62")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun63", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun63")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun64", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun64")
	--kasFSMCreate("SGuns")
	KASRule_AddFSM("SGun65", "Watch_Mission13_SGuns", "Init_Mission13")
	Init_Mission13_SGuns("SGun65")
	--kasFSMCreate("Prox")
	KASRule_AddFSM("Prox1", "Watch_Mission13_Prox", "Init_Mission13")
	Init_Mission13_Prox("Prox1")
	--kasFSMCreate("MissionFlow")
	KASRule_AddFSM("DummyTeam", "Watch_Mission13_MissionFlow", "Init_Mission13")
	Init_Mission13_MissionFlow("DummyTeam")
	G_TeleporterInUse = 0 --created,set
	G_ThisTeleporterIs = -1 --created,set
	G_GunTimer = 0 --created,set
	KASTimer_Start(TimerID_BigGunTimer, (RandomIntRange(30, 90)))    --kasfRandom(30, 90)
	KAS_CampaignAutoSave(13, "$61650")    --kasfSaveLevel(13, LSTRING_Savegame[strCurLanguage])
	singlePlayerLocationCard("$61651", 10)    --kasfLocationCard(10000, LSTRING_LocationCard[strCurLanguage])
	
end 


--
--  "watch" code for Mission13 mission
--
function Watch_Mission13(MissionName)
	--FSM: FSM_Mission13
	--MissionName = "Mission13"
	if (_VIFONCE020 == 0 and (KAS_ShipHasBeenRendered("GrowSelection_GoneShips", 3) ~= 0)) then  -- "ifonce" #20    --kasfRenderedShips(kasGrowSelectionPtr("GoneShips"), 3)
	
	_VIFONCE020 = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "FoundShip")    --kasfMsgSendAll("FoundShip")
	end 
	if (_VIFONCE021 == 0 and ((SobGroup_Count("JunkyardHQ") < 1) and (KASObjective_GetState(ObjectiveID_EstablishCommunicationsLink) == 0))) then  -- "ifonce" #21    --kasfObjectiveGet("EstablishCommunicationsLink")    --kasfShipsCount(kasAITeamShipsPtr("JunkyardHQ"))
	
	_VIFONCE021 = 1 --created,set;
	KAS_MissionFailed()    --kasfMissionFailed()
	end 
	if (_VIFONCE022 == 0 and (SobGroup_Count("Defector") < 1)) then  -- "ifonce" #22    --kasfShipsCount(kasAITeamShipsPtr("Defector"))
	
	_VIFONCE022 = 1 --created,set;
	KAS_MissionFailed()    --kasfMissionFailed()
	end 
	if (G_GunTimer == 0) then 
	
	G_GunTimer = 1 --set
	else
	
	G_GunTimer = 0 --set
	end 
	if (_VIFONCE023 == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_BigGunTimer) ~= 0)) then  -- "ifonce" #23
	
	_VIFONCE023 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "HeavyGuns")    --kasfAllowPlayerToResearch("HeavyGuns")
	KAS_MessageSendToAll(TeamName, "BigGuns")    --kasfMsgSendAll("BigGuns")
	KASTimer_Start(TimerID_CloakingTimer, (RandomIntRange(90, 240)))    --kasfRandom(90, 240)
	end 
	if (_VIFONCE024 == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_CloakingTimer) ~= 0)) then  -- "ifonce" #24
	
	_VIFONCE024 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CloakGenerator")    --kasfAllowPlayerToResearch("CloakGeneratorTech")
	KAS_MessageSendToAll(TeamName, "CloakingTech")    --kasfMsgSendAll("CloakingTech")
	end 
	if (_VIFONCE025 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #25    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE025 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end 
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end 
	if (_VIFONCE026 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #26    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE026 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end 
	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_CapsInYard")
    KASSobGroup_Create("GrowSelection_CapsNearGuns")
    KASSobGroup_Create("GrowSelection_DawgSeesYou")
    KASSobGroup_Create("GrowSelection_DawgTarget")
    KASSobGroup_Create("GrowSelection_Docker")
    KASSobGroup_Create("GrowSelection_GoneShips")
    KASSobGroup_Create("GrowSelection_InjuredNearGuns")
    KASSobGroup_Create("GrowSelection_LeadGone")
    KASSobGroup_Create("GrowSelection_NearGuns")
    KASSobGroup_Create("GrowSelection_PotSnatchVictem")
    KASSobGroup_Create("GrowSelection_ResourcingVictems")
    KASSobGroup_Create("GrowSelection_SnatchVictem")
    KASSobGroup_Create("GrowSelection_Temp")
    KASSobGroup_Create("GrowSelection_sInjuredNearGuns")
    KASSobGroup_Create("GrowSelection_sNearGuns")
    KASSobGroup_Create("GrowSelection_sStrikeNearGuns")
    KASSobGroup_CreateIfNotExist("Defector")
    KASSobGroup_CreateIfNotExist("DummyTeam")
    KASSobGroup_CreateIfNotExist("JYDTeam")
    KASSobGroup_CreateIfNotExist("JunkyardHQ")
    KASSobGroup_CreateIfNotExist("LGun1")
    KASSobGroup_CreateIfNotExist("LGun10")
    KASSobGroup_CreateIfNotExist("LGun11")
    KASSobGroup_CreateIfNotExist("LGun12")
    KASSobGroup_CreateIfNotExist("LGun13")
    KASSobGroup_CreateIfNotExist("LGun14")
    KASSobGroup_CreateIfNotExist("LGun15")
    KASSobGroup_CreateIfNotExist("LGun16")
    KASSobGroup_CreateIfNotExist("LGun17")
    KASSobGroup_CreateIfNotExist("LGun18")
    KASSobGroup_CreateIfNotExist("LGun19")
    KASSobGroup_CreateIfNotExist("LGun2")
    KASSobGroup_CreateIfNotExist("LGun20")
    KASSobGroup_CreateIfNotExist("LGun21")
    KASSobGroup_CreateIfNotExist("LGun22")
    KASSobGroup_CreateIfNotExist("LGun23")
    KASSobGroup_CreateIfNotExist("LGun24")
    KASSobGroup_CreateIfNotExist("LGun25")
    KASSobGroup_CreateIfNotExist("LGun26")
    KASSobGroup_CreateIfNotExist("LGun27")
    KASSobGroup_CreateIfNotExist("LGun28")
    KASSobGroup_CreateIfNotExist("LGun29")
    KASSobGroup_CreateIfNotExist("LGun3")
    KASSobGroup_CreateIfNotExist("LGun30")
    KASSobGroup_CreateIfNotExist("LGun31")
    KASSobGroup_CreateIfNotExist("LGun32")
    KASSobGroup_CreateIfNotExist("LGun4")
    KASSobGroup_CreateIfNotExist("LGun5")
    KASSobGroup_CreateIfNotExist("LGun6")
    KASSobGroup_CreateIfNotExist("LGun7")
    KASSobGroup_CreateIfNotExist("LGun8")
    KASSobGroup_CreateIfNotExist("LGun9")
    KASSobGroup_CreateIfNotExist("Prox1")
    KASSobGroup_CreateIfNotExist("SGun1")
    KASSobGroup_CreateIfNotExist("SGun10")
    KASSobGroup_CreateIfNotExist("SGun11")
    KASSobGroup_CreateIfNotExist("SGun12")
    KASSobGroup_CreateIfNotExist("SGun13")
    KASSobGroup_CreateIfNotExist("SGun14")
    KASSobGroup_CreateIfNotExist("SGun15")
    KASSobGroup_CreateIfNotExist("SGun16")
    KASSobGroup_CreateIfNotExist("SGun17")
    KASSobGroup_CreateIfNotExist("SGun18")
    KASSobGroup_CreateIfNotExist("SGun19")
    KASSobGroup_CreateIfNotExist("SGun2")
    KASSobGroup_CreateIfNotExist("SGun20")
    KASSobGroup_CreateIfNotExist("SGun21")
    KASSobGroup_CreateIfNotExist("SGun22")
    KASSobGroup_CreateIfNotExist("SGun23")
    KASSobGroup_CreateIfNotExist("SGun24")
    KASSobGroup_CreateIfNotExist("SGun25")
    KASSobGroup_CreateIfNotExist("SGun26")
    KASSobGroup_CreateIfNotExist("SGun27")
    KASSobGroup_CreateIfNotExist("SGun28")
    KASSobGroup_CreateIfNotExist("SGun29")
    KASSobGroup_CreateIfNotExist("SGun3")
    KASSobGroup_CreateIfNotExist("SGun30")
    KASSobGroup_CreateIfNotExist("SGun31")
    KASSobGroup_CreateIfNotExist("SGun32")
    KASSobGroup_CreateIfNotExist("SGun33")
    KASSobGroup_CreateIfNotExist("SGun34")
    KASSobGroup_CreateIfNotExist("SGun35")
    KASSobGroup_CreateIfNotExist("SGun36")
    KASSobGroup_CreateIfNotExist("SGun37")
    KASSobGroup_CreateIfNotExist("SGun38")
    KASSobGroup_CreateIfNotExist("SGun39")
    KASSobGroup_CreateIfNotExist("SGun4")
    KASSobGroup_CreateIfNotExist("SGun40")
    KASSobGroup_CreateIfNotExist("SGun41")
    KASSobGroup_CreateIfNotExist("SGun42")
    KASSobGroup_CreateIfNotExist("SGun43")
    KASSobGroup_CreateIfNotExist("SGun44")
    KASSobGroup_CreateIfNotExist("SGun45")
    KASSobGroup_CreateIfNotExist("SGun46")
    KASSobGroup_CreateIfNotExist("SGun47")
    KASSobGroup_CreateIfNotExist("SGun48")
    KASSobGroup_CreateIfNotExist("SGun49")
    KASSobGroup_CreateIfNotExist("SGun5")
    KASSobGroup_CreateIfNotExist("SGun50")
    KASSobGroup_CreateIfNotExist("SGun51")
    KASSobGroup_CreateIfNotExist("SGun52")
    KASSobGroup_CreateIfNotExist("SGun53")
    KASSobGroup_CreateIfNotExist("SGun54")
    KASSobGroup_CreateIfNotExist("SGun55")
    KASSobGroup_CreateIfNotExist("SGun56")
    KASSobGroup_CreateIfNotExist("SGun57")
    KASSobGroup_CreateIfNotExist("SGun58")
    KASSobGroup_CreateIfNotExist("SGun59")
    KASSobGroup_CreateIfNotExist("SGun6")
    KASSobGroup_CreateIfNotExist("SGun60")
    KASSobGroup_CreateIfNotExist("SGun61")
    KASSobGroup_CreateIfNotExist("SGun62")
    KASSobGroup_CreateIfNotExist("SGun63")
    KASSobGroup_CreateIfNotExist("SGun64")
    KASSobGroup_CreateIfNotExist("SGun65")
    KASSobGroup_CreateIfNotExist("SGun7")
    KASSobGroup_CreateIfNotExist("SGun8")
    KASSobGroup_CreateIfNotExist("SGun9")

    Sound_SpeechSubtitlePath("speech:missions/Mission13/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;Defector;JYDTeam;JunkyardHQ;LGun1;LGun10;LGun11;LGun12;LGun13;LGun14;LGun15;LGun16;LGun17;LGun18;LGun19;LGun2;LGun20;LGun21;LGun22;LGun23;LGun24;LGun25;LGun26;LGun27;LGun28;LGun29;LGun3;LGun30;LGun31;LGun32;LGun4;LGun5;LGun6;LGun7;LGun8;LGun9;DummyTeam;Prox1;SGun1;SGun10;SGun11;SGun12;SGun13;SGun14;SGun15;SGun16;SGun17;SGun18;SGun19;SGun2;SGun20;SGun21;SGun22;SGun23;SGun24;SGun25;SGun26;SGun27;SGun28;SGun29;SGun3;SGun30;SGun31;SGun32;SGun33;SGun34;SGun35;SGun36;SGun37;SGun38;SGun39;SGun4;SGun40;SGun41;SGun42;SGun43;SGun44;SGun45;SGun46;SGun47;SGun48;SGun49;SGun5;SGun50;SGun51;SGun52;SGun53;SGun54;SGun55;SGun56;SGun57;SGun58;SGun59;SGun6;SGun60;SGun61;SGun62;SGun63;SGun64;SGun65;SGun7;SGun8;SGun9;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    KAS_SetColourSchemeColours(5, {0,0,0}, {0, 0, 0}, "DATA:Badges/Taiidan_red.tga", {0.8,0.40156862745098,0}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Bentusi.tga", {0.921,0.75,0.419}, "data:/effect/trails/ben_trail_clr.tga")
    KAS_SetColourScheme("Defector", 5)
    KAS_SetColourScheme("JYDTeam", 1)
    KAS_SetColourScheme("JunkyardHQ", 1)
    KAS_SetColourScheme("LGun1", 1)
    KAS_SetColourScheme("LGun10", 1)
    KAS_SetColourScheme("LGun11", 1)
    KAS_SetColourScheme("LGun12", 1)
    KAS_SetColourScheme("LGun13", 1)
    KAS_SetColourScheme("LGun14", 1)
    KAS_SetColourScheme("LGun15", 1)
    KAS_SetColourScheme("LGun16", 1)
    KAS_SetColourScheme("LGun17", 1)
    KAS_SetColourScheme("LGun18", 1)
    KAS_SetColourScheme("LGun19", 1)
    KAS_SetColourScheme("LGun2", 1)
    KAS_SetColourScheme("LGun20", 1)
    KAS_SetColourScheme("LGun21", 1)
    KAS_SetColourScheme("LGun22", 1)
    KAS_SetColourScheme("LGun23", 1)
    KAS_SetColourScheme("LGun24", 1)
    KAS_SetColourScheme("LGun25", 1)
    KAS_SetColourScheme("LGun26", 1)
    KAS_SetColourScheme("LGun27", 1)
    KAS_SetColourScheme("LGun28", 1)
    KAS_SetColourScheme("LGun29", 1)
    KAS_SetColourScheme("LGun3", 1)
    KAS_SetColourScheme("LGun30", 1)
    KAS_SetColourScheme("LGun31", 1)
    KAS_SetColourScheme("LGun32", 1)
    KAS_SetColourScheme("LGun4", 1)
    KAS_SetColourScheme("LGun5", 1)
    KAS_SetColourScheme("LGun6", 1)
    KAS_SetColourScheme("LGun7", 1)
    KAS_SetColourScheme("LGun8", 1)
    KAS_SetColourScheme("LGun9", 1)
    KAS_SetColourScheme("Prox1", 1)
    KAS_SetColourScheme("SGun1", 1)
    KAS_SetColourScheme("SGun10", 1)
    KAS_SetColourScheme("SGun11", 1)
    KAS_SetColourScheme("SGun12", 1)
    KAS_SetColourScheme("SGun13", 1)
    KAS_SetColourScheme("SGun14", 1)
    KAS_SetColourScheme("SGun15", 1)
    KAS_SetColourScheme("SGun16", 1)
    KAS_SetColourScheme("SGun17", 1)
    KAS_SetColourScheme("SGun18", 1)
    KAS_SetColourScheme("SGun19", 1)
    KAS_SetColourScheme("SGun2", 1)
    KAS_SetColourScheme("SGun20", 1)
    KAS_SetColourScheme("SGun21", 1)
    KAS_SetColourScheme("SGun22", 1)
    KAS_SetColourScheme("SGun23", 1)
    KAS_SetColourScheme("SGun24", 1)
    KAS_SetColourScheme("SGun25", 1)
    KAS_SetColourScheme("SGun26", 1)
    KAS_SetColourScheme("SGun27", 1)
    KAS_SetColourScheme("SGun28", 1)
    KAS_SetColourScheme("SGun29", 1)
    KAS_SetColourScheme("SGun3", 1)
    KAS_SetColourScheme("SGun30", 1)
    KAS_SetColourScheme("SGun31", 1)
    KAS_SetColourScheme("SGun32", 1)
    KAS_SetColourScheme("SGun33", 1)
    KAS_SetColourScheme("SGun34", 1)
    KAS_SetColourScheme("SGun35", 1)
    KAS_SetColourScheme("SGun36", 1)
    KAS_SetColourScheme("SGun37", 1)
    KAS_SetColourScheme("SGun38", 1)
    KAS_SetColourScheme("SGun39", 1)
    KAS_SetColourScheme("SGun4", 1)
    KAS_SetColourScheme("SGun40", 1)
    KAS_SetColourScheme("SGun41", 1)
    KAS_SetColourScheme("SGun42", 1)
    KAS_SetColourScheme("SGun43", 1)
    KAS_SetColourScheme("SGun44", 1)
    KAS_SetColourScheme("SGun45", 1)
    KAS_SetColourScheme("SGun46", 1)
    KAS_SetColourScheme("SGun47", 1)
    KAS_SetColourScheme("SGun48", 1)
    KAS_SetColourScheme("SGun49", 1)
    KAS_SetColourScheme("SGun5", 1)
    KAS_SetColourScheme("SGun50", 1)
    KAS_SetColourScheme("SGun51", 1)
    KAS_SetColourScheme("SGun52", 1)
    KAS_SetColourScheme("SGun53", 1)
    KAS_SetColourScheme("SGun54", 1)
    KAS_SetColourScheme("SGun55", 1)
    KAS_SetColourScheme("SGun56", 1)
    KAS_SetColourScheme("SGun57", 1)
    KAS_SetColourScheme("SGun58", 1)
    KAS_SetColourScheme("SGun59", 1)
    KAS_SetColourScheme("SGun6", 1)
    KAS_SetColourScheme("SGun60", 1)
    KAS_SetColourScheme("SGun61", 1)
    KAS_SetColourScheme("SGun62", 1)
    KAS_SetColourScheme("SGun63", 1)
    KAS_SetColourScheme("SGun64", 1)
    KAS_SetColourScheme("SGun65", 1)
    KAS_SetColourScheme("SGun7", 1)
    KAS_SetColourScheme("SGun8", 1)
    KAS_SetColourScheme("SGun9", 1)
    Player_SetPlayerName(1, "$60685")
    Player_SetPlayerName(2, "$60686")

    singlePlayerOnStartOrLoad(13)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(13)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission13", "Watch_Mission13", "OnInit")
    Init_Mission13("Mission13")
    KAS_SetLetterboxStart(1, 5, 0, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A11_mission13", MUS_Ambient )
end

