--
--  Generated\Mission05.c
--
--  Finite state machine routines for "Mission05" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission05.kp by KAS2C Version 2.05
--


--#include "Generated\Mission05.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfSoundEvent
--kasfTutSetTextDisplayBoxToSubtitleRegion


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
CURRENTDestroyersInLevel = 0
CURRENTFrigatesInLevel = 0
CURRENTInterceptorsInLevel = 0
G_ACT2HasBegun = 0
G_ACT3HasBegun = 0
G_BeginKamikaze = 0
G_CLICK_DestroyResourcer = 0
G_CLICK_EradicateEnemies = 0
G_CLICK_ResearchDefenders = 0
G_CLICK_SendProbe = 0
G_CURRENTDestroyersInLevel = 0
G_CURRENTFrigatesInLevel = 0
G_CURRENTInterceptorsInLevel = 0
G_CarrierUnderAttack = 0
G_CollectorIsHurtin = 0
G_CollectorUnderAttack = 0
G_DestroyResourcerHasPlayed = 0
G_DestroyersUnderAttack = 0
G_DontRequestAnymore = 0
G_EradicateEnemiesHasPlayed = 0
G_FleetIntelIntroHasPlayed = 0
G_Frigates1ShipsORDER = 0
G_FrigatesUnderAttack = 0
G_InterceptorsKilledTOTAL = 0
G_LASTDestroyersInLevel = 0
G_LASTFrigatesInLevel = 0
G_LASTInterceptorsInLevel = 0
G_NobodyLeftToDockWith = 0
G_NumDestroyerTeams = 0
G_NumFrigateTeams = 0
G_PlayIonTechEvent = 0
G_PlayPlasmaTechEvent = 0
G_ReadyToHYPERSPACE = 0
G_SHIPSLeftBoxTargets = 0
G_SendProbeObjectiveCreated = 0
G_SupportFrigateUnderAttack = 0
G_TOTALDestroyersInLevel = 0
G_TOTALDestroyersKilled = 0
G_TOTALFrigatesInLevel = 0
G_TOTALFrigatesKilled = 0
G_TOTALInterceptorsInLevel = 0
G_TOTALInterceptorsKilled = 0
G_TOTALOriginalDestroyers = 0
G_TOTALOriginalFrigates = 0
G_TOTALOriginalInterceptors = 0
G_TeachDefenderEventHasPlayed = 0
G_TechEventHasPlayed = 0
SetMediumGuns = 0
_VIFONCE028 = 0
_VIFONCE029 = 0
_VIFONCE030 = 0
_VIFONCE031 = 0
_VIFONCE032 = 0
_VIFONCE033 = 0
_VIFONCE034 = 0
_VIFONCE035 = 0
_VIFONCE036 = 0
_VIFONCE037 = 0
_VIFONCE038 = 0
_VIFONCE039 = 0
_VIFONCE040 = 0
_VIFONCE041 = 0
_VIFONCE042 = 0
_VIFONCE043 = 0
_VIFONCE044 = 0
_VIFONCE045 = 0
_VIFONCE046 = 0
_VIFONCE047 = 0
_VIFONCE048 = 0
_VIFONCE049 = 0
_VIFONCE050 = 0
_VIFONCE051 = 0
_VIFONCE052 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.

--Following are Team-Scoped variables: referenced differently than globals.
AttackingCorvette = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
AttackingFighter = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
AttackingFrigate = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
AttackingRemaining = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
CarrierAttackingSC = {["Carrier"] = 0}
CarrierIsInUnderAttackState = {["Carrier"] = 0}
CollectorsKilled = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
CollectorsOriginal = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
DelaySHIPSNeeded = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
GoingInWithThisMany = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
GuardingCarrier = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingDestroyer1 = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingDestroyer2 = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingFrigate1 = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingFrigate2 = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingFrigate3 = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
GuardingSupportFrigate = {["Defenders1"] = 0, ["Defenders2"] = 0, ["Defenders3"] = 0}
IntelEvent = {["FleetIntel"] = 0}
KilledAtStartOfCollectorAttack = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
KilledWhileAttackingCollector = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
MovingToHarvestPoint1 = {["Collector"] = 0, ["Collector2"] = 0}
MovingToHarvestPoint2 = {["Collector"] = 0, ["Collector2"] = 0}
MovingToHarvestPoint3 = {["Collector"] = 0, ["Collector2"] = 0}
NearbyCorvettesSHIPS = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
NearbyFightersSHIPS = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
NearbyFrigatesSHIPS = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
NearbySHIPS = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
NeverCreateEradicatePingAgain = {["FleetIntel"] = 0}
NeverCreateSendProbePingAgain = {["FleetIntel"] = 0}
SHIPSKilled = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0}
SHIPSNeeded = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0}
SHIPSNewships = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0, ["Probes1"] = 0, ["Probes2"] = 0, ["Probes3"] = 0}
SHIPSOriginal = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0}
SHIPSRequested = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0}
ThisDestroyerNum = {["Destroyers1"] = 0, ["Destroyers2"] = 0}
ThisFrigateNum = {["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0}
VisitedCollectionPoint = {["Collector"] = 0, ["Collector2"] = 0}
WaitingForShips = {["Interceptors1"] = 0, ["Interceptors2"] = 0, ["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0, ["Destroyers1"] = 0, ["Destroyers2"] = 0, ["Kamikaze"] = 0, ["Kamikaze2"] = 0}
_VIFONCE001 = {["FleetIntel"] = 0}
_VIFONCE002 = {["FleetIntel"] = 0}
_VIFONCE003 = {["FleetIntel"] = 0}
_VIFONCE004 = {["FleetIntel"] = 0}
_VIFONCE005 = {["FleetIntel"] = 0}
_VIFONCE006 = {["FleetIntel"] = 0}
_VIFONCE007 = {["FleetIntel"] = 0}
_VIFONCE008 = {["FleetIntel"] = 0}
_VIFONCE009 = {["FleetIntel"] = 0}
_VIFONCE010 = {["FleetIntel"] = 0}
_VIFONCE011 = {["Collector"] = 0, ["Collector2"] = 0}
_VIFONCE012 = {["Collector"] = 0, ["Collector2"] = 0}
_VIFONCE013 = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
_VIFONCE014 = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
_VIFONCE015 = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
_VIFONCE016 = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
_VIFONCE017 = {["Interceptors1"] = 0, ["Interceptors2"] = 0}
_VIFONCE018 = {["Frigates1"] = 0, ["Frigates2"] = 0, ["Frigates3"] = 0}
_VIFONCE019 = {["Destroyers1"] = 0, ["Destroyers2"] = 0}
_VIFONCE020 = {["SupportFrigate"] = 0}
_VIFONCE021 = {["SupportFrigate"] = 0}
_VIFONCE022 = {["Carrier"] = 0}
_VIFONCE023 = {["Carrier"] = 0}
_VIFONCE024 = {["Carrier"] = 0}
_VIFONCE025 = {["Carrier"] = 0}
_VIFONCE026 = {["Kamikaze"] = 0}
_VIFONCE027 = {["Kamikaze2"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
AttackingCollector = {["Interceptors1"] = 9, ["Interceptors2"] = 10}
BottomBoxDelayTIMER = {["Frigates1"] = 11, ["Frigates2"] = 12, ["Frigates3"] = 13}
CentreBoxDelayTIMER = {["Frigates1"] = 14, ["Frigates2"] = 15, ["Frigates3"] = 16}
DelaySHIPSRequest = {["Interceptors1"] = 17, ["Interceptors2"] = 18}
FIEradicateEnemiesENDTimer = {["FleetIntel"] = 19}
FIEradicateEnemiesLBXOutTimer = {["FleetIntel"] = 20}
FIEradicateEnemiesPINGTimer = {["FleetIntel"] = 21}
FIEradicateEnemiesTimer = {["FleetIntel"] = 22}
FIOpenSensorsTimer = {["FleetIntel"] = 23}
FISendProbeENDTimer = {["FleetIntel"] = 24}
FISendProbeLBXOutTimer = {["FleetIntel"] = 25}
FISendProbePINGTimer = {["FleetIntel"] = 26}
FISendProbeTimer = {["FleetIntel"] = 27}
LeftBoxDelayTIMER = {["Frigates1"] = 28, ["Frigates2"] = 29, ["Frigates3"] = 30}
RightBoxDelayTIMER = {["Frigates1"] = 31, ["Frigates2"] = 32, ["Frigates3"] = 33}
StartAttackOnCollector = {["Interceptors1"] = 34, ["Interceptors2"] = 35}
TopBoxDelayTIMER = {["Frigates1"] = 36, ["Frigates2"] = 37, ["Frigates3"] = 38}
WaitToFinishServicing = {["Interceptors1"] = 39, ["Interceptors2"] = 40}


--kas timer names, with mappings to indices
TimerID_G_FCHyperspaceSuccessful = 0
TimerID_G_MissionCompleteTimer = 7
TimerID_G_OrderToGuardHasBeenGiven = 5
TimerID_G_PlayIonOrPlasmaEvent = 8
TimerID_G_PlayTeachDefenders = 4
TimerID_G_PlayTeachMoveWhileAttacking = 3
TimerID_G_WaitToPlayFinalEvent = 1
TimerID_G_WaitToPlayResourcerEvent = 2
TimerID_LocationCardTimer = 6


--KAS objective names, set by KASObjective_Add
ObjectiveID_DestroyResourcer = 2
ObjectiveID_EradicateEnemies = 1
ObjectiveID_Hyperspace = 4
ObjectiveID_ResearchDefenders = 3
ObjectiveID_SendProbe = 0
ObjectiveID_Count = 5


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_HidingSpherePOINTER = 0


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"05 - Great Wastelands",
	"05 - Macro-déserts",
	"05 - Große Einöde",
	"05 - Grandes páramos",
	"05 - Le lande desolate", }
LSTRING_LocationCard = {  -- multilingual strings
	"GREAT WASTELANDS",
	"MACRO-DESERTS",
	"GROSSE EINÖDE",
	"GRANDES PÁRAMOS",
	"LE LANDE DESOLATE", }
LSTRING_FISendProbeTASKBAR = {  -- multilingual strings
	"Investigate the asteroid belt",
	"Sondez la ceinture d'astéroïdes",
	"Den Asteroidengürtel untersuchen.",
	"Investigar el cinturón de asteroides",
	"Indaga nella fascia asteroidale", }
LSTRING_FIEradicateTASKBAR = {  -- multilingual strings
	"Eradicate all enemy ships",
	"Elimination totalité vaisseaux ennemis",
	"Alle feindlichen Schiffe auslöschen.",
	"Erradicar todas las naves enemigas",
	"Distruggi tutti i vascelli nemici", }
LSTRING_FIDestroyResTASKBAR = {  -- multilingual strings
	"Destroy Enemy Resource Collector",
	"Destruction Collecteur de Ressources Ennemi.",
	"Rohstoffschiffe des Feindes zerstören.",
	"Destruir recolector de recursos enemigo",
	"Distruggi i Collettori di Risorse nemici", }
LSTRING_FITeachDefendersTASKBAR = {  -- multilingual strings
	"Research Defender sub-systems",
	"Recherche sur les sous-systèmes de défense",
	"Abwehrkreuzer-Subsysteme erforschen.",
	"Investigar subsistemas de defensa",
	"Ricerca i sotto-sistemi del Difensore", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                      HYPERSPACE",
	"                      HYPERESPACE",
	"           HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission05 FleetIntel FSM
--
function Init_Mission05_FleetIntel(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Init_Mission05_FleetIntel")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FSM
--
function Watch_Mission05_FleetIntel(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FCIntro state
--
function Init_Mission05_FleetIntel_FCIntro(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60512", 3)    --kasfSpeechEvent((512 + 2048 + 268435456), 0)
	
end 


--
--  "watch" code for Mission05 FleetIntel FCIntro state
--
function Watch_Mission05_FleetIntel_FCIntro(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FISendProbeLBXIn")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FCIntro")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeLBXIn", "Watch_Mission05_FleetIntel_FCIntro")
	Init_Mission05_FleetIntel_FISendProbeLBXIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbeLBXIn state
--
function Init_Mission05_FleetIntel_FISendProbeLBXIn(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FISendProbeOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeOpenSensors", "Init_Mission05_FleetIntel_FISendProbeLBXIn")
	Init_Mission05_FleetIntel_FISendProbeOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbeLBXIn state
--
function Watch_Mission05_FleetIntel_FISendProbeLBXIn(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbeOpenSensors state
--
function Init_Mission05_FleetIntel_FISendProbeOpenSensors(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbeOpenSensors state
--
function Watch_Mission05_FleetIntel_FISendProbeOpenSensors(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FISendProbe")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbeOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbe", "Watch_Mission05_FleetIntel_FISendProbeOpenSensors")
	Init_Mission05_FleetIntel_FISendProbe(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbe state
--
function Init_Mission05_FleetIntel_FISendProbe(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISendProbeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbe state
--
function Watch_Mission05_FleetIntel_FISendProbe(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FISendProbeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FISendProbe2")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbe")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbe2", "Watch_Mission05_FleetIntel_FISendProbe")
	Init_Mission05_FleetIntel_FISendProbe2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbe2 state
--
function Init_Mission05_FleetIntel_FISendProbe2(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60513", 3)    --kasfSpeechEvent((513 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60515", 3)    --kasfSpeechEvent((515 + 4096 + 268435456), 0)
	end 
	KASTimer_Start(FISendProbePINGTimer[TeamName], 7)
	G_FleetIntelIntroHasPlayed = 1 --created,set
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbe2 state
--
function Watch_Mission05_FleetIntel_FISendProbe2(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateSendProbePingAgain[TeamName] == 0) then 
	
	KAS_PingAddPoint("HidingPOINT", "HidingPOINT", "$60526")    --kasfPingAddPoint(kasVectorPtr("HidingPOINT"), "HidingPOINT")
	NeverCreateSendProbePingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbe2")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbe2")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FISendProbeWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbe2")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeWAITEND", "Watch_Mission05_FleetIntel_FISendProbe2")
	Init_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISendProbePINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateSendProbePingAgain[TeamName] == 0) then 
	
	KAS_PingAddPoint("HidingPOINT", "HidingPOINT", "$60526")    --kasfPingAddPoint(kasVectorPtr("HidingPOINT"), "HidingPOINT")
	NeverCreateSendProbePingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_HidingSpherePOINTER = KASPointer_AddVolume("HidingVolume")    --kasfTutSetPointerTargetAIVolume("HidingSpherePOINTER", kasVolumePtr("HidingVolume"))
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbePING state
--
function Init_Mission05_FleetIntel_FISendProbePING(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISendProbePINGTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbePING state
--
function Watch_Mission05_FleetIntel_FISendProbePING(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateSendProbePingAgain[TeamName] == 0) then 
	
	KAS_PingAddPoint("HidingPOINT", "HidingPOINT", "$60526")    --kasfPingAddPoint(kasVectorPtr("HidingPOINT"), "HidingPOINT")
	NeverCreateSendProbePingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbePING")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbePING")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISendProbePINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateSendProbePingAgain[TeamName] == 0) then 
	
	KAS_PingAddPoint("HidingPOINT", "HidingPOINT", "$60526")    --kasfPingAddPoint(kasVectorPtr("HidingPOINT"), "HidingPOINT")
	NeverCreateSendProbePingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_HidingSpherePOINTER = KASPointer_AddVolume("HidingVolume")    --kasfTutSetPointerTargetAIVolume("HidingSpherePOINTER", kasVolumePtr("HidingVolume"))
	--kasJump("FISendProbeWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbePING")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeWAITEND", "Watch_Mission05_FleetIntel_FISendProbePING")
	Init_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbe3 state
--
function Init_Mission05_FleetIntel_FISendProbe3(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbe3 state
--
function Watch_Mission05_FleetIntel_FISendProbe3(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbe3")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbe3")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FISendProbeWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbe3")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeWAITEND", "Watch_Mission05_FleetIntel_FISendProbe3")
	Init_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbeLBXOut state
--
function Init_Mission05_FleetIntel_FISendProbeLBXOut(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISendProbeLBXOutTimer[TeamName], 30)
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbeLBXOut state
--
function Watch_Mission05_FleetIntel_FISendProbeLBXOut(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FISendProbeLBXOutTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FISendProbeWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbeLBXOut")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeWAITEND", "Watch_Mission05_FleetIntel_FISendProbeLBXOut")
	Init_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbeLBXOut")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbeLBXOut")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbeWAITEND state
--
function Init_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FISendProbeENDTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbeWAITEND state
--
function Watch_Mission05_FleetIntel_FISendProbeWAITEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbeWAITEND")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbeWAITEND")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FISendProbeENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FISendProbeEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FISendProbeWAITEND")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeEND", "Watch_Mission05_FleetIntel_FISendProbeWAITEND")
	Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FISendProbeEND state
--
function Init_Mission05_FleetIntel_FISendProbeEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	G_CLICK_SendProbe = 0 --destroyed
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Init_Mission05_FleetIntel_FISendProbeEND")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FISendProbeEND state
--
function Watch_Mission05_FleetIntel_FISendProbeEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesLBXIn state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesLBXIn(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASRules_PauseExceptFSM(TeamName)    --kasfOtherKASPause()
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("FIEradicateEnemiesOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors", "Init_Mission05_FleetIntel_FIEradicateEnemiesLBXIn")
	Init_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesLBXIn state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXIn(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesOpenSensors state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesOpenSensors state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIEradicateEnemies")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemies", "Watch_Mission05_FleetIntel_FIEradicateEnemiesOpenSensors")
	Init_Mission05_FleetIntel_FIEradicateEnemies(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemies state
--
function Init_Mission05_FleetIntel_FIEradicateEnemies(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIEradicateEnemiesTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemies state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemies(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIEradicateEnemiesTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIEradicateEnemies2")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemies")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemies2", "Watch_Mission05_FleetIntel_FIEradicateEnemies")
	Init_Mission05_FleetIntel_FIEradicateEnemies2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemies2 state
--
function Init_Mission05_FleetIntel_FIEradicateEnemies2(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60517", 3)    --kasfSpeechEvent((517 + 4096 + 268435456), 0)
	G_EradicateEnemiesHasPlayed = 1 --created,set
	--kasJump("FIEradicateEnemiesPING")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesPING", "Init_Mission05_FleetIntel_FIEradicateEnemies2")
	Init_Mission05_FleetIntel_FIEradicateEnemiesPING(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemies2 state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemies2(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesPING state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesPING(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIEradicateEnemiesPINGTimer[TeamName], 0)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesPING state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesPING(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	if (NeverCreateEradicatePingAgain[TeamName] == 0) then 
	
	KAS_PingAddShips("Carrier", "CarrierPING", "$60527")    --kasfPingAddShips(kasAITeamShipsPtr("Carrier"), "CarrierPING")
	NeverCreateEradicatePingAgain[TeamName] = 1 --created,set
	end 
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIEradicateEnemiesEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesPING")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesPING")
	Init_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	return
	elseif (IntelEvent[TeamName] ~= 0) then 
	
	--kasJump("FIEradicateEnemiesWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesPING")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesPING")
	Init_Mission05_FleetIntel_FIEradicateEnemiesWAITEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIEradicateEnemiesPINGTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(267)
	if (NeverCreateEradicatePingAgain[TeamName] == 0) then 
	
	KAS_PingAddShips("Carrier", "CarrierPING", "$60527")    --kasfPingAddShips(kasAITeamShipsPtr("Carrier"), "CarrierPING")
	NeverCreateEradicatePingAgain[TeamName] = 1 --created,set
	end 
	ignoredFunction()    --kasfTutSetTextDisplayBoxToSubtitleRegion()
	PointerID_HidingSpherePOINTER = KASPointer_AddVolume("HidingVolume")    --kasfTutSetPointerTargetAIVolume("HidingSpherePOINTER", kasVolumePtr("HidingVolume"))
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesLBXOut state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesLBXOut(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIEradicateEnemiesLBXOutTimer[TeamName], 11)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesLBXOut state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXOut(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (KASTimer_IsExpiredIfSoDestroy(FIEradicateEnemiesLBXOutTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 5)    --kasfWideScreenOut(150)
	--kasJump("FIEradicateEnemiesWAITEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXOut")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXOut")
	Init_Mission05_FleetIntel_FIEradicateEnemiesWAITEND(TeamName)
	return
	end 
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIEradicateEnemiesEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXOut")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXOut")
	Init_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesWAITEND state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesWAITEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KASTimer_Start(FIEradicateEnemiesENDTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesWAITEND state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIEradicateEnemiesEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND")
	Init_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIEradicateEnemiesENDTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("FIEradicateEnemiesEND")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesEND", "Watch_Mission05_FleetIntel_FIEradicateEnemiesWAITEND")
	Init_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIEradicateEnemiesEND state
--
function Init_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE001[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	KAS_MusicPlayType("data:sound/music/battle/B04_EvilEmpire", MUS_Ambient)    --kasfMusicPlay(15)
	end 
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KASRules_UnpauseOthers()    --kasfOtherKASUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	G_CLICK_EradicateEnemies = 0 --destroyed
	--kasJump("FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Init_Mission05_FleetIntel_FIEradicateEnemiesEND")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 FleetIntel FIEradicateEnemiesEND state
--
function Watch_Mission05_FleetIntel_FIEradicateEnemiesEND(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIDestroyResourcer state
--
function Init_Mission05_FleetIntel_FIDestroyResourcer(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60520", 3)    --kasfSpeechEvent((520 + 4096 + 268435456), 0)
	if (_VIFONCE002[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	G_DestroyResourcerHasPlayed = 1 --created,set
	KAS_PingAddShips("Collector", "CollectorPING", "$60511")    --kasfPingAddShips(kasAITeamShipsPtr("Collector"), "CollectorPING")
	if (SobGroup_Count("Collector2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Collector2"))
	
	KAS_PingAddShips("Collector2", "CollectorPING2", "$60511")    --kasfPingAddShips(kasAITeamShipsPtr("Collector2"), "CollectorPING2")
	end 
	end 
	G_CLICK_DestroyResourcer = 0 --destroyed
	
end 


--
--  "watch" code for Mission05 FleetIntel FIDestroyResourcer state
--
function Watch_Mission05_FleetIntel_FIDestroyResourcer(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIDestroyResourcer")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FIDestroyResourcer")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FITeachMoveAttack state
--
function Init_Mission05_FleetIntel_FITeachMoveAttack(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60762", 3)    --kasfSpeechEvent((762 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission05 FleetIntel FITeachMoveAttack state
--
function Watch_Mission05_FleetIntel_FITeachMoveAttack(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FITeachMoveAttack")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FITeachMoveAttack")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FITeachDefenders state
--
function Init_Mission05_FleetIntel_FITeachDefenders(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60522", 3)    --kasfSpeechEvent((522 + 4096 + 268435456), 0)
	G_TeachDefenderEventHasPlayed = 1 --created,set
	G_CLICK_ResearchDefenders = 0 --destroyed
	
end 


--
--  "watch" code for Mission05 FleetIntel FITeachDefenders state
--
function Watch_Mission05_FleetIntel_FITeachDefenders(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FITeachDefenders")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FITeachDefenders")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIPlasmaTech state
--
function Init_Mission05_FleetIntel_FIPlasmaTech(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60519", 3)    --kasfSpeechEvent((519 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIPlasmaTech state
--
function Watch_Mission05_FleetIntel_FIPlasmaTech(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_HW1_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_UnrestrictResearchOption(0, "PlasmaBombLauncher")    --kasfAllowPlayerToResearch("PlasmaWeapons")
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIPlasmaTech")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FIPlasmaTech")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIIonTech state
--
function Init_Mission05_FleetIntel_FIIonTech(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60518", 3)    --kasfSpeechEvent((518 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission05 FleetIntel FIIonTech state
--
function Watch_Mission05_FleetIntel_FIIonTech(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_UnrestrictResearchOption(0, "IonCannons")    --kasfAllowPlayerToResearch("IonWeapons")
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIonTech")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FIIonTech")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIObjectivesComplete state
--
function Init_Mission05_FleetIntel_FIObjectivesComplete(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60523", 3)    --kasfSpeechEvent((523 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60524", 3)    --kasfSpeechEvent((524 + 4096 + 268435456), 0)
	end 
	
end 


--
--  "watch" code for Mission05 FleetIntel FIObjectivesComplete state
--
function Watch_Mission05_FleetIntel_FIObjectivesComplete(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIIdle")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIObjectivesComplete")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIdle", "Watch_Mission05_FleetIntel_FIObjectivesComplete")
	Init_Mission05_FleetIntel_FIIdle(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 FleetIntel FIIdle state
--
function Init_Mission05_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	
end 


--
--  "watch" code for Mission05 FleetIntel FIIdle state
--
function Watch_Mission05_FleetIntel_FIIdle(TeamName)
	--FSM: FSM_Mission05_FleetIntel
	--TeamName = FleetIntel
	if (_VIFONCE003[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_FCHyperspaceSuccessful) ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	--kasJump("FCIntro")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FCIntro", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FCIntro(TeamName)
	return
	end 
	if (_VIFONCE004[TeamName] == 0 and (KASObjective_GetState(ObjectiveID_SendProbe) == 1)) then  -- "ifonce" #4    --kasfObjectiveGet("SendProbe")
	
	_VIFONCE004[TeamName] = 1 --created,set;
	--kasJump("FIEradicateEnemiesLBXIn")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXIn", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIEradicateEnemiesLBXIn(TeamName)
	return
	end 
	if (_VIFONCE005[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_WaitToPlayFinalEvent) ~= 0)) then  -- "ifonce" #5
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("FIObjectivesComplete")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIObjectivesComplete", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIObjectivesComplete(TeamName)
	return
	end 
	if (_VIFONCE006[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_WaitToPlayResourcerEvent) ~= 0)) then  -- "ifonce" #6
	
	_VIFONCE006[TeamName] = 1 --created,set;
	--kasJump("FIDestroyResourcer")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIDestroyResourcer", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIDestroyResourcer(TeamName)
	return
	end 
	if (_VIFONCE007[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_PlayTeachMoveWhileAttacking) ~= 0)) then  -- "ifonce" #7
	
	_VIFONCE007[TeamName] = 1 --created,set;
	--kasJump("FITeachMoveAttack")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FITeachMoveAttack", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FITeachMoveAttack(TeamName)
	return
	end 
	if (_VIFONCE008[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_PlayTeachDefenders) ~= 0)) then  -- "ifonce" #8
	
	_VIFONCE008[TeamName] = 1 --created,set;
	--kasJump("FITeachDefenders")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FITeachDefenders", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FITeachDefenders(TeamName)
	return
	end 
	if (_VIFONCE009[TeamName] == 0 and (G_PlayPlasmaTechEvent == 1)) then  -- "ifonce" #9
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("FIPlasmaTech")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIPlasmaTech", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIPlasmaTech(TeamName)
	return
	end 
	if (_VIFONCE010[TeamName] == 0 and (G_PlayIonTechEvent == 1)) then  -- "ifonce" #10
	
	_VIFONCE010[TeamName] = 1 --created,set;
	--kasJump("FIIonTech")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIIonTech", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIIonTech(TeamName)
	return
	end 
	if (G_CLICK_SendProbe ~= 0) then 
	
	--kasJump("FISendProbeLBXIn")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FISendProbeLBXIn", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FISendProbeLBXIn(TeamName)
	return
	end 
	if (G_CLICK_EradicateEnemies ~= 0) then 
	
	--kasJump("FIEradicateEnemiesLBXIn")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIEradicateEnemiesLBXIn", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIEradicateEnemiesLBXIn(TeamName)
	return
	end 
	if (G_CLICK_DestroyResourcer ~= 0) then 
	
	--kasJump("FIDestroyResourcer")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FIDestroyResourcer", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FIDestroyResourcer(TeamName)
	return
	end 
	if (G_CLICK_ResearchDefenders ~= 0) then 
	
	--kasJump("FITeachDefenders")
	--KASRule_Remove("FSM_Mission05_FleetIntel", "Watch_Mission05_FleetIntel_FIIdle")
	KASRule_Add(TeamName, "Watch_Mission05_FleetIntel_FITeachDefenders", "Watch_Mission05_FleetIntel_FIIdle")
	Init_Mission05_FleetIntel_FITeachDefenders(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector FSM
--
function Init_Mission05_Collector(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	G_CollectorUnderAttack = 0 --created,set
	G_CollectorIsHurtin = 0 --created,set
	VisitedCollectionPoint[TeamName] = 0 --created,set
	--kasJump("WaitingToCollect")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_WaitingToCollect", "Init_Mission05_Collector")
	Init_Mission05_Collector_WaitingToCollect(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Collector FSM
--
function Watch_Mission05_Collector(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (KAS_TeamNamesEqual(TeamName, "Collector") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Collector"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingCollector") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingCollector"))
	
	G_CollectorUnderAttack = 1 --set
	else
	
	G_CollectorUnderAttack = 0 --set
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Collector2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Collector2"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingCollector") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingCollector"))
	
	G_CollectorUnderAttack = 1 --set
	else
	
	G_CollectorUnderAttack = 0 --set
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Collector") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Collector"))
	
	if (KAS_TeamHealth(TeamName) < 85) then     --kasfTeamHealthAverage()
	
	G_CollectorIsHurtin = 1 --set
	else
	
	G_CollectorIsHurtin = 0 --set
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Collector2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Collector2"))
	
	if (KAS_TeamHealth(TeamName) < 85) then     --kasfTeamHealthAverage()
	
	G_CollectorIsHurtin = 1 --set
	else
	
	G_CollectorIsHurtin = 0 --set
	end 
	end 
	if (_VIFONCE011[TeamName] == 0 and (SobGroup_Count(TeamName) == 0)) then  -- "ifonce" #11    --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	_VIFONCE011[TeamName] = 1 --created,set;
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_NullState", "Watch_Mission05_Collector")
	Init_Mission05_Collector_NullState(TeamName)
	return
	end 
	if (_VIFONCE012[TeamName] == 0 and (KAS_GameMessageReceived({"Game_NonPlayerHarvesterDone"}) ~= 0)) then  -- "ifonce" #12    --kasfTutGameSentMessage("Game_NonPlayerHarvesterDone")
	
	_VIFONCE012[TeamName] = 1 --created,set;
	--kasJump("DockForGood")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_DockForGood", "Watch_Mission05_Collector")
	Init_Mission05_Collector_DockForGood(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector WaitingToCollect state
--
function Init_Mission05_Collector_WaitingToCollect(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	
end 


--
--  "watch" code for Mission05 Collector WaitingToCollect state
--
function Watch_Mission05_Collector_WaitingToCollect(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("MoveToHarvestArea")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_WaitingToCollect")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_MoveToHarvestArea", "Watch_Mission05_Collector_WaitingToCollect")
	Init_Mission05_Collector_MoveToHarvestArea(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector MoveToHarvestArea state
--
function Init_Mission05_Collector_MoveToHarvestArea(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	if ((VisitedCollectionPoint[TeamName] == 0) or (VisitedCollectionPoint[TeamName] == 1)) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("HarvestPoint1"))    --kasfMoveTo(kasVectorPtr("HarvestPoint1"))
	MovingToHarvestPoint1[TeamName] = 1 --created,set
	elseif (VisitedCollectionPoint[TeamName] == 2) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("HarvestPoint2"))    --kasfMoveTo(kasVectorPtr("HarvestPoint2"))
	MovingToHarvestPoint2[TeamName] = 1 --created,set
	elseif (VisitedCollectionPoint[TeamName] == 3) then 
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("HarvestPoint3"))    --kasfMoveTo(kasVectorPtr("HarvestPoint3"))
	MovingToHarvestPoint3[TeamName] = 1 --created,set
	else
	
	--kasJump("Harvest")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_Harvest", "Init_Mission05_Collector_MoveToHarvestArea")
	Init_Mission05_Collector_Harvest(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Collector MoveToHarvestArea state
--
function Watch_Mission05_Collector_MoveToHarvestArea(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if ((MovingToHarvestPoint1[TeamName] == 1) and (SobGroup_IsShipNearPoint(TeamName, "HarvestPoint1", 1400) ~= 0)) then     --kasfNearby(kasVectorPtr("HarvestPoint1"), 4000)
	
	MovingToHarvestPoint1[TeamName] = 0 --destroyed
	--kasJump("Harvest")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_MoveToHarvestArea")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_Harvest", "Watch_Mission05_Collector_MoveToHarvestArea")
	Init_Mission05_Collector_Harvest(TeamName)
	return
	elseif ((MovingToHarvestPoint2[TeamName] == 1) and (SobGroup_IsShipNearPoint(TeamName, "HarvestPoint2", 1400) ~= 0)) then     --kasfNearby(kasVectorPtr("HarvestPoint2"), 4000)
	
	MovingToHarvestPoint2[TeamName] = 0 --destroyed
	--kasJump("Harvest")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_MoveToHarvestArea")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_Harvest", "Watch_Mission05_Collector_MoveToHarvestArea")
	Init_Mission05_Collector_Harvest(TeamName)
	return
	elseif ((MovingToHarvestPoint3[TeamName] == 1) and (SobGroup_IsShipNearPoint(TeamName, "HarvestPoint3", 1400) ~= 0)) then     --kasfNearby(kasVectorPtr("HarvestPoint3"), 4000)
	
	MovingToHarvestPoint3[TeamName] = 0 --destroyed
	--kasJump("Harvest")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_MoveToHarvestArea")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_Harvest", "Watch_Mission05_Collector_MoveToHarvestArea")
	Init_Mission05_Collector_Harvest(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector Harvest state
--
function Init_Mission05_Collector_Harvest(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsAggressive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	KAS_Harvest(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfHarvest()
	
end 


--
--  "watch" code for Mission05 Collector Harvest state
--
function Watch_Mission05_Collector_Harvest(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (KAS_GetCurrentOrder(TeamName) == 3) then     --kasfShipsOrder((&kasThisTeamPtr->shipList))
	
	VisitedCollectionPoint[TeamName] = VisitedCollectionPoint[TeamName] + 1
	--kasJump("Docking")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_Harvest")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_Docking", "Watch_Mission05_Collector_Harvest")
	Init_Mission05_Collector_Docking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector Docking state
--
function Init_Mission05_Collector_Docking(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	
end 


--
--  "watch" code for Mission05 Collector Docking state
--
function Watch_Mission05_Collector_Docking(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (KAS_GetCurrentOrder(TeamName) ~= 3) then     --kasfShipsOrder((&kasThisTeamPtr->shipList))
	
	--kasJump("MoveToHarvestArea")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_Docking")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_MoveToHarvestArea", "Watch_Mission05_Collector_Docking")
	Init_Mission05_Collector_MoveToHarvestArea(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector DockForGood state
--
function Init_Mission05_Collector_DockForGood(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_DockSobGroupAndStayDocked(TeamName, "Carrier")    --kasfDockStay(kasAITeamPtr("Carrier"))
	else
	
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	end 
	
end 


--
--  "watch" code for Mission05 Collector DockForGood state
--
function Watch_Mission05_Collector_DockForGood(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("WaitingToCollect")
	--KASRule_Remove("FSM_Mission05_Collector", "Watch_Mission05_Collector_DockForGood")
	KASRule_Add(TeamName, "Watch_Mission05_Collector_WaitingToCollect", "Watch_Mission05_Collector_DockForGood")
	Init_Mission05_Collector_WaitingToCollect(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Collector NullState state
--
function Init_Mission05_Collector_NullState(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	
end 


--
--  "watch" code for Mission05 Collector NullState state
--
function Watch_Mission05_Collector_NullState(TeamName)
	--FSM: FSM_Mission05_Collector
	--TeamName = Collector
	
end 


--
--  "initialize" code for Mission05 Interceptors FSM
--
function Init_Mission05_Interceptors(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	SHIPSOriginal[TeamName] = (SobGroup_Count(TeamName)) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	SHIPSRequested[TeamName] = 0 --created,set
	SHIPSNeeded[TeamName] = 0 --created,set
	SHIPSNewships[TeamName] = 0 --created,set
	SHIPSKilled[TeamName] = 0 --created,set
	DelaySHIPSNeeded[TeamName] = 0 --created,set
	G_TOTALOriginalInterceptors = G_TOTALOriginalInterceptors + SobGroup_Count(TeamName) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	--kasJump("DockInstant")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockInstant", "Init_Mission05_Interceptors")
	Init_Mission05_Interceptors_DockInstant(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Interceptors FSM
--
function Watch_Mission05_Interceptors(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((SobGroup_Count(TeamName) == 0) and (WaitingForShips[TeamName] == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("AllDeadWaitForShips")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AllDeadWaitForShips", "Watch_Mission05_Interceptors")
	Init_Mission05_Interceptors_AllDeadWaitForShips(TeamName)
	return
	end 
	if (_VIFONCE013[TeamName] == 0 and ((G_TOTALInterceptorsKilled) == 2 * G_TOTALOriginalInterceptors)) then  -- "ifonce" #13
	
	_VIFONCE013[TeamName] = 1 --created,set;
	G_DontRequestAnymore = 1 --created,set
	end 
	if (((SobGroup_Count(TeamName) + SHIPSRequested[TeamName]) < SHIPSOriginal[TeamName]) and (G_DontRequestAnymore == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SHIPSNeeded[TeamName] = (SHIPSOriginal[TeamName] - (SobGroup_Count(TeamName) + SHIPSRequested[TeamName])) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	DelaySHIPSNeeded[TeamName] = DelaySHIPSNeeded[TeamName] + SHIPSNeeded[TeamName] --set
	SHIPSKilled[TeamName] = SHIPSKilled[TeamName] + SHIPSNeeded[TeamName] --set
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] + SHIPSNeeded[TeamName] --set
	end 
	SHIPSNewships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (SHIPSNewships[TeamName] ~= 0) then 
	
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] - SHIPSNewships[TeamName] --set
	end 
	if ((DelaySHIPSNeeded[TeamName] > 0) and (KASTimer_IsExpiredIfSoDestroy(DelaySHIPSRequest[TeamName]) ~= 0)) then 
	
	KAS_RequestShips(TeamName, "Tai_Interceptor", DelaySHIPSNeeded[TeamName])    --kasfRequestShips("HeavyInterceptor", ___KAS_SCOPED_VAR____DelaySHIPSNeeded_)
	DelaySHIPSNeeded[TeamName] = 0 --set
	end 
	if ((DelaySHIPSNeeded[TeamName] > 0) and (KASTimer_GetRemaining(DelaySHIPSRequest[TeamName]) == 0)) then 
	
	KASTimer_Start(DelaySHIPSRequest[TeamName], 30)
	end 
	if (_VIFONCE014[TeamName] == 0 and ((G_ACT2HasBegun == 1) and (KAS_GameMessageReceived({"Game_PlayerHarvesterDone"}) == 0))) then  -- "ifonce" #14    --kasfTutGameSentMessage("Game_PlayerHarvesterDone")
	
	_VIFONCE014[TeamName] = 1 --created,set;
	KASTimer_Start(StartAttackOnCollector[TeamName], RandomIntRange(15, 35))    --kasfRandom(15, 35)
	end 
	if (_VIFONCE015[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(StartAttackOnCollector[TeamName]) ~= 0)) then  -- "ifonce" #15
	
	_VIFONCE015[TeamName] = 1 --created,set;
	if (SobGroup_Count("Interceptors1") >= SobGroup_Count("Interceptors2")) then     --kasfShipsCount(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsCount(kasAITeamShipsPtr("Interceptors1"))
	
	if (KAS_TeamNamesEqual(TeamName, "Interceptors1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Interceptors1"))
	
	--kasJump("AttackCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackCollector", "Watch_Mission05_Interceptors")
	Init_Mission05_Interceptors_AttackCollector(TeamName)
	return
	end 
	else
	
	if (KAS_TeamNamesEqual(TeamName, "Interceptors2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Interceptors2"))
	
	--kasJump("AttackCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackCollector", "Watch_Mission05_Interceptors")
	Init_Mission05_Interceptors_AttackCollector(TeamName)
	return
	end 
	end 
	end 
	if (_VIFONCE016[TeamName] == 0 and (G_ACT3HasBegun == 1)) then  -- "ifonce" #16
	
	_VIFONCE016[TeamName] = 1 --created,set;
	--kasJump("ACT3Guard")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_ACT3Guard", "Watch_Mission05_Interceptors")
	Init_Mission05_Interceptors_ACT3Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors AllDeadWaitForShips state
--
function Init_Mission05_Interceptors_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	WaitingForShips[TeamName] = 1 --created,set
	
end 


--
--  "watch" code for Mission05 Interceptors AllDeadWaitForShips state
--
function Watch_Mission05_Interceptors_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (SobGroup_Count(TeamName) > 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	WaitingForShips[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AllDeadWaitForShips")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AllDeadWaitForShips")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors DockInstant state
--
function Init_Mission05_Interceptors_DockInstant(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	SobGroup_DockSobGroupInstant(TeamName, "Carrier")    --kasfDockInstant(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission05 Interceptors DockInstant state
--
function Watch_Mission05_Interceptors_DockInstant(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("WaitingToPatrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_DockInstant")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_WaitingToPatrol", "Watch_Mission05_Interceptors_DockInstant")
	Init_Mission05_Interceptors_WaitingToPatrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors WaitingToPatrol state
--
function Init_Mission05_Interceptors_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	
end 


--
--  "watch" code for Mission05 Interceptors WaitingToPatrol state
--
function Watch_Mission05_Interceptors_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_WaitingToPatrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Launch", "Watch_Mission05_Interceptors_WaitingToPatrol")
	Init_Mission05_Interceptors_Launch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors Launch state
--
function Init_Mission05_Interceptors_Launch(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission05 Interceptors Launch state
--
function Watch_Mission05_Interceptors_Launch(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Launch")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_Launch")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors Patrol state
--
function Init_Mission05_Interceptors_Patrol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (_VIFONCE017[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #17
	
	_VIFONCE017[TeamName] = 1 --created,set;
	KAS_SetFormation(TeamName, "Delta3D")    --kasfFormationDelta3D()
	end 
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsNeutral()
	if (KAS_TeamNamesEqual(TeamName, "Interceptors1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Interceptors1"))
	
	SobGroup_FollowPath(TeamName, "InterceptorPath", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("InterceptorPath"))
	elseif (KAS_TeamNamesEqual(TeamName, "Interceptors2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Interceptors2"))
	
	SobGroup_FollowPath(TeamName, "InterceptorPath2", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("InterceptorPath2"))
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors Patrol state
--
function Watch_Mission05_Interceptors_Patrol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (G_ACT3HasBegun == 1) then 
	
	--kasJump("ACT3Guard")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_ACT3Guard", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_ACT3Guard(TeamName)
	return
	end 
	if ((KAS_TeamFuelAverage(TeamName) < 20) and (G_NobodyLeftToDockWith == 0)) then     --kasfTeamFuelAverage()
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackCarrierVol", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_AttackCarrierVol(TeamName)
	return
	end 
	if ((G_CollectorIsHurtin == 1) and (G_CollectorUnderAttack == 1)) then 
	
	--kasJump("GuardCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_GuardCollector", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_GuardCollector(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_FrigateVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolTOTAL"))
	
	--kasJump("AttackFrigateVol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackFrigateVol", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_AttackFrigateVol(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_InterceptorNearby", 3500) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("InterceptorNearby"), 10000)
	
	KAS_FillShipsByClass_Normal("GrowSelection_InterceptorMothership", "GrowSelection_InterceptorNearby", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("InterceptorMothership"), kasGrowSelectionPtr("InterceptorNearby"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_InterceptorNearby", "GrowSelection_InterceptorNearby", "GrowSelection_InterceptorMothership")    --kasfShipsRemove(kasGrowSelectionPtr("InterceptorNearby"), kasGrowSelectionPtr("InterceptorMothership"))
	if (SobGroup_Count("GrowSelection_InterceptorNearby") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorNearby"))
	
	--kasJump("AttackNearby")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackNearby", "Watch_Mission05_Interceptors_Patrol")
	Init_Mission05_Interceptors_AttackNearby(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors AttackNearby state
--
function Init_Mission05_Interceptors_AttackNearby(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsNeutral()
		SobGroup_SetStance(TeamName, AggressiveStance)
	GoingInWithThisMany[TeamName] = SobGroup_Count(TeamName) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyFighters", "GrowSelection_InterceptorNearby", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyFighters"), kasGrowSelectionPtr("InterceptorNearby"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyCorvettes", "GrowSelection_InterceptorNearby", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyCorvettes"), kasGrowSelectionPtr("InterceptorNearby"), "CLASS_Corvettes")
	KAS_FillShipsByClass_Normal("GrowSelection_NearbyFrigates", "GrowSelection_InterceptorNearby", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("NearbyFrigates"), kasGrowSelectionPtr("InterceptorNearby"), "CLASS_Frigates")
	KAS_FillShipsByClass_Normal("GrowSelection_InterceptorMothership", "GrowSelection_InterceptorNearby", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("InterceptorMothership"), kasGrowSelectionPtr("InterceptorNearby"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_InterceptorNearby", "GrowSelection_InterceptorNearby", "GrowSelection_InterceptorMothership")    --kasfShipsRemove(kasGrowSelectionPtr("InterceptorNearby"), kasGrowSelectionPtr("InterceptorMothership"))
	NearbySHIPS[TeamName] = SobGroup_Count("GrowSelection_InterceptorNearby") --created,set    --kasfShipsCount(kasGrowSelectionPtr("InterceptorNearby"))
	NearbyFightersSHIPS[TeamName] = SobGroup_Count("GrowSelection_NearbyFighters") --created,set    --kasfShipsCount(kasGrowSelectionPtr("NearbyFighters"))
	NearbyCorvettesSHIPS[TeamName] = SobGroup_Count("GrowSelection_NearbyCorvettes") --created,set    --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	NearbyFrigatesSHIPS[TeamName] = SobGroup_Count("GrowSelection_NearbyFrigates") --created,set    --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	if (RandomIntRange(1, 1000) < 750) then     --kasfRandom(1, 1000)
	
	if (SobGroup_Count("GrowSelection_NearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyFrigates")    --kasfAttack(kasGrowSelectionPtr("NearbyFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_NearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyFighters")    --kasfAttack(kasGrowSelectionPtr("NearbyFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_NearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("NearbyCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_InterceptorNearby") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorNearby"))
	
	KAS_Attack(TeamName, "GrowSelection_InterceptorNearby")    --kasfAttack(kasGrowSelectionPtr("InterceptorNearby"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	else
	
	if (SobGroup_Count("GrowSelection_NearbyCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyCorvettes")    --kasfAttack(kasGrowSelectionPtr("NearbyCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_NearbyFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyFrigates")    --kasfAttack(kasGrowSelectionPtr("NearbyFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_NearbyFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_NearbyFighters")    --kasfAttack(kasGrowSelectionPtr("NearbyFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_InterceptorNearby") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorNearby"))
	
	KAS_Attack(TeamName, "GrowSelection_InterceptorNearby")    --kasfAttack(kasGrowSelectionPtr("InterceptorNearby"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors AttackNearby state
--
function Watch_Mission05_Interceptors_AttackNearby(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((KAS_TeamFuelAverage(TeamName) < 20) and (G_NobodyLeftToDockWith == 0)) then     --kasfTeamFuelAverage()
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if ((G_CollectorIsHurtin == 1) and (G_CollectorUnderAttack == 1)) then 
	
	--kasJump("GuardCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_GuardCollector", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_GuardCollector(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackCarrierVol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_AttackCarrierVol(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_FrigateVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolTOTAL"))
	
	--kasJump("AttackFrigateVol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackFrigateVol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_AttackFrigateVol(TeamName)
	return
	end 
	if ((SobGroup_Count(TeamName) < (5 * GoingInWithThisMany[TeamName] / 10)) and (G_NobodyLeftToDockWith == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if (AttackingFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_NearbyFrigates") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFrigates"))
	
	AttackingFrigate[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingCorvette[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_NearbyCorvettes") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyCorvettes"))
	
	AttackingCorvette[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingFighter[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_NearbyFighters") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearbyFighters"))
	
	AttackingFighter[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingRemaining[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_InterceptorNearby") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("InterceptorNearby"))
	
	AttackingRemaining[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	end 
	if ((KAS_GetCurrentOrder("Interceptors1") ~= 2) or (KAS_GetCurrentOrder("Interceptors2") ~= 2)) then     --kasfShipsOrder(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsOrder(kasAITeamShipsPtr("Interceptors1"))
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackNearby")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackNearby")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors AttackCarrierVol state
--
function Init_Mission05_Interceptors_AttackCarrierVol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsNeutral()
	GoingInWithThisMany[TeamName] = SobGroup_Count(TeamName) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	if (RandomIntRange(1, 1000) < 750) then     --kasfRandom(1, 1000)
	
	if (SobGroup_Count("GrowSelection_CarrierVolFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolFrigates")    --kasfAttack(kasGrowSelectionPtr("CarrierVolFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolFighters")    --kasfAttack(kasGrowSelectionPtr("CarrierVolFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolCorvettes")    --kasfAttack(kasGrowSelectionPtr("CarrierVolCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolTOTAL")    --kasfAttack(kasGrowSelectionPtr("CarrierVolTOTAL"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	else
	
	if (SobGroup_Count("GrowSelection_CarrierVolCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolCorvettes")    --kasfAttack(kasGrowSelectionPtr("CarrierVolCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolFrigates")    --kasfAttack(kasGrowSelectionPtr("CarrierVolFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolFighters")    --kasfAttack(kasGrowSelectionPtr("CarrierVolFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierVolTOTAL")    --kasfAttack(kasGrowSelectionPtr("CarrierVolTOTAL"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors AttackCarrierVol state
--
function Watch_Mission05_Interceptors_AttackCarrierVol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((KAS_TeamFuelAverage(TeamName) < 20) and (G_NobodyLeftToDockWith == 0)) then     --kasfTeamFuelAverage()
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if ((G_CollectorIsHurtin == 1) and (G_CollectorUnderAttack == 1)) then 
	
	--kasJump("GuardCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_GuardCollector", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_GuardCollector(TeamName)
	return
	end 
	if ((SobGroup_Count(TeamName) < (5 * GoingInWithThisMany[TeamName] / 10)) and (G_NobodyLeftToDockWith == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if (AttackingFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_CarrierVolFrigates") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFrigates"))
	
	AttackingFrigate[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingCorvette[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_CarrierVolCorvettes") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolCorvettes"))
	
	AttackingCorvette[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingFighter[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_CarrierVolFighters") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolFighters"))
	
	AttackingFighter[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingRemaining[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_CarrierVolTOTAL") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	AttackingRemaining[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	end 
	if ((KAS_GetCurrentOrder("Interceptors1") ~= 2) or (KAS_GetCurrentOrder("Interceptors2") ~= 2)) then     --kasfShipsOrder(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsOrder(kasAITeamShipsPtr("Interceptors1"))
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCarrierVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors AttackFrigateVol state
--
function Init_Mission05_Interceptors_AttackFrigateVol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsNeutral()
	GoingInWithThisMany[TeamName] = SobGroup_Count(TeamName) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	if (RandomIntRange(1, 1000) < 750) then     --kasfRandom(1, 1000)
	
	if (SobGroup_Count("GrowSelection_FrigateVolFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolFrigates")    --kasfAttack(kasGrowSelectionPtr("FrigateVolFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolFighters")    --kasfAttack(kasGrowSelectionPtr("FrigateVolFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolCorvettes")    --kasfAttack(kasGrowSelectionPtr("FrigateVolCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolTOTAL"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolTOTAL")    --kasfAttack(kasGrowSelectionPtr("FrigateVolTOTAL"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	else
	
	if (SobGroup_Count("GrowSelection_FrigateVolCorvettes") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolCorvettes"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolCorvettes")    --kasfAttack(kasGrowSelectionPtr("FrigateVolCorvettes"))
	AttackingCorvette[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFrigates"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolFrigates")    --kasfAttack(kasGrowSelectionPtr("FrigateVolFrigates"))
	AttackingFrigate[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolFighters") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFighters"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolFighters")    --kasfAttack(kasGrowSelectionPtr("FrigateVolFighters"))
	AttackingFighter[TeamName] = 1 --created,set
	elseif (SobGroup_Count("GrowSelection_FrigateVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolTOTAL"))
	
	KAS_Attack(TeamName, "GrowSelection_FrigateVolTOTAL")    --kasfAttack(kasGrowSelectionPtr("FrigateVolTOTAL"))
	AttackingRemaining[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors AttackFrigateVol state
--
function Watch_Mission05_Interceptors_AttackFrigateVol(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((KAS_TeamFuelAverage(TeamName) < 20) and (G_NobodyLeftToDockWith == 0)) then     --kasfTeamFuelAverage()
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if ((G_CollectorIsHurtin == 1) and (G_CollectorUnderAttack == 1)) then 
	
	--kasJump("GuardCollector")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_GuardCollector", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_GuardCollector(TeamName)
	return
	end 
	if (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_AttackCarrierVol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_AttackCarrierVol(TeamName)
	return
	end 
	if ((SobGroup_Count(TeamName) < (5 * GoingInWithThisMany[TeamName] / 10)) and (G_NobodyLeftToDockWith == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if (AttackingFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_FrigateVolFrigates") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFrigates"))
	
	AttackingFrigate[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingCorvette[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_FrigateVolCorvettes") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolCorvettes"))
	
	AttackingCorvette[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingFighter[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_FrigateVolFighters") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolFighters"))
	
	AttackingFighter[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	elseif (AttackingRemaining[TeamName] == 1) then 
	
	if (SobGroup_Count("GrowSelection_FrigateVolTOTAL") == 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigateVolTOTAL"))
	
	AttackingRemaining[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	end 
	if ((KAS_GetCurrentOrder("Interceptors1") ~= 2) or (KAS_GetCurrentOrder("Interceptors2") ~= 2)) then     --kasfShipsOrder(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsOrder(kasAITeamShipsPtr("Interceptors1"))
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackFrigateVol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackFrigateVol")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors GuardCollector state
--
function Init_Mission05_Interceptors_GuardCollector(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (SobGroup_Count("Collector") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Collector"))
	
	SobGroup_GuardSobGroup(TeamName, "Collector")    --kasfGuardShips(kasAITeamShipsPtr("Collector"))
	elseif (SobGroup_Count("Collector2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Collector2"))
	
	SobGroup_GuardSobGroup(TeamName, "Collector2")    --kasfGuardShips(kasAITeamShipsPtr("Collector2"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Init_Mission05_Interceptors_GuardCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors GuardCollector state
--
function Watch_Mission05_Interceptors_GuardCollector(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((KAS_TeamFuelAverage(TeamName) < 20) and (G_NobodyLeftToDockWith == 0)) then     --kasfTeamFuelAverage()
	
	--kasJump("DockWithSupportFrigate")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_GuardCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_DockWithSupportFrigate", "Watch_Mission05_Interceptors_GuardCollector")
	Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	return
	end 
	if (G_CollectorUnderAttack == 0) then 
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_GuardCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_GuardCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_InterceptorNearby", 3500) == 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("InterceptorNearby"), 10000)
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_GuardCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_GuardCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors DockWithSupportFrigate state
--
function Init_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (SobGroup_Count("SupportFrigate") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	SobGroup_DockSobGroup(TeamName, "SupportFrigate")    --kasfDockSupportWith(kasAITeamPtr("SupportFrigate"))
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	SobGroup_DockSobGroup(TeamName, "Carrier")    --kasfDockSupportWith(kasAITeamPtr("Carrier"))
	else
	
	G_NobodyLeftToDockWith = 1 --created,set
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Init_Mission05_Interceptors_DockWithSupportFrigate")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors DockWithSupportFrigate state
--
function Watch_Mission05_Interceptors_DockWithSupportFrigate(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (KAS_TeamIsDocking(TeamName) == 0) then     --kasfTeamDocking()
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_DockWithSupportFrigate")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_DockWithSupportFrigate")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	if (G_NobodyLeftToDockWith == 1) then 
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_DockWithSupportFrigate")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_DockWithSupportFrigate")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors BeingServiced state
--
function Init_Mission05_Interceptors_BeingServiced(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	KASTimer_Start(WaitToFinishServicing[TeamName], 30)
	
end 


--
--  "watch" code for Mission05 Interceptors BeingServiced state
--
function Watch_Mission05_Interceptors_BeingServiced(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (KASTimer_IsExpiredIfSoDestroy(WaitToFinishServicing[TeamName]) ~= 0) then 
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_BeingServiced")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Launch", "Watch_Mission05_Interceptors_BeingServiced")
	Init_Mission05_Interceptors_Launch(TeamName)
	return
	end 
	if (G_NobodyLeftToDockWith == 1) then 
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_BeingServiced")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_BeingServiced")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors AttackCollector state
--
function Init_Mission05_Interceptors_AttackCollector(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	KAS_FindEnemiesInside("EntireWorld", "GrowSelection_EntireWorld")    --kasfFindEnemiesInside(kasVolumePtr("EntireWorld"), kasGrowSelectionPtr("EntireWorld"), 1000)
	KAS_FillShipsByType_Normal("GrowSelection_Collectors", "GrowSelection_EntireWorld", "ResourceCollector")    --kasfShipsSelectType(kasGrowSelectionPtr("Collectors"), kasGrowSelectionPtr("EntireWorld"), "ResourceCollector")
	if (SobGroup_Count("GrowSelection_Collectors") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Collectors"))
	
	KAS_Attack(TeamName, "GrowSelection_Collectors")    --kasfAttack(kasGrowSelectionPtr("Collectors"))
	CollectorsOriginal[TeamName] = SobGroup_Count("GrowSelection_Collectors") --created,set    --kasfShipsCount(kasGrowSelectionPtr("Collectors"))
	CollectorsKilled[TeamName] = 0 --created,set
	KilledAtStartOfCollectorAttack[TeamName] = SHIPSKilled[TeamName] --created,set
	KilledWhileAttackingCollector[TeamName] = 0 --created,set
	KASTimer_Start(AttackingCollector[TeamName], 600)
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Init_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors AttackCollector state
--
function Watch_Mission05_Interceptors_AttackCollector(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	KilledWhileAttackingCollector[TeamName] = SHIPSKilled[TeamName] - KilledAtStartOfCollectorAttack[TeamName] --set
	if (SobGroup_Count("GrowSelection_Collectors") < CollectorsOriginal[TeamName]) then     --kasfShipsCount(kasGrowSelectionPtr("Collectors"))
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	elseif (KASTimer_IsExpiredIfSoDestroy(AttackingCollector[TeamName]) ~= 0) then 
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	elseif (KilledWhileAttackingCollector[TeamName] >= 10) then 
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	elseif (KAS_GameMessageReceived({"Game_PlayerHarvesterDone"}) ~= 0) then     --kasfTutGameSentMessage("Game_PlayerHarvesterDone")
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	if ((KAS_GetCurrentOrder("Interceptors1") ~= 2) or (KAS_GetCurrentOrder("Interceptors2") ~= 2)) then     --kasfShipsOrder(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsOrder(kasAITeamShipsPtr("Interceptors1"))
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_AttackCollector")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_Patrol", "Watch_Mission05_Interceptors_AttackCollector")
	Init_Mission05_Interceptors_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors ACT3Guard state
--
function Init_Mission05_Interceptors_ACT3Guard(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	elseif (SobGroup_Count("Destroyers1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers1")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers1"))
	elseif (SobGroup_Count("Destroyers2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers2")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers2"))
	elseif (SobGroup_Count("Frigates1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates1")    --kasfGuardShips(kasAITeamShipsPtr("Frigates1"))
	elseif (SobGroup_Count("Frigates2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates2")    --kasfGuardShips(kasAITeamShipsPtr("Frigates2"))
	elseif (SobGroup_Count("Frigates3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates3")    --kasfGuardShips(kasAITeamShipsPtr("Frigates3"))
	else
	
	--kasJump("ACT3AttackWorld")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_ACT3AttackWorld", "Init_Mission05_Interceptors_ACT3Guard")
	Init_Mission05_Interceptors_ACT3AttackWorld(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors ACT3Guard state
--
function Watch_Mission05_Interceptors_ACT3Guard(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	
end 


--
--  "initialize" code for Mission05 Interceptors ACT3AttackWorld state
--
function Init_Mission05_Interceptors_ACT3AttackWorld(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_ACT3IntFound")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("ACT3IntFound"), 1000)
	if (KAS_FillShipsByClass_Normal("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntFound", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_Fighter")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntFound", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntFound", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_Corvette")
	
	else
	
	KAS_ShipsAdd("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntFound")    --kasfShipsAdd(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("ACT3IntFound"))
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_ACT3IntFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_Mothership")
	KAS_FillShipsByClass_Normal("GrowSelection_Resource", "GrowSelection_ACT3IntFound", "Resource")    --kasfShipsSelectClass(kasGrowSelectionPtr("Resource"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_Resource")
	KAS_FillShipsByClass_Normal("GrowSelection_NonCombat", "GrowSelection_ACT3IntFound", "Utility")    --kasfShipsSelectClass(kasGrowSelectionPtr("NonCombat"), kasGrowSelectionPtr("ACT3IntFound"), "CLASS_NonCombat")
	KAS_FillShipsByType_Normal("GrowSelection_ResourceControllers", "GrowSelection_ACT3IntFound", "ResourceController")    --kasfShipsSelectType(kasGrowSelectionPtr("ResourceControllers"), kasGrowSelectionPtr("ACT3IntFound"), "ResourceController")
	SobGroup_FillSubtract("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntTargets", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("Mothership"))
	SobGroup_FillSubtract("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntTargets", "GrowSelection_Resource")    --kasfShipsRemove(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("Resource"))
	SobGroup_FillSubtract("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntTargets", "GrowSelection_NonCombat")    --kasfShipsRemove(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("NonCombat"))
	SobGroup_FillSubtract("GrowSelection_ACT3IntTargets", "GrowSelection_ACT3IntTargets", "GrowSelection_ResourceController")    --kasfShipsRemove(kasGrowSelectionPtr("ACT3IntTargets"), kasGrowSelectionPtr("ResourceController"))
	end 
	if (SobGroup_Count("GrowSelection_ACT3IntTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("ACT3IntTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_ACT3IntTargets")    --kasfAttack(kasGrowSelectionPtr("ACT3IntTargets"))
	else
	
	KAS_Kamikaze(TeamName, "GrowSelection_Mothership")    --kasfKamikaze(kasGrowSelectionPtr("Mothership"))
	end 
	
end 


--
--  "watch" code for Mission05 Interceptors ACT3AttackWorld state
--
function Watch_Mission05_Interceptors_ACT3AttackWorld(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	if ((KAS_GetCurrentOrder("Interceptors1") ~= 2) or (KAS_GetCurrentOrder("Interceptors2") ~= 2)) then     --kasfShipsOrder(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsOrder(kasAITeamShipsPtr("Interceptors1"))
	
	--kasJump("ACT3AttackWorld")
	--KASRule_Remove("FSM_Mission05_Interceptors", "Watch_Mission05_Interceptors_ACT3AttackWorld")
	KASRule_Add(TeamName, "Watch_Mission05_Interceptors_ACT3AttackWorld", "Watch_Mission05_Interceptors_ACT3AttackWorld")
	Init_Mission05_Interceptors_ACT3AttackWorld(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Interceptors NullState state
--
function Init_Mission05_Interceptors_NullState(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	
end 


--
--  "watch" code for Mission05 Interceptors NullState state
--
function Watch_Mission05_Interceptors_NullState(TeamName)
	--FSM: FSM_Mission05_Interceptors
	--TeamName = "Interceptors1"
	
end 


--
--  "initialize" code for Mission05 Frigates FSM
--
function Init_Mission05_Frigates(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	SHIPSOriginal[TeamName] = (SobGroup_Count(TeamName)) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	SHIPSRequested[TeamName] = 0 --created,set
	SHIPSNeeded[TeamName] = 0 --created,set
	SHIPSNewships[TeamName] = 0 --created,set
	SHIPSKilled[TeamName] = 0 --created,set
	G_TOTALOriginalFrigates = G_TOTALOriginalFrigates + SobGroup_Count(TeamName) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	G_NumFrigateTeams = G_NumFrigateTeams + 1
	ThisFrigateNum[TeamName] = G_NumFrigateTeams --created,set
	--kasJump("WaitingToPatrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_WaitingToPatrol", "Init_Mission05_Frigates")
	Init_Mission05_Frigates_WaitingToPatrol(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Frigates FSM
--
function Watch_Mission05_Frigates(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if ((SobGroup_Count(TeamName) == 0) and (WaitingForShips[TeamName] == 0)) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("AllDeadWaitForShips")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AllDeadWaitForShips", "Watch_Mission05_Frigates")
	Init_Mission05_Frigates_AllDeadWaitForShips(TeamName)
	return
	end 
	if ((SobGroup_Count(TeamName) + SHIPSRequested[TeamName]) < SHIPSOriginal[TeamName]) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SHIPSNeeded[TeamName] = (SHIPSOriginal[TeamName] - (SobGroup_Count(TeamName) + SHIPSRequested[TeamName])) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	KAS_RequestShips(TeamName, "Tai_AssaultFrigate", SHIPSNeeded[TeamName])    --kasfRequestShips("StandardFrigate", ___KAS_SCOPED_VAR____SHIPSNeeded_)
	SHIPSKilled[TeamName] = SHIPSKilled[TeamName] + SHIPSNeeded[TeamName] --set
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] + SHIPSNeeded[TeamName] --set
	end 
	SHIPSNewships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (SHIPSNewships[TeamName] ~= 0) then 
	
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] - SHIPSNewships[TeamName] --set
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_FrigatesUnderAttack") ~= 0 and (G_FrigatesUnderAttack == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("FrigatesUnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_FrigatesVsFrigates", "GrowSelection_FrigatesUnderAttack", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("FrigatesVsFrigates"), kasGrowSelectionPtr("FrigatesUnderAttack"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_FrigatesVsFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("FrigatesVsFrigates"))
	
	G_FrigatesUnderAttack = ThisFrigateNum[TeamName] --set
	end 
	elseif ((KAS_UnderAttack(TeamName, "GrowSelection_NullFalkoIsCool") == 0) and (G_FrigatesUnderAttack == ThisFrigateNum[TeamName])) then     --kasfUnderAttack(kasGrowSelectionPtr("NullFalkoIsCool"))
	
	G_FrigatesUnderAttack = 0 --set
	end 
	if (_VIFONCE018[TeamName] == 0 and (G_ACT3HasBegun == 1)) then  -- "ifonce" #18
	
	_VIFONCE018[TeamName] = 1 --created,set;
	--kasJump("ACT3AttackMothership")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3AttackMothership", "Watch_Mission05_Frigates")
	Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AllDeadWaitForShips state
--
function Init_Mission05_Frigates_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	WaitingForShips[TeamName] = 1 --created,set
	
end 


--
--  "watch" code for Mission05 Frigates AllDeadWaitForShips state
--
function Watch_Mission05_Frigates_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (SobGroup_Count(TeamName) > 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	WaitingForShips[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AllDeadWaitForShips")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Watch_Mission05_Frigates_AllDeadWaitForShips")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates WaitingToPatrol state
--
function Init_Mission05_Frigates_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	
end 


--
--  "watch" code for Mission05 Frigates WaitingToPatrol state
--
function Watch_Mission05_Frigates_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_WaitingToPatrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Watch_Mission05_Frigates_WaitingToPatrol")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates Patrol state
--
function Init_Mission05_Frigates_Patrol(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	KAS_SetFormation(TeamName, "Broad")    --kasfFormationBroad()
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	SobGroup_FollowPath(TeamName, "Frigate1Path", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("Frigate1Path"))
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	SobGroup_FollowPath(TeamName, "Frigate2Path", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("Frigate2Path"))
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	SobGroup_FollowPath(TeamName, "Frigate3Path", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("Frigate3Path"))
	end 
	
end 


--
--  "watch" code for Mission05 Frigates Patrol state
--
function Watch_Mission05_Frigates_Patrol(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (G_ACT3HasBegun == 1) then 
	
	--kasJump("ACT3AttackMothership")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3AttackMothership", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	return
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KASTimer_IsExpiredIfSoDestroy(RightBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(BottomBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackBottomBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackBottomBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackBottomBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TopBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	if (KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig1LeftBoxFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"), 1000)
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	elseif (KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig1CentreBoxFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"), 1000)
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	elseif ((KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig1RightBoxFOUND") ~= 0) and (KASTimer_GetRemaining(RightBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig1RightBoxFOUND"), 1000)
	
	KASTimer_Start(RightBoxDelayTIMER[TeamName], 90)
	elseif ((KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig1BottomBoxFOUND") ~= 0) and (KASTimer_GetRemaining(BottomBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"), 1000)
	
	KASTimer_Start(BottomBoxDelayTIMER[TeamName], 120)
	elseif ((KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig1TopBoxFOUND") ~= 0) and (KASTimer_GetRemaining(TopBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig1TopBoxFOUND"), 1000)
	
	KASTimer_Start(TopBoxDelayTIMER[TeamName], 120)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KASTimer_IsExpiredIfSoDestroy(LeftBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(BottomBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackBottomBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackBottomBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackBottomBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TopBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	if (KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig2RightBoxFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig2RightBoxFOUND"), 1000)
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	elseif (KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig2CentreBoxFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"), 1000)
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	elseif ((KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig2LeftBoxFOUND") ~= 0) and (KASTimer_GetRemaining(LeftBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"), 1000)
	
	KASTimer_Start(LeftBoxDelayTIMER[TeamName], 90)
	elseif ((KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig2BottomBoxFOUND") ~= 0) and (KASTimer_GetRemaining(BottomBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"), 1000)
	
	KASTimer_Start(BottomBoxDelayTIMER[TeamName], 120)
	elseif ((KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig2TopBoxFOUND") ~= 0) and (KASTimer_GetRemaining(TopBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig2TopBoxFOUND"), 1000)
	
	KASTimer_Start(TopBoxDelayTIMER[TeamName], 120)
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KASTimer_IsExpiredIfSoDestroy(RightBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(LeftBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(CentreBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TopBoxDelayTIMER[TeamName]) ~= 0) then 
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	if (KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig3BottomBoxFOUND") ~= 0) then     --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"), 1000)
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	elseif ((KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig3RightBoxFOUND") ~= 0) and (KASTimer_GetRemaining(RightBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig3RightBoxFOUND"), 1000)
	
	KASTimer_Start(RightBoxDelayTIMER[TeamName], 90)
	elseif ((KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig3LeftBoxFOUND") ~= 0) and (KASTimer_GetRemaining(LeftBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"), 1000)
	
	KASTimer_Start(LeftBoxDelayTIMER[TeamName], 90)
	elseif ((KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig3CentreBoxFOUND") ~= 0) and (KASTimer_GetRemaining(CentreBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"), 1000)
	
	KASTimer_Start(CentreBoxDelayTIMER[TeamName], 90)
	elseif ((KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig3TopBoxFOUND") ~= 0) and (KASTimer_GetRemaining(TopBoxDelayTIMER[TeamName]) == 0)) then     --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig3TopBoxFOUND"), 1000)
	
	KASTimer_Start(TopBoxDelayTIMER[TeamName], 120)
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_Frig1UnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("Frig1UnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_Frig1UnderAttack", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("Frig1UnderAttack"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_Frig1UnderAttack", "GrowSelection_Frig1UnderAttack", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("Frig1UnderAttack"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_Frig1UnderAttack") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1UnderAttack"))
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_Frig2UnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("Frig2UnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_Frig2UnderAttack", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("Frig2UnderAttack"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_Frig2UnderAttack", "GrowSelection_Frig2UnderAttack", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("Frig2UnderAttack"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_Frig2UnderAttack") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2UnderAttack"))
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_Frig3UnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("Frig3UnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_Frig3UnderAttack", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("Frig3UnderAttack"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_Frig3UnderAttack", "GrowSelection_Frig3UnderAttack", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("Frig3UnderAttack"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_Frig3UnderAttack") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3UnderAttack"))
	
	KASTimer_End(RightBoxDelayTIMER[TeamName])
	KASTimer_End(LeftBoxDelayTIMER[TeamName])
	KASTimer_End(CentreBoxDelayTIMER[TeamName])
	KASTimer_End(BottomBoxDelayTIMER[TeamName])
	KASTimer_End(TopBoxDelayTIMER[TeamName])
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_Patrol")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates DefendYourself state
--
function Init_Mission05_Frigates_DefendYourself(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1UnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1UnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1UnderAttack", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1UnderAttack"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1UnderAttack", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1UnderAttack"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1UnderAttack", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1UnderAttack"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1NearbyTargets", "GrowSelection_Frig1UnderAttack")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1NearbyTargets"), kasGrowSelectionPtr("Frig1UnderAttack"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1NearbyTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1NearbyTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1NearbyTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1NearbyTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2UnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2UnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2UnderAttack", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2UnderAttack"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2UnderAttack", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2UnderAttack"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2UnderAttack", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2UnderAttack"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2NearbyTargets", "GrowSelection_Frig2UnderAttack")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2NearbyTargets"), kasGrowSelectionPtr("Frig2UnderAttack"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2NearbyTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2NearbyTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2NearbyTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2NearbyTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3UnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3UnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3UnderAttack", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3UnderAttack"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3UnderAttack", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3UnderAttack"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3UnderAttack", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3UnderAttack"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3NearbyTargets", "GrowSelection_Frig3UnderAttack")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3NearbyTargets"), kasGrowSelectionPtr("Frig3UnderAttack"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3NearbyTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3NearbyTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3NearbyTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3NearbyTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates DefendYourself state
--
function Watch_Mission05_Frigates_DefendYourself(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1NearbyTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1NearbyTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2NearbyTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2NearbyTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3NearbyTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3NearbyTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_DefendYourself")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AttackLeftBox state
--
function Init_Mission05_Frigates_AttackLeftBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig1LeftBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1LeftBoxTargets", "GrowSelection_Frig1LeftBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1LeftBoxTargets"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1LeftBoxTargets", "GrowSelection_Frig1LeftBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1LeftBoxTargets"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1LeftBoxTargets", "GrowSelection_Frig1LeftBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1LeftBoxTargets"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1LeftBoxTargets", "GrowSelection_Frig1LeftBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1LeftBoxTargets"), kasGrowSelectionPtr("Frig1LeftBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1LeftBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1LeftBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1LeftBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1LeftBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig2LeftBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2LeftBoxTargets", "GrowSelection_Frig2LeftBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2LeftBoxTargets"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2LeftBoxTargets", "GrowSelection_Frig2LeftBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2LeftBoxTargets"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2LeftBoxTargets", "GrowSelection_Frig2LeftBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2LeftBoxTargets"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2LeftBoxTargets", "GrowSelection_Frig2LeftBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2LeftBoxTargets"), kasGrowSelectionPtr("Frig2LeftBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2LeftBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2LeftBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2LeftBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2LeftBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	KAS_FindEnemiesInside("LeftBox", "GrowSelection_Frig3LeftBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("LeftBox"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3LeftBoxTargets", "GrowSelection_Frig3LeftBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3LeftBoxTargets"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3LeftBoxTargets", "GrowSelection_Frig3LeftBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3LeftBoxTargets"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3LeftBoxTargets", "GrowSelection_Frig3LeftBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3LeftBoxTargets"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3LeftBoxTargets", "GrowSelection_Frig3LeftBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3LeftBoxTargets"), kasGrowSelectionPtr("Frig3LeftBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3LeftBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3LeftBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3LeftBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3LeftBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates AttackLeftBox state
--
function Watch_Mission05_Frigates_AttackLeftBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	G_SHIPSLeftBoxTargets = SobGroup_Count("GrowSelection_Frig1LeftBoxTargets") --created,set    --kasfShipsCount(kasGrowSelectionPtr("Frig1LeftBoxTargets"))
	G_Frigates1ShipsORDER = KAS_GetCurrentOrder("Frigates1") --created,set    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1LeftBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1LeftBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2LeftBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2LeftBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3LeftBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3LeftBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("AttackLeftBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackLeftBox", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_AttackLeftBox(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackLeftBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackLeftBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AttackRightBox state
--
function Init_Mission05_Frigates_AttackRightBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig1RightBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig1RightBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1RightBoxTargets", "GrowSelection_Frig1RightBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1RightBoxTargets"), kasGrowSelectionPtr("Frig1RightBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1RightBoxTargets", "GrowSelection_Frig1RightBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1RightBoxTargets"), kasGrowSelectionPtr("Frig1RightBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1RightBoxTargets", "GrowSelection_Frig1RightBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1RightBoxTargets"), kasGrowSelectionPtr("Frig1RightBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1RightBoxTargets", "GrowSelection_Frig1RightBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1RightBoxTargets"), kasGrowSelectionPtr("Frig1RightBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1RightBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1RightBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1RightBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1RightBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig2RightBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig2RightBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2RightBoxTargets", "GrowSelection_Frig2RightBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2RightBoxTargets"), kasGrowSelectionPtr("Frig2RightBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2RightBoxTargets", "GrowSelection_Frig2RightBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2RightBoxTargets"), kasGrowSelectionPtr("Frig2RightBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2RightBoxTargets", "GrowSelection_Frig2RightBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2RightBoxTargets"), kasGrowSelectionPtr("Frig2RightBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2RightBoxTargets", "GrowSelection_Frig2RightBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2RightBoxTargets"), kasGrowSelectionPtr("Frig2RightBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2RightBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2RightBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2RightBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2RightBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	KAS_FindEnemiesInside("RightBox", "GrowSelection_Frig3RightBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("RightBox"), kasGrowSelectionPtr("Frig3RightBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3RightBoxTargets", "GrowSelection_Frig3RightBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3RightBoxTargets"), kasGrowSelectionPtr("Frig3RightBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3RightBoxTargets", "GrowSelection_Frig3RightBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3RightBoxTargets"), kasGrowSelectionPtr("Frig3RightBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3RightBoxTargets", "GrowSelection_Frig3RightBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3RightBoxTargets"), kasGrowSelectionPtr("Frig3RightBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3RightBoxTargets", "GrowSelection_Frig3RightBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3RightBoxTargets"), kasGrowSelectionPtr("Frig3RightBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3RightBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3RightBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3RightBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3RightBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates AttackRightBox state
--
function Watch_Mission05_Frigates_AttackRightBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1RightBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1RightBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2RightBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2RightBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3RightBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3RightBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("AttackRightBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackRightBox", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_AttackRightBox(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackRightBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackRightBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AttackCentreBox state
--
function Init_Mission05_Frigates_AttackCentreBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig1CentreBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1CentreBoxTargets", "GrowSelection_Frig1CentreBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1CentreBoxTargets"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1CentreBoxTargets", "GrowSelection_Frig1CentreBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1CentreBoxTargets"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1CentreBoxTargets", "GrowSelection_Frig1CentreBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1CentreBoxTargets"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1CentreBoxTargets", "GrowSelection_Frig1CentreBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1CentreBoxTargets"), kasGrowSelectionPtr("Frig1CentreBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1CentreBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1CentreBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1CentreBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1CentreBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig2CentreBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2CentreBoxTargets", "GrowSelection_Frig2CentreBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2CentreBoxTargets"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2CentreBoxTargets", "GrowSelection_Frig2CentreBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2CentreBoxTargets"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2CentreBoxTargets", "GrowSelection_Frig2CentreBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2CentreBoxTargets"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2CentreBoxTargets", "GrowSelection_Frig2CentreBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2CentreBoxTargets"), kasGrowSelectionPtr("Frig2CentreBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2CentreBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2CentreBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2CentreBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2CentreBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	KAS_FindEnemiesInside("CentreBox", "GrowSelection_Frig3CentreBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("CentreBox"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3CentreBoxTargets", "GrowSelection_Frig3CentreBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3CentreBoxTargets"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3CentreBoxTargets", "GrowSelection_Frig3CentreBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3CentreBoxTargets"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3CentreBoxTargets", "GrowSelection_Frig3CentreBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3CentreBoxTargets"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3CentreBoxTargets", "GrowSelection_Frig3CentreBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3CentreBoxTargets"), kasGrowSelectionPtr("Frig3CentreBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3CentreBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3CentreBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3CentreBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3CentreBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates AttackCentreBox state
--
function Watch_Mission05_Frigates_AttackCentreBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1CentreBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1CentreBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2CentreBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") == 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2CentreBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3CentreBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3CentreBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("AttackCentreBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackCentreBox", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_AttackCentreBox(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackCentreBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackCentreBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AttackBottomBox state
--
function Init_Mission05_Frigates_AttackBottomBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig1BottomBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1BottomBoxTargets", "GrowSelection_Frig1BottomBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1BottomBoxTargets"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1BottomBoxTargets", "GrowSelection_Frig1BottomBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1BottomBoxTargets"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1BottomBoxTargets", "GrowSelection_Frig1BottomBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1BottomBoxTargets"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1BottomBoxTargets", "GrowSelection_Frig1BottomBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1BottomBoxTargets"), kasGrowSelectionPtr("Frig1BottomBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1BottomBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1BottomBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1BottomBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1BottomBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig2BottomBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2BottomBoxTargets", "GrowSelection_Frig2BottomBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2BottomBoxTargets"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2BottomBoxTargets", "GrowSelection_Frig2BottomBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2BottomBoxTargets"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2BottomBoxTargets", "GrowSelection_Frig2BottomBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2BottomBoxTargets"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2BottomBoxTargets", "GrowSelection_Frig2BottomBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2BottomBoxTargets"), kasGrowSelectionPtr("Frig2BottomBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2BottomBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2BottomBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2BottomBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2BottomBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	KAS_FindEnemiesInside("BottomBox", "GrowSelection_Frig3BottomBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("BottomBox"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3BottomBoxTargets", "GrowSelection_Frig3BottomBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3BottomBoxTargets"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3BottomBoxTargets", "GrowSelection_Frig3BottomBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3BottomBoxTargets"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3BottomBoxTargets", "GrowSelection_Frig3BottomBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3BottomBoxTargets"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3BottomBoxTargets", "GrowSelection_Frig3BottomBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3BottomBoxTargets"), kasGrowSelectionPtr("Frig3BottomBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3BottomBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3BottomBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3BottomBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3BottomBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates AttackBottomBox state
--
function Watch_Mission05_Frigates_AttackBottomBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1BottomBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1BottomBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("AttackBottomBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackBottomBox", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_AttackBottomBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2BottomBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2BottomBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("AttackBottomBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackBottomBox", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_AttackBottomBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3BottomBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3BottomBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("AttackBottomBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackBottomBox", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_AttackBottomBox(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackBottomBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackBottomBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates AttackTopBox state
--
function Init_Mission05_Frigates_AttackTopBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig1TopBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig1TopBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1TopBoxTargets", "GrowSelection_Frig1TopBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1TopBoxTargets"), kasGrowSelectionPtr("Frig1TopBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1TopBoxTargets", "GrowSelection_Frig1TopBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1TopBoxTargets"), kasGrowSelectionPtr("Frig1TopBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1TopBoxTargets", "GrowSelection_Frig1TopBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1TopBoxTargets"), kasGrowSelectionPtr("Frig1TopBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1TopBoxTargets", "GrowSelection_Frig1TopBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1TopBoxTargets"), kasGrowSelectionPtr("Frig1TopBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1TopBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1TopBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1TopBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig1TopBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig2TopBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig2TopBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2TopBoxTargets", "GrowSelection_Frig2TopBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2TopBoxTargets"), kasGrowSelectionPtr("Frig2TopBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2TopBoxTargets", "GrowSelection_Frig2TopBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2TopBoxTargets"), kasGrowSelectionPtr("Frig2TopBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2TopBoxTargets", "GrowSelection_Frig2TopBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2TopBoxTargets"), kasGrowSelectionPtr("Frig2TopBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2TopBoxTargets", "GrowSelection_Frig2TopBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2TopBoxTargets"), kasGrowSelectionPtr("Frig2TopBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2TopBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2TopBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2TopBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig2TopBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	KAS_FindEnemiesInside("TopBox", "GrowSelection_Frig3TopBoxFOUND")    --kasfFindEnemiesInside(kasVolumePtr("TopBox"), kasGrowSelectionPtr("Frig3TopBoxFOUND"), 1000)
	if (KAS_FillShipsByType_Normal("GrowSelection_FrigNearbyTargets", "GrowSelection_FrigUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("FrigNearbyTargets"), kasGrowSelectionPtr("FrigUnderAttack"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3TopBoxTargets", "GrowSelection_Frig3TopBoxFOUND", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3TopBoxTargets"), kasGrowSelectionPtr("Frig3TopBoxFOUND"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3TopBoxTargets", "GrowSelection_Frig3TopBoxFOUND", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3TopBoxTargets"), kasGrowSelectionPtr("Frig3TopBoxFOUND"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3TopBoxTargets", "GrowSelection_Frig3TopBoxFOUND", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3TopBoxTargets"), kasGrowSelectionPtr("Frig3TopBoxFOUND"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3TopBoxTargets", "GrowSelection_Frig3TopBoxFOUND")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3TopBoxTargets"), kasGrowSelectionPtr("Frig3TopBoxFOUND"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3TopBoxTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3TopBoxTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3TopBoxTargets")    --kasfAttack(kasGrowSelectionPtr("Frig3TopBoxTargets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_Patrol", "Init_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates AttackTopBox state
--
function Watch_Mission05_Frigates_AttackTopBox(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1TopBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1TopBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2TopBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2TopBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3TopBoxTargets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3TopBoxTargets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("AttackTopBox")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_AttackTopBox", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_AttackTopBox(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_AttackTopBox")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_DefendYourself", "Watch_Mission05_Frigates_AttackTopBox")
	Init_Mission05_Frigates_DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates ACT3AttackMothership state
--
function Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_ACT3FrigFound")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("ACT3FrigFound"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_ACT3FrigFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("ACT3FrigFound"), "CLASS_Mothership")
	KAS_MoveAttack(TeamName, "GrowSelection_Mothership")    --kasfMoveAttack(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 Frigates ACT3AttackMothership state
--
function Watch_Mission05_Frigates_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingFrig1") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingFrig1"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingFrig1", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingFrig1"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingFrig1", "GrowSelection_AttackingFrig1", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingFrig1"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingFrig1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingFrig1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingFrig2") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingFrig2"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingFrig2", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingFrig2"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingFrig2", "GrowSelection_AttackingFrig2", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingFrig2"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingFrig2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingFrig2"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingFrig3") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingFrig3"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingFrig3", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingFrig3"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingFrig3", "GrowSelection_AttackingFrig3", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingFrig3"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingFrig3") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingFrig3"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3AttackMothership")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates ACT3DefendYourself state
--
function Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig1Targets", "GrowSelection_Frig1FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig1Targets"), kasGrowSelectionPtr("Frig1FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1Targets", "GrowSelection_AttackingFrig1", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1Targets"), kasGrowSelectionPtr("AttackingFrig1"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1Targets", "GrowSelection_AttackingFrig1", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1Targets"), kasGrowSelectionPtr("AttackingFrig1"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig1Targets", "GrowSelection_AttackingFrig1", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig1Targets"), kasGrowSelectionPtr("AttackingFrig1"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig1Targets", "GrowSelection_AttackingFrig1")    --kasfShipsAdd(kasGrowSelectionPtr("Frig1Targets"), kasGrowSelectionPtr("AttackingFrig1"))
	end 
	if (SobGroup_Count("GrowSelection_Frig1Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig1Targets")    --kasfAttack(kasGrowSelectionPtr("Frig1Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3AttackMothership", "Init_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig2Targets", "GrowSelection_Frig2FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig2Targets"), kasGrowSelectionPtr("Frig2FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2Targets", "GrowSelection_AttackingFrig2", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2Targets"), kasGrowSelectionPtr("AttackingFrig2"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2Targets", "GrowSelection_AttackingFrig2", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2Targets"), kasGrowSelectionPtr("AttackingFrig2"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig2Targets", "GrowSelection_AttackingFrig2", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig2Targets"), kasGrowSelectionPtr("AttackingFrig2"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig2Targets", "GrowSelection_AttackingFrig2")    --kasfShipsAdd(kasGrowSelectionPtr("Frig2Targets"), kasGrowSelectionPtr("AttackingFrig2"))
	end 
	if (SobGroup_Count("GrowSelection_Frig2Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig2Targets")    --kasfAttack(kasGrowSelectionPtr("Frig2Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3AttackMothership", "Init_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Frig3Targets", "GrowSelection_Frig3FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Frig3Targets"), kasGrowSelectionPtr("Frig3FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3Targets", "GrowSelection_AttackingFrig3", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3Targets"), kasGrowSelectionPtr("AttackingFrig3"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3Targets", "GrowSelection_AttackingFrig3", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3Targets"), kasGrowSelectionPtr("AttackingFrig3"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Frig3Targets", "GrowSelection_AttackingFrig3", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Frig3Targets"), kasGrowSelectionPtr("AttackingFrig3"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Frig3Targets", "GrowSelection_AttackingFrig3")    --kasfShipsAdd(kasGrowSelectionPtr("Frig3Targets"), kasGrowSelectionPtr("AttackingFrig3"))
	end 
	if (SobGroup_Count("GrowSelection_Frig3Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Frig3Targets")    --kasfAttack(kasGrowSelectionPtr("Frig3Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3AttackMothership", "Init_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3AttackMothership(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Frigates ACT3DefendYourself state
--
function Watch_Mission05_Frigates_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if ((SobGroup_Count("GrowSelection_Frig1Targets") == 0) or (KAS_GetCurrentOrder("Frigates1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if ((SobGroup_Count("GrowSelection_Frig2Targets") == 0) or (KAS_GetCurrentOrder("Frigates2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates2"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates3"))
	
	if ((SobGroup_Count("GrowSelection_Frig3Targets") == 0) or (KAS_GetCurrentOrder("Frigates3") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Frigates3"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Frigates1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig1FoundSomeSCs", "GrowSelection_Frig1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig1FoundSomeSCs"), kasGrowSelectionPtr("Frig1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig1FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig2FoundSomeSCs", "GrowSelection_Frig2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig2FoundSomeSCs"), kasGrowSelectionPtr("Frig2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig2FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Frigates2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Frigates2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Frig3L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Frig3L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Frig3FoundSomeSCs", "GrowSelection_Frig3L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Frig3FoundSomeSCs"), kasGrowSelectionPtr("Frig3L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Frig3FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Frig3FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Frigates", "Watch_Mission05_Frigates_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Frigates_ACT3DefendYourself", "Watch_Mission05_Frigates_ACT3DefendYourself")
	Init_Mission05_Frigates_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Frigates NullState state
--
function Init_Mission05_Frigates_NullState(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	
end 


--
--  "watch" code for Mission05 Frigates NullState state
--
function Watch_Mission05_Frigates_NullState(TeamName)
	--FSM: FSM_Mission05_Frigates
	--TeamName = "Frigates1"
	
end 


--
--  "initialize" code for Mission05 Destroyers FSM
--
function Init_Mission05_Destroyers(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	SobGroup_SetROE(TeamName, DefensiveROE)    --kasfTacticsEvasive()
		SobGroup_SetStance(TeamName, AggressiveStance)
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	SHIPSOriginal[TeamName] = (SobGroup_Count(TeamName)) --created,set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	SHIPSRequested[TeamName] = 0 --created,set
	SHIPSNeeded[TeamName] = 0 --created,set
	SHIPSNewships[TeamName] = 0 --created,set
	SHIPSKilled[TeamName] = 0 --created,set
	G_TOTALOriginalDestroyers = G_TOTALOriginalDestroyers + SobGroup_Count(TeamName) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	G_NumDestroyerTeams = G_NumDestroyerTeams + 1
	ThisDestroyerNum[TeamName] = G_NumDestroyerTeams --created,set
	--kasJump("WaitingToPatrol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_WaitingToPatrol", "Init_Mission05_Destroyers")
	Init_Mission05_Destroyers_WaitingToPatrol(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Destroyers FSM
--
function Watch_Mission05_Destroyers(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if ((SobGroup_Count(TeamName) + SHIPSRequested[TeamName]) < SHIPSOriginal[TeamName]) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	SHIPSNeeded[TeamName] = (SHIPSOriginal[TeamName] - (SobGroup_Count(TeamName) + SHIPSRequested[TeamName])) --set    --kasfShipsCount((&kasThisTeamPtr->shipList))
	SHIPSKilled[TeamName] = SHIPSKilled[TeamName] + SHIPSNeeded[TeamName] --set
	SHIPSRequested[TeamName] = SHIPSRequested[TeamName] + SHIPSNeeded[TeamName] --set
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_DestroyersUnderAttack") ~= 0 and (G_DestroyersUnderAttack == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("DestroyersUnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_DestroyersVsFrigates", "GrowSelection_DestroyersUnderAttack", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("DestroyersVsFrigates"), kasGrowSelectionPtr("DestroyersUnderAttack"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_DestroyersVsFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DestroyersVsFrigates"))
	
	G_DestroyersUnderAttack = ThisDestroyerNum[TeamName] --set
	end 
	elseif ((KAS_UnderAttack(TeamName, "GrowSelection_Null022092") == 0) and (G_DestroyersUnderAttack == ThisDestroyerNum[TeamName])) then     --kasfUnderAttack(kasGrowSelectionPtr("Null022092"))
	
	G_DestroyersUnderAttack = 0 --set
	end 
	if (_VIFONCE019[TeamName] == 0 and (G_ACT3HasBegun == 1)) then  -- "ifonce" #19
	
	_VIFONCE019[TeamName] = 1 --created,set;
	--kasJump("ACT3AttackMothership")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3AttackMothership", "Watch_Mission05_Destroyers")
	Init_Mission05_Destroyers_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers AllDeadWaitForShips state
--
function Init_Mission05_Destroyers_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	WaitingForShips[TeamName] = 1 --created,set
	
end 


--
--  "watch" code for Mission05 Destroyers AllDeadWaitForShips state
--
function Watch_Mission05_Destroyers_AllDeadWaitForShips(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (SobGroup_Count(TeamName) > 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	WaitingForShips[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_AllDeadWaitForShips")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_Patrol", "Watch_Mission05_Destroyers_AllDeadWaitForShips")
	Init_Mission05_Destroyers_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers WaitingToPatrol state
--
function Init_Mission05_Destroyers_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	
end 


--
--  "watch" code for Mission05 Destroyers WaitingToPatrol state
--
function Watch_Mission05_Destroyers_WaitingToPatrol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_WaitingToPatrol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_Patrol", "Watch_Mission05_Destroyers_WaitingToPatrol")
	Init_Mission05_Destroyers_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers Patrol state
--
function Init_Mission05_Destroyers_Patrol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	SobGroup_FollowPath(TeamName, "Destroyer1Path", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("Destroyer1Path"))
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	SobGroup_FollowPath(TeamName, "Destroyer2Path", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("Destroyer2Path"))
	end 
	
end 


--
--  "watch" code for Mission05 Destroyers Patrol state
--
function Watch_Mission05_Destroyers_Patrol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (SobGroup_Count("GrowSelection_CarrierVolTOTAL") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierVolTOTAL"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_AttackCarrierVol", "Watch_Mission05_Destroyers_Patrol")
	Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers AttackCarrierVol state
--
function Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Destroyer1Targets", "GrowSelection_CarrierVolTOTAL", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Destroyer1Targets", "GrowSelection_Des1FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("Des1FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer1Targets", "GrowSelection_CarrierVolTOTAL", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer1Targets", "GrowSelection_CarrierVolTOTAL", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer1Targets", "GrowSelection_CarrierVolTOTAL", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Destroyer1Targets", "GrowSelection_CarrierVolTOTAL")    --kasfShipsAdd(kasGrowSelectionPtr("Destroyer1Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"))
	end 
	if (SobGroup_Count("GrowSelection_Destroyer1Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Destroyer1Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Destroyer1Targets")    --kasfAttack(kasGrowSelectionPtr("Destroyer1Targets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_Patrol", "Init_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_Patrol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Destroyer2Targets", "GrowSelection_CarrierVolTOTAL", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Destroyer2Targets", "GrowSelection_Des2FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("Des2FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer2Targets", "GrowSelection_CarrierVolTOTAL", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer2Targets", "GrowSelection_CarrierVolTOTAL", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Destroyer2Targets", "GrowSelection_CarrierVolTOTAL", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Destroyer2Targets", "GrowSelection_CarrierVolTOTAL")    --kasfShipsAdd(kasGrowSelectionPtr("Destroyer2Targets"), kasGrowSelectionPtr("CarrierVolTOTAL"))
	end 
	if (SobGroup_Count("GrowSelection_Destroyer2Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Destroyer2Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Destroyer2Targets")    --kasfAttack(kasGrowSelectionPtr("Destroyer2Targets"))
	else
	
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_Patrol", "Init_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_Patrol(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Destroyers AttackCarrierVol state
--
function Watch_Mission05_Destroyers_AttackCarrierVol(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if ((SobGroup_Count("GrowSelection_Destroyer1Targets") == 0) or (KAS_GetCurrentOrder("Destroyers1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Destroyer1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Destroyers1"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_AttackCarrierVol", "Watch_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if ((SobGroup_Count("GrowSelection_Destroyer1Targets") == 0) or (KAS_GetCurrentOrder("Destroyers2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Destroyer1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Destroyers2"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_AttackCarrierVol", "Watch_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des1FoundSomeSCs", "GrowSelection_Des1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des1FoundSomeSCs"), kasGrowSelectionPtr("Des1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des1FoundSomeSCs"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_AttackCarrierVol", "Watch_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des2FoundSomeSCs", "GrowSelection_Des2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des2FoundSomeSCs"), kasGrowSelectionPtr("Des2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des2FoundSomeSCs"))
	
	--kasJump("AttackCarrierVol")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_AttackCarrierVol")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_AttackCarrierVol", "Watch_Mission05_Destroyers_AttackCarrierVol")
	Init_Mission05_Destroyers_AttackCarrierVol(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers ACT3AttackMothership state
--
function Init_Mission05_Destroyers_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_ACT3DesFound")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("ACT3DesFound"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_ACT3DesFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("ACT3DesFound"), "CLASS_Mothership")
	KAS_MoveAttack(TeamName, "GrowSelection_Mothership")    --kasfMoveAttack(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 Destroyers ACT3AttackMothership state
--
function Watch_Mission05_Destroyers_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingDes1") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingDes1"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingDes1", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingDes1"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingDes1", "GrowSelection_AttackingDes1", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingDes1"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingDes1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingDes1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingDes2") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingDes2"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingDes2", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingDes2"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingDes2", "GrowSelection_AttackingDes2", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingDes2"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingDes2") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingDes2"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des1FoundSomeSCs", "GrowSelection_Des1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des1FoundSomeSCs"), kasGrowSelectionPtr("Des1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des1FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des2FoundSomeSCs", "GrowSelection_Des2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des2FoundSomeSCs"), kasGrowSelectionPtr("Des2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des2FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3AttackMothership")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers ACT3DefendYourself state
--
function Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Des1Targets", "GrowSelection_AttackingDes1", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("AttackingDes1"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Des1Targets", "GrowSelection_Des1FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("Des1FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des1Targets", "GrowSelection_AttackingDes1", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("AttackingDes1"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des1Targets", "GrowSelection_AttackingDes1", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("AttackingDes1"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des1Targets", "GrowSelection_AttackingDes1", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("AttackingDes1"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Des1Targets", "GrowSelection_AttackingDes1")    --kasfShipsAdd(kasGrowSelectionPtr("Des1Targets"), kasGrowSelectionPtr("AttackingDes1"))
	end 
	if (SobGroup_Count("GrowSelection_Des1Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des1Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Des1Targets")    --kasfAttack(kasGrowSelectionPtr("Des1Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3AttackMothership", "Init_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3AttackMothership(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_FillShipsByType_Normal("GrowSelection_Des2Targets", "GrowSelection_AttackingDes2", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("AttackingDes2"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Des2Targets", "GrowSelection_Des2FoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("Des2FoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des2Targets", "GrowSelection_AttackingDes2", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("AttackingDes2"), "CLASS_Frigate")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des2Targets", "GrowSelection_AttackingDes2", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("AttackingDes2"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Des2Targets", "GrowSelection_AttackingDes2", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("AttackingDes2"), "CLASS_Fighter")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Des2Targets", "GrowSelection_AttackingDes2")    --kasfShipsAdd(kasGrowSelectionPtr("Des2Targets"), kasGrowSelectionPtr("AttackingDes2"))
	end 
	if (SobGroup_Count("GrowSelection_Des2Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des2Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Des2Targets")    --kasfAttack(kasGrowSelectionPtr("Des2Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3AttackMothership", "Init_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3AttackMothership(TeamName)
	return
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Destroyers ACT3DefendYourself state
--
function Watch_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if ((SobGroup_Count("GrowSelection_Des1Targets") == 0) or (KAS_GetCurrentOrder("Destroyers1") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Des1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Destroyers1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if ((SobGroup_Count("GrowSelection_Des2Targets") == 0) or (KAS_GetCurrentOrder("Destroyers2") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Des2Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Destroyers2"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	if (KAS_TeamNamesEqual(TeamName, "Destroyers1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers1"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des1L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des1L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des1FoundSomeSCs", "GrowSelection_Des1L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des1FoundSomeSCs"), kasGrowSelectionPtr("Des1L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des1FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des1FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Destroyers2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Destroyers2"))
	
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_Des2L00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("Des2L00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_Des2FoundSomeSCs", "GrowSelection_Des2L00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("Des2FoundSomeSCs"), kasGrowSelectionPtr("Des2L00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_Des2FoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Des2FoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Destroyers", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Destroyers_ACT3DefendYourself", "Watch_Mission05_Destroyers_ACT3DefendYourself")
	Init_Mission05_Destroyers_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Destroyers NullState state
--
function Init_Mission05_Destroyers_NullState(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	
end 


--
--  "watch" code for Mission05 Destroyers NullState state
--
function Watch_Mission05_Destroyers_NullState(TeamName)
	--FSM: FSM_Mission05_Destroyers
	--TeamName = "Destroyers1"
	
end 


--
--  "initialize" code for Mission05 SupportFrigate FSM
--
function Init_Mission05_SupportFrigate(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_Wait", "Init_Mission05_SupportFrigate")
	Init_Mission05_SupportFrigate_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 SupportFrigate FSM
--
function Watch_Mission05_SupportFrigate(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	if (_VIFONCE020[TeamName] == 0 and (SobGroup_Count("SupportFrigate") == 0)) then  -- "ifonce" #20    --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	_VIFONCE020[TeamName] = 1 --created,set;
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_NullState", "Watch_Mission05_SupportFrigate")
	Init_Mission05_SupportFrigate_NullState(TeamName)
	return
	end 
	if (KAS_UnderAttack(TeamName, "GrowSelection_SupportFrigateUnderAttack") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("SupportFrigateUnderAttack"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_SupportFrigateVsFrigates", "GrowSelection_SupportFrigateUnderAttack", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("SupportFrigateVsFrigates"), kasGrowSelectionPtr("SupportFrigateUnderAttack"), "CLASS_Frigate")
	if (SobGroup_Count("GrowSelection_SupportFrigateVsFrigates") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("SupportFrigateVsFrigates"))
	
	G_SupportFrigateUnderAttack = 1 --created,set
	end 
	else
	
	G_SupportFrigateUnderAttack = 0 --set
	end 
	if (_VIFONCE021[TeamName] == 0 and ((G_ACT3HasBegun == 1) and (SobGroup_Count("Carrier") == 0))) then  -- "ifonce" #21    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	_VIFONCE021[TeamName] = 1 --created,set;
	--kasJump("ACT3AttackMothership")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3AttackMothership", "Watch_Mission05_SupportFrigate")
	Init_Mission05_SupportFrigate_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 SupportFrigate Wait state
--
function Init_Mission05_SupportFrigate_Wait(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	
end 


--
--  "watch" code for Mission05 SupportFrigate Wait state
--
function Watch_Mission05_SupportFrigate_Wait(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	SobGroup_SetHealth(TeamName, 60 / 100)    --kasfTeamSetPercentDamaged(60)
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("GuardCarrier")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate_Wait")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_GuardCarrier", "Watch_Mission05_SupportFrigate_Wait")
	Init_Mission05_SupportFrigate_GuardCarrier(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 SupportFrigate GuardCarrier state
--
function Init_Mission05_SupportFrigate_GuardCarrier(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	
end 


--
--  "watch" code for Mission05 SupportFrigate GuardCarrier state
--
function Watch_Mission05_SupportFrigate_GuardCarrier(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	
end 


--
--  "initialize" code for Mission05 SupportFrigate ACT3AttackMothership state
--
function Init_Mission05_SupportFrigate_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_ACT3SupFound")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("ACT3SupFound"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_ACT3SupFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("ACT3SupFound"), "CLASS_Mothership")
	KAS_MoveAttack(TeamName, "GrowSelection_Mothership")    --kasfMoveAttack(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 SupportFrigate ACT3AttackMothership state
--
function Watch_Mission05_SupportFrigate_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingSup1") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingSup1"))
	
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_AttackingSup1", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("AttackingSup1"), "CLASS_Mothership")
	SobGroup_FillSubtract("GrowSelection_AttackingSup1", "GrowSelection_AttackingSup1", "GrowSelection_Mothership")    --kasfShipsRemove(kasGrowSelectionPtr("AttackingSup1"), kasGrowSelectionPtr("Mothership"))
	if (SobGroup_Count("GrowSelection_AttackingSup1") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingSup1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3DefendYourself", "Watch_Mission05_SupportFrigate_ACT3AttackMothership")
	Init_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SupportL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SupportL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_SupportFoundSomeSCs", "GrowSelection_SupportL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("SupportFoundSomeSCs"), kasGrowSelectionPtr("SupportL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_SupportFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("SupportFoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3DefendYourself", "Watch_Mission05_SupportFrigate_ACT3AttackMothership")
	Init_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 SupportFrigate ACT3DefendYourself state
--
function Init_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	if (KAS_FillShipsByType_Normal("GrowSelection_Sup1Targets", "GrowSelection_SupportFoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("SupportFoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Sup1Targets", "GrowSelection_AttackingSup1", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("AttackingSup1"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Sup1Targets", "GrowSelection_AttackingSup1", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("AttackingSup1"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Sup1Targets", "GrowSelection_AttackingSup1", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("AttackingSup1"), "CLASS_Fighter")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Sup1Targets", "GrowSelection_AttackingSup1", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("AttackingSup1"), "CLASS_Frigate")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Sup1Targets", "GrowSelection_AttackingSup1")    --kasfShipsAdd(kasGrowSelectionPtr("Sup1Targets"), kasGrowSelectionPtr("AttackingSup1"))
	end 
	if (SobGroup_Count("GrowSelection_Sup1Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Sup1Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Sup1Targets")    --kasfAttack(kasGrowSelectionPtr("Sup1Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3AttackMothership", "Init_Mission05_SupportFrigate_ACT3DefendYourself")
	Init_Mission05_SupportFrigate_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 SupportFrigate ACT3DefendYourself state
--
function Watch_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	if ((SobGroup_Count("GrowSelection_Sup1Targets") == 0) or (KAS_GetCurrentOrder("SupportFrigate") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Sup1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("SupportFrigate"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3DefendYourself", "Watch_Mission05_SupportFrigate_ACT3DefendYourself")
	Init_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_SupportL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("SupportL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_SupportFoundSomeSCs", "GrowSelection_SupportL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("SupportFoundSomeSCs"), kasGrowSelectionPtr("SupportL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_SupportFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("SupportFoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_SupportFrigate", "Watch_Mission05_SupportFrigate_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_SupportFrigate_ACT3DefendYourself", "Watch_Mission05_SupportFrigate_ACT3DefendYourself")
	Init_Mission05_SupportFrigate_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 SupportFrigate NullState state
--
function Init_Mission05_SupportFrigate_NullState(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	
end 


--
--  "watch" code for Mission05 SupportFrigate NullState state
--
function Watch_Mission05_SupportFrigate_NullState(TeamName)
	--FSM: FSM_Mission05_SupportFrigate
	--TeamName = SupportFrigate
	
end 


--
--  "initialize" code for Mission05 Carrier FSM
--
function Init_Mission05_Carrier(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	SobGroup_SetHealth(TeamName, 65 / 100)    --kasfTeamSetPercentDamaged(65)
	CarrierIsInUnderAttackState[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_Wait", "Init_Mission05_Carrier")
	Init_Mission05_Carrier_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Carrier FSM
--
function Watch_Mission05_Carrier(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if ((KAS_UnderAttack(TeamName, "GrowSelection_CarrierUnderAttack") ~= 0) and (G_ACT3HasBegun == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("CarrierUnderAttack"))
	
	if ((SobGroup_Count("GrowSelection_CarrierUnderAttack") > 0) and (CarrierIsInUnderAttackState[TeamName] == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierUnderAttack"))
	
	G_CarrierUnderAttack = 1 --set
	--kasJump("UnderAttack")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_UnderAttack", "Watch_Mission05_Carrier")
	Init_Mission05_Carrier_UnderAttack(TeamName)
	return
	end 
	else
	
	G_CarrierUnderAttack = 0 --set
	end 
	if (_VIFONCE022[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 40)) then  -- "ifonce" #22    --kasfTeamHealthAverage()
	
	_VIFONCE022[TeamName] = 1 --created,set;
	G_ACT2HasBegun = 1 --created,set
	end 
	if (_VIFONCE023[TeamName] == 0 and (G_ACT3HasBegun == 1)) then  -- "ifonce" #23
	
	_VIFONCE023[TeamName] = 1 --created,set;
	--kasJump("ACT3AttackMothership")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3AttackMothership", "Watch_Mission05_Carrier")
	Init_Mission05_Carrier_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Carrier Wait state
--
function Init_Mission05_Carrier_Wait(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	CarrierIsInUnderAttackState[TeamName] = 0 --set
	
end 


--
--  "watch" code for Mission05 Carrier Wait state
--
function Watch_Mission05_Carrier_Wait(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	SobGroup_SetHealth(TeamName, 65 / 100)    --kasfTeamSetPercentDamaged(65)
	if (KASObjective_GetState(ObjectiveID_SendProbe) == 1) then     --kasfObjectiveGet("SendProbe")
	
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_Wait")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_Patrol", "Watch_Mission05_Carrier_Wait")
	Init_Mission05_Carrier_Patrol(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Carrier Patrol state
--
function Init_Mission05_Carrier_Patrol(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	CarrierIsInUnderAttackState[TeamName] = 0 --set
	SobGroup_SetROE(TeamName, OffensiveROE)    --kasfTacticsNeutral()
		SobGroup_SetStance(TeamName, AggressiveStance)
	SobGroup_FollowPath(TeamName, "CarrierPath", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("CarrierPath"))
	
end 


--
--  "watch" code for Mission05 Carrier Patrol state
--
function Watch_Mission05_Carrier_Patrol(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_CarrierL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("CarrierL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_CarrierFoundSomeSCs", "GrowSelection_CarrierL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("CarrierFoundSomeSCs"), kasGrowSelectionPtr("CarrierL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_CarrierFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierFoundSomeSCs"))
	
	--kasJump("UnderAttack")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_UnderAttack", "Watch_Mission05_Carrier_Patrol")
	Init_Mission05_Carrier_UnderAttack(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Carrier UnderAttack state
--
function Init_Mission05_Carrier_UnderAttack(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	CarrierIsInUnderAttackState[TeamName] = 1 --set
	if (KAS_FillShipsByType_Normal("GrowSelection_CarrierTargets", "GrowSelection_CarrierFoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierFoundSomeSCs"), "SalCapCorvette")
	
	CarrierAttackingSC[TeamName] = 1 --created,set
	elseif (KAS_FillShipsByType_Normal("GrowSelection_CarrierTargets", "GrowSelection_CarrierUnderAttack", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierUnderAttack"), "SalCapCorvette")
	
	CarrierAttackingSC[TeamName] = 1 --created,set
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_CarrierTargets", "GrowSelection_CarrierUnderAttack", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierUnderAttack"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_CarrierTargets", "GrowSelection_CarrierUnderAttack", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierUnderAttack"), "CLASS_Fighter")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_CarrierTargets", "GrowSelection_CarrierUnderAttack", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierUnderAttack"), "CLASS_Frigate")
	
	else
	
	KAS_ShipsAdd("GrowSelection_CarrierTargets", "GrowSelection_CarrierUnderAttack")    --kasfShipsAdd(kasGrowSelectionPtr("CarrierTargets"), kasGrowSelectionPtr("CarrierUnderAttack"))
	end 
	if (SobGroup_Count("GrowSelection_CarrierTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierTargets"))
	
	KAS_Attack(TeamName, "GrowSelection_CarrierTargets")    --kasfAttack(kasGrowSelectionPtr("CarrierTargets"))
	else
	
	CarrierAttackingSC[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_Patrol", "Init_Mission05_Carrier_UnderAttack")
	Init_Mission05_Carrier_Patrol(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Carrier UnderAttack state
--
function Watch_Mission05_Carrier_UnderAttack(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if ((KAS_UnderAttack(TeamName, "GrowSelection_Null8239823") == 0) and (CarrierAttackingSC[TeamName] == 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("Null8239823"))
	
	CarrierAttackingSC[TeamName] = 0 --destroyed
	--kasJump("Patrol")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_UnderAttack")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_Patrol", "Watch_Mission05_Carrier_UnderAttack")
	Init_Mission05_Carrier_Patrol(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_CarrierL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("CarrierL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_CarrierFoundSomeSCs", "GrowSelection_CarrierL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("CarrierFoundSomeSCs"), kasGrowSelectionPtr("CarrierL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_CarrierFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierFoundSomeSCs"))
	
	--kasJump("UnderAttack")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_UnderAttack")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_UnderAttack", "Watch_Mission05_Carrier_UnderAttack")
	Init_Mission05_Carrier_UnderAttack(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Carrier ACT3AttackMothership state
--
function Init_Mission05_Carrier_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_ACT3CarFound")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("ACT3CarFound"), 1000)
	KAS_FillShipsByClass_Normal("GrowSelection_Mothership", "GrowSelection_ACT3CarFound", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("Mothership"), kasGrowSelectionPtr("ACT3CarFound"), "CLASS_Mothership")
	KAS_MoveAttack(TeamName, "GrowSelection_Mothership")    --kasfMoveAttack(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 Carrier ACT3AttackMothership state
--
function Watch_Mission05_Carrier_ACT3AttackMothership(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if (KAS_UnderAttack(TeamName, "GrowSelection_AttackingCar1") ~= 0) then     --kasfUnderAttack(kasGrowSelectionPtr("AttackingCar1"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3DefendYourself", "Watch_Mission05_Carrier_ACT3AttackMothership")
	Init_Mission05_Carrier_ACT3DefendYourself(TeamName)
	return
	end 
	if (_VIFONCE024[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_Mothership"), 4900) ~= 0)) then  -- "ifonce" #24    --kasfNearby(kasShipsVectorPtr("Mothership"), 14000)
	
	_VIFONCE024[TeamName] = 1 --created,set;
	G_BeginKamikaze = 1 --created,set
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_CarrierL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("CarrierL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_CarrierFoundSomeSCs", "GrowSelection_CarrierL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("CarrierFoundSomeSCs"), kasGrowSelectionPtr("CarrierL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_CarrierFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierFoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3DefendYourself", "Watch_Mission05_Carrier_ACT3AttackMothership")
	Init_Mission05_Carrier_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Carrier ACT3DefendYourself state
--
function Init_Mission05_Carrier_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if (KAS_FillShipsByType_Normal("GrowSelection_Car1Targets", "GrowSelection_AttackingCar1", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("AttackingCar1"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByType_Normal("GrowSelection_Car1Targets", "GrowSelection_CarrierFoundSomeSCs", "SalvageCorvette") ~= 0) then     --kasfShipsSelectType(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("CarrierFoundSomeSCs"), "SalCapCorvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Car1Targets", "GrowSelection_AttackingCar1", "Corvette_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("AttackingCar1"), "CLASS_Corvette")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Car1Targets", "GrowSelection_AttackingCar1", "Fighter_hw1") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("AttackingCar1"), "CLASS_Fighter")
	
	elseif (KAS_FillShipsByClass_Normal("GrowSelection_Car1Targets", "GrowSelection_AttackingCar1", "Frigate") ~= 0) then     --kasfShipsSelectClass(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("AttackingCar1"), "CLASS_Frigate")
	
	else
	
	KAS_ShipsAdd("GrowSelection_Car1Targets", "GrowSelection_AttackingCar1")    --kasfShipsAdd(kasGrowSelectionPtr("Car1Targets"), kasGrowSelectionPtr("AttackingCar1"))
	end 
	if (SobGroup_Count("GrowSelection_Car1Targets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("Car1Targets"))
	
	KAS_Attack(TeamName, "GrowSelection_Car1Targets")    --kasfAttack(kasGrowSelectionPtr("Car1Targets"))
	else
	
	--kasJump("ACT3AttackMothership")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3AttackMothership", "Init_Mission05_Carrier_ACT3DefendYourself")
	Init_Mission05_Carrier_ACT3AttackMothership(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission05 Carrier ACT3DefendYourself state
--
function Watch_Mission05_Carrier_ACT3DefendYourself(TeamName)
	--FSM: FSM_Mission05_Carrier
	--TeamName = Carrier
	if ((SobGroup_Count("GrowSelection_Car1Targets") == 0) or (KAS_GetCurrentOrder("Carrier") ~= 2)) then     --kasfShipsCount(kasGrowSelectionPtr("Car1Targets"))    --kasfShipsOrder(kasAITeamShipsPtr("Carrier"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3DefendYourself", "Watch_Mission05_Carrier_ACT3DefendYourself")
	Init_Mission05_Carrier_ACT3DefendYourself(TeamName)
	return
	end 
	if (_VIFONCE025[TeamName] == 0 and (SobGroup_IsShipNearPoint(TeamName, KAS_NamedCentrePosition("GrowSelection_Mothership"), 4900) ~= 0)) then  -- "ifonce" #25    --kasfNearby(kasShipsVectorPtr("Mothership"), 14000)
	
	_VIFONCE025[TeamName] = 1 --created,set;
	G_BeginKamikaze = 1 --created,set
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_CarrierL00kingForSCs", 5250) ~= 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("CarrierL00kingForSCs"), 15000)
	
	KAS_FillShipsByType_Normal("GrowSelection_CarrierFoundSomeSCs", "GrowSelection_CarrierL00kingForSCs", "SalvageCorvette")    --kasfShipsSelectType(kasGrowSelectionPtr("CarrierFoundSomeSCs"), kasGrowSelectionPtr("CarrierL00kingForSCs"), "SalCapCorvette")
	if (SobGroup_Count("GrowSelection_CarrierFoundSomeSCs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CarrierFoundSomeSCs"))
	
	--kasJump("ACT3DefendYourself")
	--KASRule_Remove("FSM_Mission05_Carrier", "Watch_Mission05_Carrier_ACT3DefendYourself")
	KASRule_Add(TeamName, "Watch_Mission05_Carrier_ACT3DefendYourself", "Watch_Mission05_Carrier_ACT3DefendYourself")
	Init_Mission05_Carrier_ACT3DefendYourself(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Probes FSM
--
function Init_Mission05_Probes(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	SHIPSNewships[TeamName] = 0 --created,set
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission05_Probes_Wait", "Init_Mission05_Probes")
	Init_Mission05_Probes_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Probes FSM
--
function Watch_Mission05_Probes(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	
end 


--
--  "initialize" code for Mission05 Probes Wait state
--
function Init_Mission05_Probes_Wait(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	
end 


--
--  "watch" code for Mission05 Probes Wait state
--
function Watch_Mission05_Probes_Wait(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	if (G_ACT2HasBegun ~= 0) then 
	
	--kasJump("RequestShips")
	--KASRule_Remove("FSM_Mission05_Probes", "Watch_Mission05_Probes_Wait")
	KASRule_Add(TeamName, "Watch_Mission05_Probes_RequestShips", "Watch_Mission05_Probes_Wait")
	Init_Mission05_Probes_RequestShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Probes RequestShips state
--
function Init_Mission05_Probes_RequestShips(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	if (KAS_TeamNamesEqual(TeamName, "Probes1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes1"))
	
	KAS_RequestShips(TeamName, "Tai_Probe", 1)    --kasfRequestShips("Probe", 1)
	elseif (KAS_TeamNamesEqual(TeamName, "Probes2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes2"))
	
	KAS_RequestShips(TeamName, "Tai_Probe", 1)    --kasfRequestShips("Probe", 1)
	elseif (KAS_TeamNamesEqual(TeamName, "Probes3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes3"))
	
	KAS_RequestShips(TeamName, "Tai_Probe", 1)    --kasfRequestShips("Probe", 1)
	end 
	
end 


--
--  "watch" code for Mission05 Probes RequestShips state
--
function Watch_Mission05_Probes_RequestShips(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	SHIPSNewships[TeamName] = KAS_NumberNewShipsAdded(TeamName) --set    --kasfNewShipsAdded()
	if (SHIPSNewships[TeamName] ~= 0) then 
	
	--kasJump("Move")
	--KASRule_Remove("FSM_Mission05_Probes", "Watch_Mission05_Probes_RequestShips")
	KASRule_Add(TeamName, "Watch_Mission05_Probes_Move", "Watch_Mission05_Probes_RequestShips")
	Init_Mission05_Probes_Move(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Probes Move state
--
function Init_Mission05_Probes_Move(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	if (KAS_TeamNamesEqual(TeamName, "Probes1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes1"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("Probe1POINT"))    --kasfMoveTo(kasVectorPtr("Probe1POINT"))
	elseif (KAS_TeamNamesEqual(TeamName, "Probes2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes2"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("Probe2POINT"))    --kasfMoveTo(kasVectorPtr("Probe2POINT"))
	elseif (KAS_TeamNamesEqual(TeamName, "Probes3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Probes3"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("Probe3POINT"))    --kasfMoveTo(kasVectorPtr("Probe3POINT"))
	end 
	
end 


--
--  "watch" code for Mission05 Probes Move state
--
function Watch_Mission05_Probes_Move(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	
end 


--
--  "initialize" code for Mission05 Probes NullState state
--
function Init_Mission05_Probes_NullState(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	
end 


--
--  "watch" code for Mission05 Probes NullState state
--
function Watch_Mission05_Probes_NullState(TeamName)
	--FSM: FSM_Mission05_Probes
	--TeamName = "Probes1"
	
end 


--
--  "initialize" code for Mission05 Defenders FSM
--
function Init_Mission05_Defenders(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	--kasJump("DockInstant")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_DockInstant", "Init_Mission05_Defenders")
	Init_Mission05_Defenders_DockInstant(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Defenders FSM
--
function Watch_Mission05_Defenders(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	if (SobGroup_Count(TeamName) == 0) then     --kasfShipsCount((&kasThisTeamPtr->shipList))
	
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_NullState", "Watch_Mission05_Defenders")
	Init_Mission05_Defenders_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Defenders DockInstant state
--
function Init_Mission05_Defenders_DockInstant(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	SobGroup_DockSobGroupInstant(TeamName, "Carrier")    --kasfDockInstant(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission05 Defenders DockInstant state
--
function Watch_Mission05_Defenders_DockInstant(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	if (SobGroup_IsDockedCompletely(TeamName) ~= 0) then     --kasfTeamDockedReadyForLaunch()
	
	--kasJump("Wait")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_DockInstant")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Wait", "Watch_Mission05_Defenders_DockInstant")
	Init_Mission05_Defenders_Wait(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Defenders Wait state
--
function Init_Mission05_Defenders_Wait(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	
end 


--
--  "watch" code for Mission05 Defenders Wait state
--
function Watch_Mission05_Defenders_Wait(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	if (G_ACT2HasBegun ~= 0) then 
	
	KASTimer_Start(TimerID_G_OrderToGuardHasBeenGiven, 90)
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Wait")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Launch", "Watch_Mission05_Defenders_Wait")
	Init_Mission05_Defenders_Launch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Defenders Launch state
--
function Init_Mission05_Defenders_Launch(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission05 Defenders Launch state
--
function Watch_Mission05_Defenders_Launch(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Launch")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Launch")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Defenders Guard state
--
function Init_Mission05_Defenders_Guard(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	KAS_SetFormation(TeamName, "Sphere")    --kasfFormationSphere()
	if (KAS_TeamNamesEqual(TeamName, "Defenders1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Defenders1"))
	
	if (SobGroup_Count("Frigates1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates1")    --kasfGuardShips(kasAITeamShipsPtr("Frigates1"))
	GuardingFrigate1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates2")    --kasfGuardShips(kasAITeamShipsPtr("Frigates2"))
	GuardingFrigate2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates3")    --kasfGuardShips(kasAITeamShipsPtr("Frigates3"))
	GuardingFrigate3[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers1")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers1"))
	GuardingDestroyer1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers2")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers2"))
	GuardingDestroyer2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	GuardingCarrier[TeamName] = 1 --created,set
	elseif (SobGroup_Count("SupportFrigate") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	SobGroup_GuardSobGroup(TeamName, "SupportFrigate")    --kasfGuardShips(kasAITeamShipsPtr("SupportFrigate"))
	GuardingSupportFrigate[TeamName] = 1 --created,set
	else
	
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Defenders2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Defenders2"))
	
	if (SobGroup_Count("Frigates2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates2")    --kasfGuardShips(kasAITeamShipsPtr("Frigates2"))
	GuardingFrigate2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates1")    --kasfGuardShips(kasAITeamShipsPtr("Frigates1"))
	GuardingFrigate1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates3")    --kasfGuardShips(kasAITeamShipsPtr("Frigates3"))
	GuardingFrigate3[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers1")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers1"))
	GuardingDestroyer1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers2")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers2"))
	GuardingDestroyer2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	GuardingCarrier[TeamName] = 1 --created,set
	elseif (SobGroup_Count("SupportFrigate") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	SobGroup_GuardSobGroup(TeamName, "SupportFrigate")    --kasfGuardShips(kasAITeamShipsPtr("SupportFrigate"))
	GuardingSupportFrigate[TeamName] = 1 --created,set
	else
	
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	end 
	elseif (KAS_TeamNamesEqual(TeamName, "Defenders3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("Defenders3"))
	
	if (SobGroup_Count("Frigates3") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates3")    --kasfGuardShips(kasAITeamShipsPtr("Frigates3"))
	GuardingFrigate3[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates1")    --kasfGuardShips(kasAITeamShipsPtr("Frigates1"))
	GuardingFrigate1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Frigates2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))
	
	SobGroup_GuardSobGroup(TeamName, "Frigates2")    --kasfGuardShips(kasAITeamShipsPtr("Frigates2"))
	GuardingFrigate2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers1") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers1")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers1"))
	GuardingDestroyer1[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Destroyers2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))
	
	SobGroup_GuardSobGroup(TeamName, "Destroyers2")    --kasfGuardShips(kasAITeamShipsPtr("Destroyers2"))
	GuardingDestroyer2[TeamName] = 1 --created,set
	elseif (SobGroup_Count("Carrier") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	SobGroup_GuardSobGroup(TeamName, "Carrier")    --kasfGuardShips(kasAITeamShipsPtr("Carrier"))
	GuardingCarrier[TeamName] = 1 --created,set
	elseif (SobGroup_Count("SupportFrigate") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	SobGroup_GuardSobGroup(TeamName, "SupportFrigate")    --kasfGuardShips(kasAITeamShipsPtr("SupportFrigate"))
	GuardingSupportFrigate[TeamName] = 1 --created,set
	else
	
	KAS_Kamikaze(TeamName, "GrowSelection_PlayerMothership")    --kasfKamikaze(kasGrowSelectionPtr("PlayerMothership"))
	end 
	end 
	
end 


--
--  "watch" code for Mission05 Defenders Guard state
--
function Watch_Mission05_Defenders_Guard(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	if (GuardingFrigate1[TeamName] == 1) then 
	
	if (SobGroup_Count("Frigates1") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	
	GuardingFrigate1[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingFrigate2[TeamName] == 1) then 
	
	if (SobGroup_Count("Frigates2") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))
	
	GuardingFrigate2[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingFrigate3[TeamName] == 1) then 
	
	if (SobGroup_Count("Frigates3") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))
	
	GuardingFrigate3[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingDestroyer1[TeamName] == 1) then 
	
	if (SobGroup_Count("Destroyers1") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	
	GuardingDestroyer1[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingDestroyer2[TeamName] == 1) then 
	
	if (SobGroup_Count("Destroyers2") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))
	
	GuardingDestroyer2[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingCarrier[TeamName] == 1) then 
	
	if (SobGroup_Count("Carrier") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	GuardingCarrier[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	elseif (GuardingSupportFrigate[TeamName] == 1) then 
	
	if (SobGroup_Count("SupportFrigate") == 0) then     --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))
	
	GuardingSupportFrigate[TeamName] = 0 --destroyed
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission05_Defenders", "Watch_Mission05_Defenders_Guard")
	KASRule_Add(TeamName, "Watch_Mission05_Defenders_Guard", "Watch_Mission05_Defenders_Guard")
	Init_Mission05_Defenders_Guard(TeamName)
	return
	end 
	end 
	
end 


--
--  "initialize" code for Mission05 Defenders NullState state
--
function Init_Mission05_Defenders_NullState(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	
end 


--
--  "watch" code for Mission05 Defenders NullState state
--
function Watch_Mission05_Defenders_NullState(TeamName)
	--FSM: FSM_Mission05_Defenders
	--TeamName = "Defenders1"
	
end 


--
--  "initialize" code for Mission05 Kamikaze FSM
--
function Init_Mission05_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	--kasJump("Dock")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze_Dock", "Init_Mission05_Kamikaze")
	Init_Mission05_Kamikaze_Dock(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Kamikaze FSM
--
function Watch_Mission05_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	if (_VIFONCE026[TeamName] == 0 and ((SobGroup_Count("Kamikaze") == 0) and (SobGroup_Count("Carrier") == 0))) then  -- "ifonce" #26    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("Kamikaze"))
	
	_VIFONCE026[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission05_Kamikaze", "Watch_Mission05_Kamikaze")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze_NullState", "Watch_Mission05_Kamikaze")
	Init_Mission05_Kamikaze_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze Dock state
--
function Init_Mission05_Kamikaze_Dock(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	SobGroup_DockSobGroupInstant(TeamName, "Carrier")    --kasfDockInstant(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission05 Kamikaze Dock state
--
function Watch_Mission05_Kamikaze_Dock(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	if (G_BeginKamikaze == 1) then 
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission05_Kamikaze", "Watch_Mission05_Kamikaze_Dock")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze_Launch", "Watch_Mission05_Kamikaze_Dock")
	Init_Mission05_Kamikaze_Launch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze Launch state
--
function Init_Mission05_Kamikaze_Launch(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission05 Kamikaze Launch state
--
function Watch_Mission05_Kamikaze_Launch(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission05_Kamikaze", "Watch_Mission05_Kamikaze_Launch")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze_Kamikaze", "Watch_Mission05_Kamikaze_Launch")
	Init_Mission05_Kamikaze_Kamikaze(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze Kamikaze state
--
function Init_Mission05_Kamikaze_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	KAS_Kamikaze(TeamName, "GrowSelection_Mothership")    --kasfKamikaze(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 Kamikaze Kamikaze state
--
function Watch_Mission05_Kamikaze_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	if ((SobGroup_Count("Kamikaze") == 0) and (WaitingForShips[TeamName] == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Kamikaze"))
	
	Player_SetRU(1, (Player_GetRU(1) + 35))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 35))
	KAS_RequestShips(TeamName, "Tai_Scout", 1)    --kasfRequestShips("LightInterceptor", 1)
	WaitingForShips[TeamName] = 1 --created,set
	end 
	if (SobGroup_Count("Kamikaze") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Kamikaze"))
	
	KAS_Kamikaze(TeamName, "GrowSelection_Mothership")    --kasfKamikaze(kasGrowSelectionPtr("Mothership"))
	WaitingForShips[TeamName] = 0 --created,set
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze NullState state
--
function Init_Mission05_Kamikaze_NullState(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	
end 


--
--  "watch" code for Mission05 Kamikaze NullState state
--
function Watch_Mission05_Kamikaze_NullState(TeamName)
	--FSM: FSM_Mission05_Kamikaze
	--TeamName = Kamikaze
	
end 


--
--  "initialize" code for Mission05 Kamikaze2 FSM
--
function Init_Mission05_Kamikaze2(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	--kasJump("Dock")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze2_Dock", "Init_Mission05_Kamikaze2")
	Init_Mission05_Kamikaze2_Dock(TeamName)
	return
	
end 


--
--  "watch" code for Mission05 Kamikaze2 FSM
--
function Watch_Mission05_Kamikaze2(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	if (_VIFONCE027[TeamName] == 0 and ((SobGroup_Count("Kamikaze2") == 0) and (SobGroup_Count("Carrier") == 0))) then  -- "ifonce" #27    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("Kamikaze2"))
	
	_VIFONCE027[TeamName] = 1 --created,set;
	--kasJump("NullState")
	--KASRule_Remove("FSM_Mission05_Kamikaze2", "Watch_Mission05_Kamikaze2")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze2_NullState", "Watch_Mission05_Kamikaze2")
	Init_Mission05_Kamikaze2_NullState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze2 Dock state
--
function Init_Mission05_Kamikaze2_Dock(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	SobGroup_DockSobGroupInstant(TeamName, "Carrier")    --kasfDockInstant(kasAITeamPtr("Carrier"))
	
end 


--
--  "watch" code for Mission05 Kamikaze2 Dock state
--
function Watch_Mission05_Kamikaze2_Dock(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	if (G_BeginKamikaze == 1) then 
	
	--kasJump("Launch")
	--KASRule_Remove("FSM_Mission05_Kamikaze2", "Watch_Mission05_Kamikaze2_Dock")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze2_Launch", "Watch_Mission05_Kamikaze2_Dock")
	Init_Mission05_Kamikaze2_Launch(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze2 Launch state
--
function Init_Mission05_Kamikaze2_Launch(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission05 Kamikaze2 Launch state
--
function Watch_Mission05_Kamikaze2_Launch(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	if (KAS_TeamFinishedLaunching(TeamName) ~= 0) then     --kasfTeamFinishedLaunching()
	
	--kasJump("Kamikaze")
	--KASRule_Remove("FSM_Mission05_Kamikaze2", "Watch_Mission05_Kamikaze2_Launch")
	KASRule_Add(TeamName, "Watch_Mission05_Kamikaze2_Kamikaze", "Watch_Mission05_Kamikaze2_Launch")
	Init_Mission05_Kamikaze2_Kamikaze(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze2 Kamikaze state
--
function Init_Mission05_Kamikaze2_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	KAS_Kamikaze(TeamName, "GrowSelection_Mothership")    --kasfKamikaze(kasGrowSelectionPtr("Mothership"))
	
end 


--
--  "watch" code for Mission05 Kamikaze2 Kamikaze state
--
function Watch_Mission05_Kamikaze2_Kamikaze(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	if ((SobGroup_Count("Kamikaze2") == 0) and (WaitingForShips[TeamName] == 0)) then     --kasfShipsCount(kasAITeamShipsPtr("Kamikaze2"))
	
	Player_SetRU(1, (Player_GetRU(1) + 55))    --kasfRUsGet(1)    --kasfRUsSet(1, (Player_GetRU(1) + 55))
	KAS_RequestShips(TeamName, "Tai_Interceptor", 1)    --kasfRequestShips("HeavyInterceptor", 1)
	WaitingForShips[TeamName] = 1 --created,set
	end 
	if (SobGroup_Count("Kamikaze2") > 0) then     --kasfShipsCount(kasAITeamShipsPtr("Kamikaze2"))
	
	KAS_Kamikaze(TeamName, "GrowSelection_Mothership")    --kasfKamikaze(kasGrowSelectionPtr("Mothership"))
	WaitingForShips[TeamName] = 0 --created,set
	end 
	
end 


--
--  "initialize" code for Mission05 Kamikaze2 NullState state
--
function Init_Mission05_Kamikaze2_NullState(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	
end 


--
--  "watch" code for Mission05 Kamikaze2 NullState state
--
function Watch_Mission05_Kamikaze2_NullState(TeamName)
	--FSM: FSM_Mission05_Kamikaze2
	--TeamName = Kamikaze2
	
end 


--
--  "initialize" code for Mission05 mission
--
function Init_Mission05(MissionName)
	--FSM: FSM_Mission05
	--MissionName = "Mission05"
	G_TOTALInterceptorsKilled = 0 --created,set
	G_TOTALInterceptorsInLevel = 0 --created,set
	G_TOTALOriginalInterceptors = 0 --created,set
	G_InterceptorsKilledTOTAL = 0 --created,set
	G_TOTALFrigatesKilled = 0 --created,set
	G_TOTALFrigatesInLevel = 0 --created,set
	G_TOTALOriginalFrigates = 0 --created,set
	G_NumFrigateTeams = 0 --created,set
	G_TOTALDestroyersKilled = 0 --created,set
	G_TOTALDestroyersInLevel = 0 --created,set
	G_TOTALOriginalDestroyers = 0 --created,set
	G_NumDestroyerTeams = 0 --created,set
	G_FrigatesUnderAttack = 0 --created,set
	G_DestroyersUnderAttack = 0 --created,set
	G_CarrierUnderAttack = 0 --created,set
	G_SupportFrigateUnderAttack = 0 --created,set
	G_LASTInterceptorsInLevel = (SobGroup_Count("Interceptors1") + SobGroup_Count("Interceptors2")) --created,set    --kasfShipsCount(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsCount(kasAITeamShipsPtr("Interceptors1"))
	G_LASTFrigatesInLevel = (SobGroup_Count("Frigates1") + SobGroup_Count("Frigates2") + SobGroup_Count("Frigates3")) --created,set    --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	G_LASTDestroyersInLevel = (SobGroup_Count("Destroyers1") + SobGroup_Count("Destroyers2")) --created,set    --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))    --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	G_CURRENTInterceptorsInLevel = 0 --created,set
	G_CURRENTFrigatesInLevel = 0 --created,set
	G_CURRENTDestroyersInLevel = 0 --created,set
	--kasFSMCreate("FleetIntel")
	KASRule_AddFSM("FleetIntel", "Watch_Mission05_FleetIntel", "Init_Mission05")
	Init_Mission05_FleetIntel("FleetIntel")
	--kasFSMCreate("Collector")
	KASRule_AddFSM("Collector", "Watch_Mission05_Collector", "Init_Mission05")
	Init_Mission05_Collector("Collector")
	--kasFSMCreate("Collector")
	KASRule_AddFSM("Collector2", "Watch_Mission05_Collector", "Init_Mission05")
	Init_Mission05_Collector("Collector2")
	--kasFSMCreate("Interceptors")
	KASRule_AddFSM("Interceptors1", "Watch_Mission05_Interceptors", "Init_Mission05")
	Init_Mission05_Interceptors("Interceptors1")
	--kasFSMCreate("Interceptors")
	KASRule_AddFSM("Interceptors2", "Watch_Mission05_Interceptors", "Init_Mission05")
	Init_Mission05_Interceptors("Interceptors2")
	--kasFSMCreate("Frigates")
	KASRule_AddFSM("Frigates1", "Watch_Mission05_Frigates", "Init_Mission05")
	Init_Mission05_Frigates("Frigates1")
	--kasFSMCreate("Frigates")
	KASRule_AddFSM("Frigates2", "Watch_Mission05_Frigates", "Init_Mission05")
	Init_Mission05_Frigates("Frigates2")
	--kasFSMCreate("Frigates")
	KASRule_AddFSM("Frigates3", "Watch_Mission05_Frigates", "Init_Mission05")
	Init_Mission05_Frigates("Frigates3")
	--kasFSMCreate("Destroyers")
	KASRule_AddFSM("Destroyers1", "Watch_Mission05_Destroyers", "Init_Mission05")
	Init_Mission05_Destroyers("Destroyers1")
	--kasFSMCreate("Destroyers")
	KASRule_AddFSM("Destroyers2", "Watch_Mission05_Destroyers", "Init_Mission05")
	Init_Mission05_Destroyers("Destroyers2")
	--kasFSMCreate("SupportFrigate")
	KASRule_AddFSM("SupportFrigate", "Watch_Mission05_SupportFrigate", "Init_Mission05")
	Init_Mission05_SupportFrigate("SupportFrigate")
	--kasFSMCreate("Probes")
	KASRule_AddFSM("Probes1", "Watch_Mission05_Probes", "Init_Mission05")
	Init_Mission05_Probes("Probes1")
	--kasFSMCreate("Probes")
	KASRule_AddFSM("Probes2", "Watch_Mission05_Probes", "Init_Mission05")
	Init_Mission05_Probes("Probes2")
	--kasFSMCreate("Probes")
	KASRule_AddFSM("Probes3", "Watch_Mission05_Probes", "Init_Mission05")
	Init_Mission05_Probes("Probes3")
	--kasFSMCreate("Defenders")
	KASRule_AddFSM("Defenders1", "Watch_Mission05_Defenders", "Init_Mission05")
	Init_Mission05_Defenders("Defenders1")
	--kasFSMCreate("Defenders")
	KASRule_AddFSM("Defenders2", "Watch_Mission05_Defenders", "Init_Mission05")
	Init_Mission05_Defenders("Defenders2")
	--kasFSMCreate("Defenders")
	KASRule_AddFSM("Defenders3", "Watch_Mission05_Defenders", "Init_Mission05")
	Init_Mission05_Defenders("Defenders3")
	--kasFSMCreate("Carrier")
	KASRule_AddFSM("Carrier", "Watch_Mission05_Carrier", "Init_Mission05")
	Init_Mission05_Carrier("Carrier")
	--kasFSMCreate("Kamikaze")
	KASRule_AddFSM("Kamikaze", "Watch_Mission05_Kamikaze", "Init_Mission05")
	Init_Mission05_Kamikaze("Kamikaze")
	--kasFSMCreate("Kamikaze2")
	KASRule_AddFSM("Kamikaze2", "Watch_Mission05_Kamikaze2", "Init_Mission05")
	Init_Mission05_Kamikaze2("Kamikaze2")
	KAS_CampaignAutoSave(5, "$61264")    --kasfSaveLevel(5, LSTRING_Savegame[strCurLanguage])
	
end 


--
--  "watch" code for Mission05 mission
--
function Watch_Mission05(MissionName)
	--FSM: FSM_Mission05
	--MissionName = "Mission05"
	if (_VIFONCE028 == 0 and (1 ~= 0)) then  -- "ifonce" #28
	
	_VIFONCE028 = 1 --created,set;
	KASTimer_Start(TimerID_LocationCardTimer, 1)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_LocationCardTimer) ~= 0) then 
	
	singlePlayerLocationCard("$61265", 5)    --kasfLocationCard(5000, LSTRING_LocationCard[strCurLanguage])
	end 
	if (_VIFONCE029 == 0 and (G_ReadyToHYPERSPACE == 1)) then  -- "ifonce" #29
	
	_VIFONCE029 = 1 --created,set;
	KASTimer_Start(TimerID_G_WaitToPlayFinalEvent, 5)
	end 
	if (_VIFONCE030 == 0 and (KASObjective_GetState(ObjectiveID_SendProbe) ~= 0)) then  -- "ifonce" #30    --kasfObjectiveGet("SendProbe")
	
	_VIFONCE030 = 1 --created,set;
	KASTimer_Start(TimerID_G_WaitToPlayResourcerEvent, RandomIntRange(105, 165))    --kasfRandom(105, 165)
	end 
	KAS_FindEnemiesInside("FrigateVolume", "GrowSelection_FrigateVolTOTAL")    --kasfFindEnemiesInside(kasVolumePtr("FrigateVolume"), kasGrowSelectionPtr("FrigateVolTOTAL"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_FrigateVolFighters", "GrowSelection_FrigateVolTOTAL", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("FrigateVolFighters"), kasGrowSelectionPtr("FrigateVolTOTAL"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_FrigateVolCorvettes", "GrowSelection_FrigateVolTOTAL", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("FrigateVolCorvettes"), kasGrowSelectionPtr("FrigateVolTOTAL"), "CLASS_Corvette")
	KAS_FillShipsByClass_Normal("GrowSelection_FrigateVolFrigates", "GrowSelection_FrigateVolTOTAL", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("FrigateVolFrigates"), kasGrowSelectionPtr("FrigateVolTOTAL"), "CLASS_Frigate")
	KAS_FindEnemiesInside("CarrierVolume", "GrowSelection_CarrierVolTOTAL")    --kasfFindEnemiesInside(kasVolumePtr("CarrierVolume"), kasGrowSelectionPtr("CarrierVolTOTAL"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierVolFighters", "GrowSelection_CarrierVolTOTAL", "Fighter_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierVolFighters"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Fighter")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierVolCorvettes", "GrowSelection_CarrierVolTOTAL", "Corvette_hw1")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierVolCorvettes"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Corvette")
	KAS_FillShipsByClass_Normal("GrowSelection_CarrierVolFrigates", "GrowSelection_CarrierVolTOTAL", "Frigate")    --kasfShipsSelectClass(kasGrowSelectionPtr("CarrierVolFrigates"), kasGrowSelectionPtr("CarrierVolTOTAL"), "CLASS_Frigate")
	G_CURRENTInterceptorsInLevel = (SobGroup_Count("Interceptors1") + SobGroup_Count("Interceptors2")) --set    --kasfShipsCount(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsCount(kasAITeamShipsPtr("Interceptors1"))
	G_CURRENTFrigatesInLevel = (SobGroup_Count("Frigates1") + SobGroup_Count("Frigates2") + SobGroup_Count("Frigates3")) --set    --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))
	G_CURRENTDestroyersInLevel = (SobGroup_Count("Destroyers1") + SobGroup_Count("Destroyers2")) --set    --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))    --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))
	if (G_CURRENTInterceptorsInLevel < G_LASTInterceptorsInLevel) then 
	
	G_TOTALInterceptorsKilled = G_TOTALInterceptorsKilled + (G_LASTInterceptorsInLevel - CURRENTInterceptorsInLevel) --set
	end 
	G_LASTInterceptorsInLevel = G_CURRENTInterceptorsInLevel --set
	if (G_CURRENTFrigatesInLevel < G_LASTFrigatesInLevel) then 
	
	G_TOTALFrigatesKilled = G_TOTALFrigatesKilled + (G_LASTFrigatesInLevel - CURRENTFrigatesInLevel) --set
	end 
	G_LASTFrigatesInLevel = G_CURRENTFrigatesInLevel --set
	if (G_CURRENTDestroyersInLevel < G_LASTDestroyersInLevel) then 
	
	G_TOTALDestroyersKilled = G_TOTALDestroyersKilled + (G_LASTDestroyersInLevel - CURRENTDestroyersInLevel) --set
	end 
	G_LASTDestroyersInLevel = G_CURRENTDestroyersInLevel --set
	G_InterceptorsKilledTOTAL = (G_TOTALInterceptorsKilled / G_TOTALOriginalInterceptors) --set
	if (_VIFONCE031 == 0 and (5 * G_InterceptorsKilledTOTAL + 7 * (G_TOTALFrigatesKilled) + 17 * (G_TOTALDestroyersKilled) >= 25)) then  -- "ifonce" #31
	
	_VIFONCE031 = 1 --created,set;
	G_ACT2HasBegun = 1 --created,set
	end 
	if (_VIFONCE032 == 0 and ((SobGroup_Count("Carrier") == 0) or (G_TOTALDestroyersKilled > 1) or (G_TOTALFrigatesKilled > 8))) then  -- "ifonce" #32    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))
	
	_VIFONCE032 = 1 --created,set;
	G_ACT3HasBegun = 1 --created,set
	end 
	KAS_FindEnemiesInside("MothershipVolume", "GrowSelection_MothershipVolTOTAL")    --kasfFindEnemiesInside(kasVolumePtr("MothershipVolume"), kasGrowSelectionPtr("MothershipVolTOTAL"), 3000)
	KAS_FillShipsByClass_Normal("GrowSelection_PlayerMothership", "GrowSelection_MothershipVolTOTAL", "Mothership")    --kasfShipsSelectClass(kasGrowSelectionPtr("PlayerMothership"), kasGrowSelectionPtr("MothershipVolTOTAL"), "CLASS_Mothership")
	if (_VIFONCE033 == 0 and (1 ~= 0)) then  -- "ifonce" #33
	
	_VIFONCE033 = 1 --created,set;
	KASTimer_Start(TimerID_G_FCHyperspaceSuccessful, 5)
	end 
	if (_VIFONCE034 == 0 and ((G_FrigatesUnderAttack == 1) or (G_DestroyersUnderAttack == 1) or (G_CarrierUnderAttack == 1) or (G_SupportFrigateUnderAttack == 1))) then  -- "ifonce" #34
	
	_VIFONCE034 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayTeachMoveWhileAttacking, 1)
	end 
	if (_VIFONCE035 == 0 and (((KAS_ShipHasBeenRendered("Defenders1", 4) ~= 0) or (KAS_ShipHasBeenRendered("Defenders1", 3) ~= 0) or (KAS_ShipHasBeenRendered("Defenders1", 2) ~= 0) or (KAS_ShipHasBeenRendered("Defenders1", 1) ~= 0) or (KAS_ShipHasBeenRendered("Defenders1", 0) ~= 0) or (KAS_ShipHasBeenRendered("Defenders2", 4) ~= 0) or (KAS_ShipHasBeenRendered("Defenders2", 3) ~= 0) or (KAS_ShipHasBeenRendered("Defenders2", 2) ~= 0) or (KAS_ShipHasBeenRendered("Defenders2", 1) ~= 0) or (KAS_ShipHasBeenRendered("Defenders2", 0) ~= 0) or (KAS_ShipHasBeenRendered("Defenders3", 4) ~= 0) or (KAS_ShipHasBeenRendered("Defenders3", 3) ~= 0) or (KAS_ShipHasBeenRendered("Defenders3", 2) ~= 0) or (KAS_ShipHasBeenRendered("Defenders3", 1) ~= 0) or (KAS_ShipHasBeenRendered("Defenders3", 0) ~= 0)) and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_OrderToGuardHasBeenGiven) ~= 0))) then  -- "ifonce" #35    --kasfRenderedShips(kasAITeamShipsPtr("Defenders3"), 0)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders3"), 1)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders3"), 2)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders3"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders3"), 4)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders2"), 0)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders2"), 1)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders2"), 2)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders2"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders2"), 4)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders1"), 0)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders1"), 1)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders1"), 2)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders1"), 3)    --kasfRenderedShips(kasAITeamShipsPtr("Defenders1"), 4)
	
	_VIFONCE035 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayTeachDefenders, RandomIntRange(5, 10))    --kasfRandom(5, 10)
	end 
	if (_VIFONCE036 == 0 and (G_FleetIntelIntroHasPlayed == 1)) then  -- "ifonce" #36
	
	_VIFONCE036 = 1 --created,set;
	KASObjective_Add(ObjectiveID_SendProbe, "$61266", OT_Primary)    --kasfObjectiveCreate("SendProbe", LSTRING_FISendProbeTASKBAR[strCurLanguage], LSTRING_FISendProbeTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_SendProbe, "$60820")
	G_SendProbeObjectiveCreated = 1 --created,set
	end 
	if (_VIFONCE037 == 0 and (KAS_FindEnemiesInside("HidingVolume2", "GrowSelection_Null91919191") ~= 0)) then  -- "ifonce" #37    --kasfFindEnemiesInside(kasVolumePtr("HidingVolume2"), kasGrowSelectionPtr("Null91919191"), 3000)
	
	_VIFONCE037 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_SendProbe, 1)    --kasfObjectiveSet("SendProbe", 1)
	KAS_PingRemove("HidingPOINT", "$60526")    --kasfPingRemove("HidingPOINT")
	end 
	if (_VIFONCE038 == 0 and (G_EradicateEnemiesHasPlayed == 1)) then  -- "ifonce" #38
	
	_VIFONCE038 = 1 --created,set;
	KASObjective_Add(ObjectiveID_EradicateEnemies, "$61267", OT_Primary)    --kasfObjectiveCreate("EradicateEnemies", LSTRING_FIEradicateTASKBAR[strCurLanguage], LSTRING_FIEradicateTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_EradicateEnemies, "$60821")
	end 
	if (_VIFONCE039 == 0 and (G_DestroyResourcerHasPlayed == 1)) then  -- "ifonce" #39
	
	_VIFONCE039 = 1 --created,set;
	KASObjective_Add(ObjectiveID_DestroyResourcer, "$61268", OT_Primary)    --kasfObjectiveCreate("DestroyResourcer", LSTRING_FIDestroyResTASKBAR[strCurLanguage], LSTRING_FIDestroyResTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyResourcer, "$60822")
	end 
	if (_VIFONCE040 == 0 and ((SobGroup_Count("Collector") == 0) and (SobGroup_Count("Collector2") == 0))) then  -- "ifonce" #40    --kasfShipsCount(kasAITeamShipsPtr("Collector2"))    --kasfShipsCount(kasAITeamShipsPtr("Collector"))
	
	_VIFONCE040 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_DestroyResourcer, 1)    --kasfObjectiveSet("DestroyResourcer", 1)
	end 
	if (_VIFONCE041 == 0 and (G_TeachDefenderEventHasPlayed == 1)) then  -- "ifonce" #41
	
	_VIFONCE041 = 1 --created,set;
	KASObjective_Add(ObjectiveID_ResearchDefenders, "$61269", OT_Secondary)    --kasfObjectiveCreateSecondary("ResearchDefenders", LSTRING_FITeachDefendersTASKBAR[strCurLanguage], LSTRING_FITeachDefendersTASKBAR[strCurLanguage])
	Objective_SetDescription(ObjectiveID_ResearchDefenders, "$60823")
	end 
	if (_VIFONCE042 == 0 and (KAS_PlayerHasResearch(0, "DefenderSubSystems") ~= 0)) then  -- "ifonce" #42    --kasfDoesPlayerHave("FireControl")
	
	_VIFONCE042 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_ResearchDefenders, 1)    --kasfObjectiveSet("ResearchDefenders", 1)
	end 
	if (_VIFONCE043 == 0 and ((SobGroup_Count("Collector") == 0) and (SobGroup_Count("Collector2") == 0) and (SobGroup_Count("Interceptors1") == 0) and (SobGroup_Count("Interceptors2") == 0) and (SobGroup_Count("Frigates1") == 0) and (SobGroup_Count("Frigates2") == 0) and (SobGroup_Count("Frigates3") == 0) and (SobGroup_Count("Destroyers1") == 0) and (SobGroup_Count("Destroyers2") == 0) and (SobGroup_Count("SupportFrigate") == 0) and (SobGroup_Count("Carrier") == 0))) then  -- "ifonce" #43    --kasfShipsCount(kasAITeamShipsPtr("Carrier"))    --kasfShipsCount(kasAITeamShipsPtr("SupportFrigate"))    --kasfShipsCount(kasAITeamShipsPtr("Destroyers2"))    --kasfShipsCount(kasAITeamShipsPtr("Destroyers1"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates3"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates2"))    --kasfShipsCount(kasAITeamShipsPtr("Frigates1"))    --kasfShipsCount(kasAITeamShipsPtr("Interceptors2"))    --kasfShipsCount(kasAITeamShipsPtr("Interceptors1"))    --kasfShipsCount(kasAITeamShipsPtr("Collector2"))    --kasfShipsCount(kasAITeamShipsPtr("Collector"))
	
	_VIFONCE043 = 1 --created,set;
	G_ReadyToHYPERSPACE = 1 --created,set
	KASTimer_Start(TimerID_G_MissionCompleteTimer, 5)
	KASObjective_SetState(ObjectiveID_EradicateEnemies, 1)    --kasfObjectiveSet("EradicateEnemies", 1)
	KAS_MusicStop(4)    --kasfMusicStop(4)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_MissionCompleteTimer) ~= 0) then 
	
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end 
	if (_VIFONCE044 == 0 and (1 ~= 0)) then  -- "ifonce" #44
	
	_VIFONCE044 = 1 --created,set;
	KASTimer_Start(TimerID_G_PlayIonOrPlasmaEvent, RandomIntRange(195, 250))    --kasfRandom(195, 250)
	end 
	if (G_TechEventHasPlayed == 0) then 
	
	if (_VIFONCE045 == 0 and ((KASTimer_IsExpired(TimerID_G_PlayIonOrPlasmaEvent) ~= 0) and (Player_CanResearch(0, "IonCannons") ~= 0))) then  -- "ifonce" #45    --kasfCanPlayerResearch("IonWeapons")
	
	_VIFONCE045 = 1 --created,set;
	if (G_PlayPlasmaTechEvent == 0) then 
	
	G_PlayPlasmaTechEvent = 1 --created,set
	G_TechEventHasPlayed = 1 --created,set
	end 
	end 
	end 
	if (G_TechEventHasPlayed == 0) then 
	
	if (_VIFONCE046 == 0 and ((KASTimer_IsExpired(TimerID_G_PlayIonOrPlasmaEvent) ~= 0) and (KAS_PlayerHasResearch(0, "IonCannons") ~= 0))) then  -- "ifonce" #46    --kasfDoesPlayerHave("IonWeapons")
	
	_VIFONCE046 = 1 --created,set;
	if (G_PlayPlasmaTechEvent == 0) then 
	
	G_PlayPlasmaTechEvent = 1 --created,set
	G_TechEventHasPlayed = 1 --created,set
	end 
	end 
	end 
	if (G_TechEventHasPlayed == 0) then 
	
	if (_VIFONCE047 == 0 and ((KASTimer_IsExpired(TimerID_G_PlayIonOrPlasmaEvent) ~= 0) and (Player_CanResearch(0, "PlasmaBombLauncher") ~= 0))) then  -- "ifonce" #47    --kasfCanPlayerResearch("PlasmaWeapons")
	
	_VIFONCE047 = 1 --created,set;
	if (G_PlayIonTechEvent == 0) then 
	
	G_PlayIonTechEvent = 1 --created,set
	G_TechEventHasPlayed = 1 --created,set
	end 
	end 
	end 
	if (G_TechEventHasPlayed == 0) then 
	
	if (_VIFONCE048 == 0 and ((KASTimer_IsExpired(TimerID_G_PlayIonOrPlasmaEvent) ~= 0) and (KAS_PlayerHasResearch(0, "PlasmaBombLauncher") ~= 0))) then  -- "ifonce" #48    --kasfDoesPlayerHave("PlasmaWeapons")
	
	_VIFONCE048 = 1 --created,set;
	if (G_PlayIonTechEvent == 0) then 
	
	G_PlayIonTechEvent = 1 --created,set
	G_TechEventHasPlayed = 1 --created,set
	end 
	end 
	end 
	if (G_TechEventHasPlayed == 0) then 
	
	if (_VIFONCE049 == 0 and ((KASTimer_IsExpired(TimerID_G_PlayIonOrPlasmaEvent) ~= 0) and (( (Player_CanResearch(0, "PlasmaBombLauncher"))== 0) and ( (Player_CanResearch(0, "IonCannons"))== 0)))) then  -- "ifonce" #49    --kasfCanPlayerResearch("IonWeapons")    --kasfCanPlayerResearch("PlasmaWeapons")
	
	_VIFONCE049 = 1 --created,set;
	if (G_PlayPlasmaTechEvent == 0) then 
	
	G_PlayPlasmaTechEvent = 1 --created,set
	G_TechEventHasPlayed = 1 --created,set
	end 
	end 
	end 
	if (_VIFONCE050 == 0 and (G_TeachDefenderEventHasPlayed == 1)) then  -- "ifonce" #50
	
	_VIFONCE050 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "DefenderSubSystems")    --kasfAllowPlayerToResearch("FireControl")
	end 
	if (_VIFONCE051 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #51    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE051 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end 
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end 
	if (_VIFONCE052 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #52    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE052 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end 
	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_ACT3CarFound")
    KASSobGroup_Create("GrowSelection_ACT3DesFound")
    KASSobGroup_Create("GrowSelection_ACT3FrigFound")
    KASSobGroup_Create("GrowSelection_ACT3IntFound")
    KASSobGroup_Create("GrowSelection_ACT3IntTargets")
    KASSobGroup_Create("GrowSelection_ACT3SupFound")
    KASSobGroup_Create("GrowSelection_AttackingCar1")
    KASSobGroup_Create("GrowSelection_AttackingCollector")
    KASSobGroup_Create("GrowSelection_AttackingDes1")
    KASSobGroup_Create("GrowSelection_AttackingDes2")
    KASSobGroup_Create("GrowSelection_AttackingFrig1")
    KASSobGroup_Create("GrowSelection_AttackingFrig2")
    KASSobGroup_Create("GrowSelection_AttackingFrig3")
    KASSobGroup_Create("GrowSelection_AttackingSup1")
    KASSobGroup_Create("GrowSelection_Car1Targets")
    KASSobGroup_Create("GrowSelection_CarrierFoundSomeSCs")
    KASSobGroup_Create("GrowSelection_CarrierL00kingForSCs")
    KASSobGroup_Create("GrowSelection_CarrierTargets")
    KASSobGroup_Create("GrowSelection_CarrierUnderAttack")
    KASSobGroup_Create("GrowSelection_CarrierVolCorvettes")
    KASSobGroup_Create("GrowSelection_CarrierVolFighters")
    KASSobGroup_Create("GrowSelection_CarrierVolFrigates")
    KASSobGroup_Create("GrowSelection_CarrierVolTOTAL")
    KASSobGroup_Create("GrowSelection_Collectors")
    KASSobGroup_Create("GrowSelection_Des1FoundSomeSCs")
    KASSobGroup_Create("GrowSelection_Des1L00kingForSCs")
    KASSobGroup_Create("GrowSelection_Des1Targets")
    KASSobGroup_Create("GrowSelection_Des2FoundSomeSCs")
    KASSobGroup_Create("GrowSelection_Des2L00kingForSCs")
    KASSobGroup_Create("GrowSelection_Des2Targets")
    KASSobGroup_Create("GrowSelection_Destroyer1Targets")
    KASSobGroup_Create("GrowSelection_Destroyer2Targets")
    KASSobGroup_Create("GrowSelection_DestroyersUnderAttack")
    KASSobGroup_Create("GrowSelection_DestroyersVsFrigates")
    KASSobGroup_Create("GrowSelection_EntireWorld")
    KASSobGroup_Create("GrowSelection_Frig1BottomBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig1BottomBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig1CentreBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig1CentreBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig1FoundSomeSCs")
    KASSobGroup_Create("GrowSelection_Frig1L00kingForSCs")
    KASSobGroup_Create("GrowSelection_Frig1LeftBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig1LeftBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig1NearbyTargets")
    KASSobGroup_Create("GrowSelection_Frig1RightBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig1RightBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig1Targets")
    KASSobGroup_Create("GrowSelection_Frig1TopBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig1TopBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig1UnderAttack")
    KASSobGroup_Create("GrowSelection_Frig2BottomBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig2BottomBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig2CentreBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig2CentreBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig2FoundSomeSCs")
    KASSobGroup_Create("GrowSelection_Frig2L00kingForSCs")
    KASSobGroup_Create("GrowSelection_Frig2LeftBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig2LeftBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig2NearbyTargets")
    KASSobGroup_Create("GrowSelection_Frig2RightBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig2RightBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig2Targets")
    KASSobGroup_Create("GrowSelection_Frig2TopBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig2TopBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig2UnderAttack")
    KASSobGroup_Create("GrowSelection_Frig3BottomBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig3BottomBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig3CentreBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig3CentreBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig3FoundSomeSCs")
    KASSobGroup_Create("GrowSelection_Frig3L00kingForSCs")
    KASSobGroup_Create("GrowSelection_Frig3LeftBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig3LeftBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig3NearbyTargets")
    KASSobGroup_Create("GrowSelection_Frig3RightBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig3RightBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig3Targets")
    KASSobGroup_Create("GrowSelection_Frig3TopBoxFOUND")
    KASSobGroup_Create("GrowSelection_Frig3TopBoxTargets")
    KASSobGroup_Create("GrowSelection_Frig3UnderAttack")
    KASSobGroup_Create("GrowSelection_FrigNearbyTargets")
    KASSobGroup_Create("GrowSelection_FrigUnderAttack")
    KASSobGroup_Create("GrowSelection_FrigateVolCorvettes")
    KASSobGroup_Create("GrowSelection_FrigateVolFighters")
    KASSobGroup_Create("GrowSelection_FrigateVolFrigates")
    KASSobGroup_Create("GrowSelection_FrigateVolTOTAL")
    KASSobGroup_Create("GrowSelection_FrigatesUnderAttack")
    KASSobGroup_Create("GrowSelection_FrigatesVsFrigates")
    KASSobGroup_Create("GrowSelection_InterceptorMothership")
    KASSobGroup_Create("GrowSelection_InterceptorNearby")
    KASSobGroup_Create("GrowSelection_Mothership")
    KASSobGroup_Create("GrowSelection_MothershipVolTOTAL")
    KASSobGroup_Create("GrowSelection_NearbyCorvettes")
    KASSobGroup_Create("GrowSelection_NearbyFighters")
    KASSobGroup_Create("GrowSelection_NearbyFrigates")
    KASSobGroup_Create("GrowSelection_NonCombat")
    KASSobGroup_Create("GrowSelection_Null022092")
    KASSobGroup_Create("GrowSelection_Null8239823")
    KASSobGroup_Create("GrowSelection_Null91919191")
    KASSobGroup_Create("GrowSelection_NullFalkoIsCool")
    KASSobGroup_Create("GrowSelection_PlayerMothership")
    KASSobGroup_Create("GrowSelection_Resource")
    KASSobGroup_Create("GrowSelection_ResourceController")
    KASSobGroup_Create("GrowSelection_ResourceControllers")
    KASSobGroup_Create("GrowSelection_Sup1Targets")
    KASSobGroup_Create("GrowSelection_SupportFoundSomeSCs")
    KASSobGroup_Create("GrowSelection_SupportFrigateUnderAttack")
    KASSobGroup_Create("GrowSelection_SupportFrigateVsFrigates")
    KASSobGroup_Create("GrowSelection_SupportL00kingForSCs")
    KASSobGroup_CreateIfNotExist("Carrier")
    KASSobGroup_CreateIfNotExist("Collector")
    KASSobGroup_CreateIfNotExist("Collector2")
    KASSobGroup_CreateIfNotExist("Defenders1")
    KASSobGroup_CreateIfNotExist("Defenders2")
    KASSobGroup_CreateIfNotExist("Defenders3")
    KASSobGroup_CreateIfNotExist("Destroyers1")
    KASSobGroup_CreateIfNotExist("Destroyers2")
    KASSobGroup_CreateIfNotExist("FleetIntel")
    KASSobGroup_CreateIfNotExist("Frigates1")
    KASSobGroup_CreateIfNotExist("Frigates2")
    KASSobGroup_CreateIfNotExist("Frigates3")
    KASSobGroup_CreateIfNotExist("Interceptors1")
    KASSobGroup_CreateIfNotExist("Interceptors2")
    KASSobGroup_CreateIfNotExist("Kamikaze")
    KASSobGroup_CreateIfNotExist("Kamikaze2")
    KASSobGroup_CreateIfNotExist("Probes1")
    KASSobGroup_CreateIfNotExist("Probes2")
    KASSobGroup_CreateIfNotExist("Probes3")
    KASSobGroup_CreateIfNotExist("SupportFrigate")

    Sound_SpeechSubtitlePath("speech:missions/Mission05/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;Carrier;Collector;Collector2;Defenders1;Defenders2;Defenders3;Destroyers1;Destroyers2;FleetIntel;Frigates1;Frigates2;Frigates3;Interceptors1;Interceptors2;Kamikaze;Kamikaze2;Probes1;Probes2;Probes3;SupportFrigate;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourScheme("Carrier", 1)
    KAS_SetColourScheme("Collector", 1)
    KAS_SetColourScheme("Defenders1", 1)
    KAS_SetColourScheme("Defenders2", 1)
    KAS_SetColourScheme("Defenders3", 1)
    KAS_SetColourScheme("Destroyers1", 1)
    KAS_SetColourScheme("Frigates1", 1)
    KAS_SetColourScheme("Frigates2", 1)
    KAS_SetColourScheme("Frigates3", 1)
    KAS_SetColourScheme("Interceptors1", 1)
    KAS_SetColourScheme("Interceptors2", 1)
    KAS_SetColourScheme("Kamikaze", 1)
    KAS_SetColourScheme("Kamikaze2", 1)
    KAS_SetColourScheme("SupportFrigate", 1)
    Player_SetPlayerName(1, "$60525")
    Player_SetPlayerName(3, "$60525")

    singlePlayerOnStartOrLoad(05)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(05)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission05", "Watch_Mission05", "OnInit")
    Init_Mission05("Mission05")
    KAS_SetLetterboxStart(1, 5, 0, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A04_mission5", MUS_Ambient )
    KAS_SetFormation("Frigates1", "Broad")
    KAS_SetFormation("Frigates2", "Broad")
end

