--
--  Generated\Mission09.c
--
--  Finite state machine routines for "Mission09" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission09.kp by KAS2C Version 2.05
--


--#include "Generated\Mission09.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_AreTheyHere = 0
G_CLICK_DestroyUnknownVessel = 0
G_CLICK_InvestigateAnomoly = 0
G_CLICK_SalvageUnknownVessel = 0
G_FuckVariable = 0
G_FuckingStupid = 0
G_GetOuttaHere = 0
G_GiveMissileTech = 0
G_ItsAlive = 0
G_LetmGrav = 0
G_NoCaps = 0
G_NumberOfUsurpedShips = 0
G_PlayNislet = 0
SetMediumGuns = 0
_VIFONCE023 = 0
_VIFONCE024 = 0
_VIFONCE025 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.
--G_Nislet60Complete : see SinglePlayerFlow.lua, nReferences: 1

--Following are Team-Scoped variables: referenced differently than globals.
CouldbUsurpedSHIPS = {["GhostShip"] = 0}
PlayerChangedFocus = {["DummyTeam"] = 0}
PlayerChangedFocus2 = {["DummyTeam"] = 0}
WillbUsurpedSHIPS = {["GhostShip"] = 0}
_VIFONCE001 = {["Traders"] = 0}
_VIFONCE002 = {["Traders"] = 0}
_VIFONCE003 = {["DummyTeam"] = 0}
_VIFONCE004 = {["DummyTeam"] = 0}
_VIFONCE005 = {["DummyTeam"] = 0}
_VIFONCE006 = {["DummyTeam"] = 0}
_VIFONCE007 = {["DummyTeam"] = 0}
_VIFONCE008 = {["DummyTeam"] = 0}
_VIFONCE009 = {["DummyTeam"] = 0}
_VIFONCE010 = {["DummyTeam"] = 0}
_VIFONCE011 = {["DummyTeam"] = 0}
_VIFONCE012 = {["DummyTeam"] = 0}
_VIFONCE013 = {["DummyTeam"] = 0}
_VIFONCE014 = {["DummyTeam"] = 0}
_VIFONCE015 = {["DummyTeam"] = 0}
_VIFONCE016 = {["DummyTeam"] = 0}
_VIFONCE017 = {["GhostShip"] = 0}
_VIFONCE018 = {["GhostShip"] = 0}
_VIFONCE019 = {["CapturedFrigates"] = 0, ["CapturedIonArray"] = 0, ["CapturedMissileDestroyer"] = 0, ["CapturedMultiBeam"] = 0, ["UsurpTeam"] = 0}
_VIFONCE020 = {["CapturedFrigates"] = 0, ["CapturedIonArray"] = 0, ["CapturedMissileDestroyer"] = 0, ["CapturedMultiBeam"] = 0, ["UsurpTeam"] = 0}
_VIFONCE021 = {["CapturedFrigates"] = 0, ["CapturedIonArray"] = 0, ["CapturedMissileDestroyer"] = 0, ["CapturedMultiBeam"] = 0, ["UsurpTeam"] = 0}
_VIFONCE022 = {["CapturedFrigates"] = 0, ["CapturedIonArray"] = 0, ["CapturedMissileDestroyer"] = 0, ["CapturedMultiBeam"] = 0, ["UsurpTeam"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
AlienVesselWideScreen = {["DummyTeam"] = 3}
AttackTraders1Timer = {["Traders"] = 4}
DirectTimer = {["DummyTeam"] = 5}
FIGhost2Timer = {["DummyTeam"] = 6}
FIGhostPINGTimer = {["DummyTeam"] = 7}
FIOpenSensorsTimer = {["DummyTeam"] = 8}
FISeTimer = {["DummyTeam"] = 9}
FIYoureStupidOpenSensorsTimer = {["DummyTeam"] = 10}
FIYoureStupidPINGTimer = {["DummyTeam"] = 11}
FIYoureStupidSeTimer = {["DummyTeam"] = 12}
FuckTimer = {["DummyTeam"] = 13}
GoIntoSM = {["DummyTeam"] = 14}
MissileDestroyerWideScreen = {["DummyTeam"] = 15}
MissileTimer = {["CapturedFrigates"] = 16, ["CapturedIonArray"] = 17, ["CapturedMissileDestroyer"] = 18, ["CapturedMultiBeam"] = 19, ["UsurpTeam"] = 20}
StartTimer = {["DummyTeam"] = 21}
TimerTransOut = {["DummyTeam"] = 22}
WaitingForPurchase = {["Traders"] = 23}
WaitingToTalk = {["Traders"] = 24}
WellGetToYouSoon = {["CapturedFrigates"] = 25, ["CapturedIonArray"] = 26, ["CapturedMissileDestroyer"] = 27, ["CapturedMultiBeam"] = 28, ["UsurpTeam"] = 29}
WideScreenInBeforeNISLet = {["DummyTeam"] = 30}
YoureStupidTimerTransOut = {["DummyTeam"] = 31}


--kas timer names, with mappings to indices
TimerID_G_GoBackToPreviousFocus = 0
TimerID_G_StartUnLetterbox = 1
TimerID_G_WaitForLBXOutToFinish = 2


--KAS objective names, set by KASObjective_Add
ObjectiveID_DestroyUnknownVessel = 1
ObjectiveID_Hyperspace = 3
ObjectiveID_InvestigateAnomoly = 0
ObjectiveID_SalvageUnknownVessel = 2
ObjectiveID_Count = 4


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_ArrayPOINTER = 2
PointerID_DestroyerPOINTER = 3
PointerID_FrigPOINTER = 1
PointerID_GhostPOINTER = 0
PointerID_GhostUsurpingRangePOINTER = 4


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"09 - Sea of Lost Souls",
	"09 - La Mer des Ames Perdues",
	"09 - Meer der verlorenen Seelen",
	"09 - Mar de las almas perdidas",
	"09 - Il mare delle anime perdute", }
LSTRING_LocationCard = {  -- multilingual strings
	"Deep Space - Sea of Lost Souls",
	"Espace infini - La Mer des Ames Perdues",
	"Tiefer Weltraum – Meer der verlorenen Seelen",
	"Espacio profundo - Mar de las almas perdidas",
	"Spazio profondo - Il mare delle anime perdute", }
LSTRING_FleetIntelIntro = {  -- multilingual strings
	"Sensors detect a vessel here.  It doesn't match any of the profiles we have encountered.  Send in a team to investigate.",
	"Les instruments détectent un vaisseau à ces coordonnées. Aucune correspondance avec les profils rencontrés auparavant. Envoyez une équipe d'investigation.",
	"Die Sensoren haben hier ein Schiff entdeckt. Keines der uns bekannten Profile ist darauf anwendbar. Schicken Sie ein Team aus, um es zu untersuchen.",
	"Los sensores detectan una nave. No encaja con ninguno de los perfiles conocidos. Envíen un equipo de investigación.",
	"I sensori rilevano una nave, di origine sconosciuta. Invia una squadra per investigare.", }
LSTRING_Objective1 = {  -- multilingual strings
	"Investigate Anomaly",
	"Analyse de l'anomalie.",
	"Anomalie untersuchen.",
	"Investigar anomalía",
	"Investiga l'anomalia", }
LSTRING_Objective2 = {  -- multilingual strings
	"Destroy Alien Vessel",
	"Destruction vaisseau inconnu.",
	"Unbekanntes Schiff zerstören.",
	"Destruir nave desconocida",
	"Distruggi l'astronave sconosciuta", }
LSTRING_Objective3 = {  -- multilingual strings
	"Salvage the Unknown Vessel",
	"Récupération vaisseau inconnu.",
	"Untersuchen Sie das Geisterschiff.",
	"Salvar la nave desconocida",
	"Salva l'astronave sconosciuta", }
LSTRING_TraderIntro = {  -- multilingual strings
	"Welcome, traveller.  We have something you may be interested in.",
	"Bienvenue, voyageur. On a quelque chose qui pourrait t'intéresser.",
	"Willkommen, Reisender. Wir haben etwas, das euch interessieren könnte.",
	"Bienvenido, viajero. Tenemos algo que puede interesarte.",
	"Benvenuto, viaggiatore. Abbiamo qualcosa che potrebbe interessarti.", }
LSTRING_TraderPurchaseMade = {  -- multilingual strings
	"Thank you.  Enjoy your purchase.",
	"Merci. Profitez bien de votre acquisition.",
	"Besten Dank. Erfreut euch an eurem Kauf.",
	"Gracias. Que disfrutes de tu compra.",
	"Grazie. Speriamo che ti torni utile.", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                HYPERSPACE",
	"                HYPERESPACE",
	"        HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission09 Traders FSM
--
function Init_Mission09_Traders(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_SetTraderDisabled(0)    --kasfSetTraderDisabled(0)
	KAS_SetTradeString(0, "$61456")    --kasfSetTraderDialog(0, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(1, "$61456")    --kasfSetTraderDialog(1, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(2, "$61456")    --kasfSetTraderDialog(2, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(3, "$61456")    --kasfSetTraderDialog(3, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(4, "$61457")    --kasfSetTraderDialog(4, LSTRING_TraderPurchaseMade[strCurLanguage])
	KAS_SetTradeString(5, "$61457")    --kasfSetTraderDialog(5, LSTRING_TraderPurchaseMade[strCurLanguage])
	KAS_TeamAttributesSet(TeamName, 256)    --kasfTeamAttributesSet(256)
	--kasJump("Talking")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Talking", "Init_Mission09_Traders")
	Init_Mission09_Traders_Talking(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 Traders FSM
--
function Watch_Mission09_Traders(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_UnderAttack(TeamName, "GrowSelection_FuckingStupid")    --kasfUnderAttack(kasGrowSelectionPtr("FuckingStupid"))
	if ((SobGroup_Count("GrowSelection_FuckingStupid") > 0) and (G_FuckingStupid == 0)) then     --kasfShipsCount(kasGrowSelectionPtr("FuckingStupid"))
	
	G_FuckingStupid = 1 --created,set
	KASTimer_Start(AttackTraders1Timer[TeamName], 12)
	--kasJump("Attack1")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Attack1", "Watch_Mission09_Traders")
	Init_Mission09_Traders_Attack1(TeamName)
	return
	end 
	if (KAS_TeamHealth(TeamName) < 40) then     --kasfTeamHealthAverage()
	
	SobGroup_SetHealth(TeamName, 100 / 100)    --kasfTeamSetPercentDamaged(100)
	end 
	
end 


--
--  "initialize" code for Mission09 Traders Attack1 state
--
function Init_Mission09_Traders_Attack1(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	
end 


--
--  "watch" code for Mission09 Traders Attack1 state
--
function Watch_Mission09_Traders_Attack1(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if ((KASTimer_IsExpiredIfSoDestroy(AttackTraders1Timer[TeamName]) ~= 0) and (KAS_UnderAttack(TeamName, "GrowSelection_FuckingStupid") > 0)) then     --kasfUnderAttack(kasGrowSelectionPtr("FuckingStupid"))
	
	--kasJump("Attack2")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Attack1")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Attack2", "Watch_Mission09_Traders_Attack1")
	Init_Mission09_Traders_Attack2(TeamName)
	return
	elseif ((KASTimer_IsExpiredIfSoDestroy(AttackTraders1Timer[TeamName]) ~= 0) and (KAS_UnderAttack(TeamName, "GrowSelection_FuckingStupid") < 1)) then     --kasfUnderAttack(kasGrowSelectionPtr("FuckingStupid"))
	
	G_FuckingStupid = 0 --destroyed
	G_AreTheyHere = 1 --set
	--kasJump("Talking")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Attack1")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Talking", "Watch_Mission09_Traders_Attack1")
	Init_Mission09_Traders_Talking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders Attack2 state
--
function Init_Mission09_Traders_Attack2(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_MessageSendToAll(TeamName, "FuckingStupid")    --kasfMsgSendAll("FuckingStupid")
	
end 


--
--  "watch" code for Mission09 Traders Attack2 state
--
function Watch_Mission09_Traders_Attack2(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_DeadPlayerShips", 450000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("DeadPlayerShips"), 1000000)
	SobGroup_FillSubtract("GrowSelection_DeadPlayerShips", "GrowSelection_DeadPlayerShips", "GrowSelection_PlayerMothership")    --kasfShipsRemove(kasGrowSelectionPtr("DeadPlayerShips"), kasGrowSelectionPtr("PlayerMothership"))
	if (SobGroup_Count("GrowSelection_DeadPlayerShips") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DeadPlayerShips"))
	
	KAS_Attack(TeamName, "GrowSelection_DeadPlayerShips")    --kasfAttack(kasGrowSelectionPtr("DeadPlayerShips"))
	elseif (SobGroup_Count("GrowSelection_DeadPlayerShips") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("DeadPlayerShips"))
	
	--kasJump("OuttaHere")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Attack2")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_OuttaHere", "Watch_Mission09_Traders_Attack2")
	Init_Mission09_Traders_OuttaHere(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders Talking state
--
function Init_Mission09_Traders_Talking(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60599", 3)    --kasfSpeechEvent((599 + 8192 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 Traders Talking state
--
function Watch_Mission09_Traders_Talking(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("TalkingMore")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Talking")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_TalkingMore", "Watch_Mission09_Traders_Talking")
	Init_Mission09_Traders_TalkingMore(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders TalkingMore state
--
function Init_Mission09_Traders_TalkingMore(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60600", 3)    --kasfSpeechEvent((600 + 8192 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 Traders TalkingMore state
--
function Watch_Mission09_Traders_TalkingMore(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Trading")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_TalkingMore")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Trading", "Watch_Mission09_Traders_TalkingMore")
	Init_Mission09_Traders_Trading(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders Trading state
--
function Init_Mission09_Traders_Trading(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_EnableTradeGUI()    --kasfEnableTraderGUI()
	KAS_SetTradeCost("SuperHeavyChassis", 0)    --kasfSetBaseTechnologyCost("RepairTech", 0)
	KAS_AllowToPurchase("SuperHeavyChassis")    --kasfAllowPlayerToPurchase("RepairTech")
	KAS_SetTradeString(0, "$61456")    --kasfSetTraderDialog(0, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(1, "$61456")    --kasfSetTraderDialog(1, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(2, "$61456")    --kasfSetTraderDialog(2, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(3, "$61456")    --kasfSetTraderDialog(3, LSTRING_TraderIntro[strCurLanguage])
	KAS_SetTradeString(4, "$61457")    --kasfSetTraderDialog(4, LSTRING_TraderPurchaseMade[strCurLanguage])
	KAS_SetTradeString(5, "$61457")    --kasfSetTraderDialog(5, LSTRING_TraderPurchaseMade[strCurLanguage])
	KASTimer_Start(WaitingForPurchase[TeamName], 60)
	
end 


--
--  "watch" code for Mission09 Traders Trading state
--
function Watch_Mission09_Traders_Trading(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (_VIFONCE001[TeamName] == 0 and (((KASTimer_IsExpiredIfSoDestroy(WaitingForPurchase[TeamName]) ~= 0) or (KAS_PlayerHasResearch(0, "SuperHeavyChassis") ~= 0)) and (KAS_IsTradeGUIActive() ~= 1))) then  -- "ifonce" #1    --kasfDoesPlayerHave("RepairTech")    --kasfTraderGUIActive()
	
	_VIFONCE001[TeamName] = 1 --created,set;
    KAS_GrantResearchOption(0, "SuperHeavyChassis")    --kasfPlayerAcquiredTechnology("RepairTech")
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60601", 3)    --kasfSpeechEvent((601 + 8192 + 268435456), 0)
	KASTimer_Start(WaitingToTalk[TeamName], 6)
	end 
	if (_VIFONCE002[TeamName] == 0 and (KASTimer_IsExpired(WaitingToTalk[TeamName]) ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	--kasJump("BlahBlah")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Trading")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_BlahBlah", "Watch_Mission09_Traders_Trading")
	Init_Mission09_Traders_BlahBlah(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders BlahBlah state
--
function Init_Mission09_Traders_BlahBlah(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60602", 3)    --kasfSpeechEvent((602 + 2048 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60603", 3)    --kasfSpeechEvent((603 + 2048 + 268435456), 0)
	end 
	
end 


--
--  "watch" code for Mission09 Traders BlahBlah state
--
function Watch_Mission09_Traders_BlahBlah(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Utalk2Much")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_BlahBlah")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_Utalk2Much", "Watch_Mission09_Traders_BlahBlah")
	Init_Mission09_Traders_Utalk2Much(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders Utalk2Much state
--
function Init_Mission09_Traders_Utalk2Much(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60604", 3)    --kasfSpeechEvent((604 + 8192 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60605", 3)    --kasfSpeechEvent((605 + 8192 + 268435456), 0)
	end 
	
end 


--
--  "watch" code for Mission09 Traders Utalk2Much state
--
function Watch_Mission09_Traders_Utalk2Much(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("OuttaHere")
	--KASRule_Remove("FSM_Mission09_Traders", "Watch_Mission09_Traders_Utalk2Much")
	KASRule_Add(TeamName, "Watch_Mission09_Traders_OuttaHere", "Watch_Mission09_Traders_Utalk2Much")
	Init_Mission09_Traders_OuttaHere(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 Traders OuttaHere state
--
function Init_Mission09_Traders_OuttaHere(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	KAS_MusicStop(4)    --kasfMusicStop(4)
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	KAS_MessageSendToAll(TeamName, "SeeYa")    --kasfMsgSendAll("SeeYa")
	
end 


--
--  "watch" code for Mission09 Traders OuttaHere state
--
function Watch_Mission09_Traders_OuttaHere(TeamName)
	--FSM: FSM_Mission09_Traders
	--TeamName = Traders
	
end 


--
--  "initialize" code for Mission09 MissionFlow FSM
--
function Init_Mission09_MissionFlow(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	G_AreTheyHere = 0 --created,set
	KASTimer_Start(StartTimer[TeamName], 5)
	
end 


--
--  "watch" code for Mission09 MissionFlow FSM
--
function Watch_Mission09_MissionFlow(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if ((G_FuckingStupid == 1) and (G_AreTheyHere < 2)) then 
	
	G_AreTheyHere = G_AreTheyHere + 1
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(StartTimer[TeamName]) ~= 0) then 
	
	--kasJump("GhostIntro")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_GhostIntro", "Watch_Mission09_MissionFlow")
	Init_Mission09_MissionFlow_GhostIntro(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow GhostIntro state
--
function Init_Mission09_MissionFlow_GhostIntro(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60587", 3)    --kasfSpeechEvent((587 + 2048 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow GhostIntro state
--
function Watch_Mission09_MissionFlow_GhostIntro(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("GhostTransIn")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_GhostIntro")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_GhostTransIn", "Watch_Mission09_MissionFlow_GhostIntro")
	Init_Mission09_MissionFlow_GhostTransIn(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow GhostTransIn state
--
function Init_Mission09_MissionFlow_GhostTransIn(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(GoIntoSM[TeamName], 4)
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	
end 


--
--  "watch" code for Mission09 MissionFlow GhostTransIn state
--
function Watch_Mission09_MissionFlow_GhostTransIn(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(GoIntoSM[TeamName]) ~= 0) then 
	
	--kasJump("GhostOpenSensors")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_GhostTransIn")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_GhostOpenSensors", "Watch_Mission09_MissionFlow_GhostTransIn")
	Init_Mission09_MissionFlow_GhostOpenSensors(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow GhostOpenSensors state
--
function Init_Mission09_MissionFlow_GhostOpenSensors(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow GhostOpenSensors state
--
function Watch_Mission09_MissionFlow_GhostOpenSensors(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIGhost")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_GhostOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIGhost", "Watch_Mission09_MissionFlow_GhostOpenSensors")
	Init_Mission09_MissionFlow_FIGhost(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIGhost state
--
function Init_Mission09_MissionFlow_FIGhost(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60588", 3)    --kasfSpeechEvent((588 + 4096 + 268435456), 0)
	KASTimer_Start(FISeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIGhost state
--
function Watch_Mission09_MissionFlow_FIGhost(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FISeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIGhostPING")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIGhost")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIGhostPING", "Watch_Mission09_MissionFlow_FIGhost")
	Init_Mission09_MissionFlow_FIGhostPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIGhostPING state
--
function Init_Mission09_MissionFlow_FIGhostPING(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_PingAddShips("GhostShip", "Ghostship", "$60607")    --kasfPingAddShips(kasAITeamShipsPtr("GhostShip"), "Ghostship")
	KASTimer_Start(FIGhostPINGTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIGhostPING state
--
function Watch_Mission09_MissionFlow_FIGhostPING(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIGhostPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIGhostPointer")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIGhostPING")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIGhostPointer", "Watch_Mission09_MissionFlow_FIGhostPING")
	Init_Mission09_MissionFlow_FIGhostPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIGhostPointer state
--
function Init_Mission09_MissionFlow_FIGhostPointer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_GhostPOINTER = KASPointer_AddShip("GhostShip")    --kasfTutSetPointerTargetShip("GhostPOINTER", kasAITeamShipsPtr("GhostShip"))
	KASTimer_Start(FIGhostPINGTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIGhostPointer state
--
function Watch_Mission09_MissionFlow_FIGhostPointer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIGhost2")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIGhostPointer")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIGhost2", "Watch_Mission09_MissionFlow_FIGhostPointer")
	Init_Mission09_MissionFlow_FIGhost2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIGhost2 state
--
function Init_Mission09_MissionFlow_FIGhost2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60589", 3)    --kasfSpeechEvent((589 + 4096 + 268435456), 0)
	KASTimer_Start(FIGhost2Timer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIGhost2 state
--
function Watch_Mission09_MissionFlow_FIGhost2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIGhost2Timer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FIGhostPointer2")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIGhost2")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIGhostPointer2", "Watch_Mission09_MissionFlow_FIGhost2")
	Init_Mission09_MissionFlow_FIGhostPointer2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIGhostPointer2 state
--
function Init_Mission09_MissionFlow_FIGhostPointer2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_FrigPOINTER = KASPointer_AddShip("CapturedFrigates")    --kasfTutSetPointerTargetShip("FrigPOINTER", kasAITeamShipsPtr("CapturedFrigates"))
	PointerID_ArrayPOINTER = KASPointer_AddShip("CapturedIonArray")    --kasfTutSetPointerTargetShip("ArrayPOINTER", kasAITeamShipsPtr("CapturedIonArray"))
	PointerID_DestroyerPOINTER = KASPointer_AddShip("CapturedMissileDestroyer")    --kasfTutSetPointerTargetShip("DestroyerPOINTER", kasAITeamShipsPtr("CapturedMissileDestroyer"))
	KASObjective_Add(ObjectiveID_InvestigateAnomoly, "$61453", OT_Primary)    --kasfObjectiveCreate("InvestigateAnomoly", LSTRING_Objective1[strCurLanguage], LSTRING_FleetIntelIntro[strCurLanguage])
	Objective_SetDescription(ObjectiveID_InvestigateAnomoly, "$60830")
	
end 


--
--  "watch" code for Mission09 MissionFlow FIGhostPointer2 state
--
function Watch_Mission09_MissionFlow_FIGhostPointer2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("GhostTransOut")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIGhostPointer2")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_GhostTransOut", "Watch_Mission09_MissionFlow_FIGhostPointer2")
	Init_Mission09_MissionFlow_GhostTransOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow GhostTransOut state
--
function Init_Mission09_MissionFlow_GhostTransOut(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(TimerTransOut[TeamName], 1)
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	
end 


--
--  "watch" code for Mission09 MissionFlow GhostTransOut state
--
function Watch_Mission09_MissionFlow_GhostTransOut(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_GhostTransOut")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_AlmostDone", "Watch_Mission09_MissionFlow_GhostTransOut")
	Init_Mission09_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIYoureStupidTransIn state
--
function Init_Mission09_MissionFlow_FIYoureStupidTransIn(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("YoureStupidOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_YoureStupidOpenSensors", "Init_Mission09_MissionFlow_FIYoureStupidTransIn")
	Init_Mission09_MissionFlow_YoureStupidOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 MissionFlow FIYoureStupidTransIn state
--
function Watch_Mission09_MissionFlow_FIYoureStupidTransIn(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission09 MissionFlow YoureStupidOpenSensors state
--
function Init_Mission09_MissionFlow_YoureStupidOpenSensors(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FIYoureStupidOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow YoureStupidOpenSensors state
--
function Watch_Mission09_MissionFlow_YoureStupidOpenSensors(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIYoureStupidOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIYoureStupid")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_YoureStupidOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIYoureStupid", "Watch_Mission09_MissionFlow_YoureStupidOpenSensors")
	Init_Mission09_MissionFlow_FIYoureStupid(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIYoureStupid state
--
function Init_Mission09_MissionFlow_FIYoureStupid(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60592", 3)    --kasfSpeechEvent((592 + 4096 + 268435456), 0)
	KASTimer_Start(FIYoureStupidSeTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIYoureStupid state
--
function Watch_Mission09_MissionFlow_FIYoureStupid(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIYoureStupid")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_AlmostDone", "Watch_Mission09_MissionFlow_FIYoureStupid")
	Init_Mission09_MissionFlow_AlmostDone(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIYoureStupidSeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIYoureStupidPointer")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIYoureStupid")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIYoureStupidPointer", "Watch_Mission09_MissionFlow_FIYoureStupid")
	Init_Mission09_MissionFlow_FIYoureStupidPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIYoureStupidPointer state
--
function Init_Mission09_MissionFlow_FIYoureStupidPointer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_GhostUsurpingRangePOINTER = KASPointer_AddVolume("GhostUsurpingRange")    --kasfTutSetPointerTargetAIVolume("GhostUsurpingRangePOINTER", kasVolumePtr("GhostUsurpingRange"))
	KASTimer_Start(FIYoureStupidPINGTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIYoureStupidPointer state
--
function Watch_Mission09_MissionFlow_FIYoureStupidPointer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIYoureStupidPointer")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_AlmostDone", "Watch_Mission09_MissionFlow_FIYoureStupidPointer")
	Init_Mission09_MissionFlow_AlmostDone(TeamName)
	return
	end 
	if (KASTimer_IsExpiredIfSoDestroy(FIYoureStupidPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("YoureStupidTransOut")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIYoureStupidPointer")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_YoureStupidTransOut", "Watch_Mission09_MissionFlow_FIYoureStupidPointer")
	Init_Mission09_MissionFlow_YoureStupidTransOut(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow YoureStupidTransOut state
--
function Init_Mission09_MissionFlow_YoureStupidTransOut(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	KASTimer_Start(YoureStupidTimerTransOut[TeamName], 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow YoureStupidTransOut state
--
function Watch_Mission09_MissionFlow_YoureStupidTransOut(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(YoureStupidTimerTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_YoureStupidTransOut")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_AlmostDone", "Watch_Mission09_MissionFlow_YoureStupidTransOut")
	Init_Mission09_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIDangerWillRobinson state
--
function Init_Mission09_MissionFlow_FIDangerWillRobinson(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(AlienVesselWideScreen[TeamName], 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIDangerWillRobinson state
--
function Watch_Mission09_MissionFlow_FIDangerWillRobinson(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(AlienVesselWideScreen[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("GhostShip")    --kasfTutCameraFocus(kasAITeamShipsPtr("GhostShip"))
	KAS_FocusShips("GhostShip")    --kasfTutCameraFocus(kasAITeamShipsPtr("GhostShip"))
	--kasJump("FIDangerWillRobinson2")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIDangerWillRobinson")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIDangerWillRobinson2", "Watch_Mission09_MissionFlow_FIDangerWillRobinson")
	Init_Mission09_MissionFlow_FIDangerWillRobinson2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIDangerWillRobinson2 state
--
function Init_Mission09_MissionFlow_FIDangerWillRobinson2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60590", 3)    --kasfSpeechEvent((590 + 4096 + 268435456), 0)
	if (_VIFONCE003[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	KASObjective_Add(ObjectiveID_DestroyUnknownVessel, "$61454", OT_Primary)    --kasfObjectiveCreate("DestroyUnknownVessel", LSTRING_Objective2[strCurLanguage], LSTRING_Objective2[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyUnknownVessel, "$60831")
	KASObjective_SetState(ObjectiveID_InvestigateAnomoly, 1)    --kasfObjectiveSet("InvestigateAnomoly", 1)
	end 
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	
end 


--
--  "watch" code for Mission09 MissionFlow FIDangerWillRobinson2 state
--
function Watch_Mission09_MissionFlow_FIDangerWillRobinson2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIDangerWillRobinson3")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIDangerWillRobinson2")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIDangerWillRobinson3", "Watch_Mission09_MissionFlow_FIDangerWillRobinson2")
	Init_Mission09_MissionFlow_FIDangerWillRobinson3(TeamName)
	return
	end 
	if (KAS_GameMessageReceived({"Game_BandBoxFocus", "Game_ClickFocus", "KB_CancelFocus", "KB_Focus", "KB_Sensors", "TB_SensorsManager"}) ~= 0) then     --kasfTutGameSentMessage("Game_BandBoxFocus,Game_ClickFocus,KB_CancelFocus,KB_Focus,KB_Sensors,TB_SensorsManager")
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIDangerWillRobinson3 state
--
function Init_Mission09_MissionFlow_FIDangerWillRobinson3(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(TimerID_G_GoBackToPreviousFocus, 1)
	KASTimer_Start(TimerID_G_StartUnLetterbox, 2)
	KASTimer_Start(TimerID_G_WaitForLBXOutToFinish, 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIDangerWillRobinson3 state
--
function Watch_Mission09_MissionFlow_FIDangerWillRobinson3(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_GoBackToPreviousFocus) ~= 0) then 
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_StartUnLetterbox) ~= 0) then 
	
	if (PlayerChangedFocus[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus[TeamName] = 1 --created,set
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_WaitForLBXOutToFinish) ~= 0) then 
	
	PlayerChangedFocus[TeamName] = 0 --destroyed
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIDangerWillRobinson3")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_FIDangerWillRobinson3")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIControlField state
--
function Init_Mission09_MissionFlow_FIControlField(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60591", 3)    --kasfSpeechEvent((591 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIControlField state
--
function Watch_Mission09_MissionFlow_FIControlField(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIControlField")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_FIControlField")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIMajorFluctuations state
--
function Init_Mission09_MissionFlow_FIMajorFluctuations(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60593", 3)    --kasfSpeechEvent((593 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIMajorFluctuations state
--
function Watch_Mission09_MissionFlow_FIMajorFluctuations(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE004[TeamName] == 0 and (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0)) then  -- "ifonce" #4    --kasfIntelEventEnded()
	
	_VIFONCE004[TeamName] = 1 --created,set;
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60594", 3)    --kasfSpeechEvent((594 + 4096 + 268435456), 0)
	KASTimer_Start(DirectTimer[TeamName], 4)
	end 
	if (KASTimer_IsExpiredIfSoDestroy(DirectTimer[TeamName]) ~= 0) then 
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIMajorFluctuations")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_FIMajorFluctuations")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIFieldReleased state
--
function Init_Mission09_MissionFlow_FIFieldReleased(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (G_NumberOfUsurpedShips < 1) then 
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60777", 3)    --kasfSpeechEvent((777 + 4096 + 268435456), 0)
	else
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60596", 3)    --kasfSpeechEvent((596 + 4096 + 268435456), 0)
	end 
	KASObjective_SetState(ObjectiveID_DestroyUnknownVessel, 1)    --kasfObjectiveSet("DestroyUnknownVessel", 1)
	KAS_PingRemove("Ghostship", "Ghostship")    --kasfPingRemove("Ghostship")
	
end 


--
--  "watch" code for Mission09 MissionFlow FIFieldReleased state
--
function Watch_Mission09_MissionFlow_FIFieldReleased(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIWeGetShips")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIFieldReleased")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIWeGetShips", "Watch_Mission09_MissionFlow_FIFieldReleased")
	Init_Mission09_MissionFlow_FIWeGetShips(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIWeGetShips state
--
function Init_Mission09_MissionFlow_FIWeGetShips(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (G_FuckVariable == 1) then 
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60775", 3)    --kasfSpeechEvent((775 + 4096 + 268435456), 0)
	else
	
	--kasJump("FISendACrew")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FISendACrew", "Init_Mission09_MissionFlow_FIWeGetShips")
	Init_Mission09_MissionFlow_FISendACrew(TeamName)
	return
	end 
	
end 


--
--  "watch" code for Mission09 MissionFlow FIWeGetShips state
--
function Watch_Mission09_MissionFlow_FIWeGetShips(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FISendACrew")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIWeGetShips")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FISendACrew", "Watch_Mission09_MissionFlow_FIWeGetShips")
	Init_Mission09_MissionFlow_FISendACrew(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FISendACrew state
--
function Init_Mission09_MissionFlow_FISendACrew(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60776", 3)    --kasfSpeechEvent((776 + 4096 + 268435456), 0)
	KASObjective_Add(ObjectiveID_SalvageUnknownVessel, "$61455", OT_Primary)    --kasfObjectiveCreate("SalvageUnknownVessel", LSTRING_Objective3[strCurLanguage], LSTRING_Objective3[strCurLanguage])
	Objective_SetDescription(ObjectiveID_SalvageUnknownVessel, "$60832")
	KASTimer_Start(FuckTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow FISendACrew state
--
function Watch_Mission09_MissionFlow_FISendACrew(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then 
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FISendACrew")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_FISendACrew")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FIitsOld state
--
function Init_Mission09_MissionFlow_FIitsOld(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60778", 3)    --kasfSpeechEvent((778 + 4096 + 268435456), 0)
	KASObjective_SetState(ObjectiveID_SalvageUnknownVessel, 1)    --kasfObjectiveSet("SalvageUnknownVessel", 1)
	
end 


--
--  "watch" code for Mission09 MissionFlow FIitsOld state
--
function Watch_Mission09_MissionFlow_FIitsOld(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("WarpGrav")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FIitsOld")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_WarpGrav", "Watch_Mission09_MissionFlow_FIitsOld")
	Init_Mission09_MissionFlow_WarpGrav(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow WarpGrav state
--
function Init_Mission09_MissionFlow_WarpGrav(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60598", 3)    --kasfSpeechEvent((598 + 4096 + 268435456), 0)
	G_LetmGrav = 1 --created,set
	KASTimer_Start(FuckTimer[TeamName], 6)
	
end 


--
--  "watch" code for Mission09 MissionFlow WarpGrav state
--
function Watch_Mission09_MissionFlow_WarpGrav(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_WarpGrav")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_WarpGrav")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow NISletIng state
--
function Init_Mission09_MissionFlow_NISletIng(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(WideScreenInBeforeNISLet[TeamName], 4)
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	
end 


--
--  "watch" code for Mission09 MissionFlow NISletIng state
--
function Watch_Mission09_MissionFlow_NISletIng(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE005[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(WideScreenInBeforeNISLet[TeamName]) ~= 0)) then  -- "ifonce" #5
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("NISletIng2")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_NISletIng")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_NISletIng2", "Watch_Mission09_MissionFlow_NISletIng")
	Init_Mission09_MissionFlow_NISletIng2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow NISletIng2 state
--
function Init_Mission09_MissionFlow_NISletIng2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	G_PlayNislet = 60 --created,set
	
end 


--
--  "watch" code for Mission09 MissionFlow NISletIng2 state
--
function Watch_Mission09_MissionFlow_NISletIng2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE006[TeamName] == 0 and (G_Nislet60Complete == 1)) then  -- "ifonce" #6
	
	_VIFONCE006[TeamName] = 1 --created,set;
	--kasFSMCreate("Traders")
	KASRule_AddFSM("Traders", "Watch_Mission09_Traders", "Watch_Mission09_MissionFlow_NISletIng2")
	Init_Mission09_Traders("Traders")
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_NISletIng2")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_NISletIng2")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow BuildMissileDestroyer state
--
function Init_Mission09_MissionFlow_BuildMissileDestroyer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(MissileDestroyerWideScreen[TeamName], 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow BuildMissileDestroyer state
--
function Watch_Mission09_MissionFlow_BuildMissileDestroyer(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(MissileDestroyerWideScreen[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("GrowSelection_PlayerMslDestroyer")    --kasfTutCameraFocus(kasGrowSelectionPtr("PlayerMslDestroyer"))
	KAS_FocusShips("GrowSelection_PlayerMslDestroyer")    --kasfTutCameraFocus(kasGrowSelectionPtr("PlayerMslDestroyer"))
	--kasJump("BuildMissileDestroyer2")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_BuildMissileDestroyer")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_BuildMissileDestroyer2", "Watch_Mission09_MissionFlow_BuildMissileDestroyer")
	Init_Mission09_MissionFlow_BuildMissileDestroyer2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow BuildMissileDestroyer2 state
--
function Init_Mission09_MissionFlow_BuildMissileDestroyer2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60595", 3)    --kasfSpeechEvent((595 + 4096 + 268435456), 0)
	KAS_ResetGameMessageQueue()    --kasfTutResetGameMessageQueue()
	
end 


--
--  "watch" code for Mission09 MissionFlow BuildMissileDestroyer2 state
--
function Watch_Mission09_MissionFlow_BuildMissileDestroyer2(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("BuildMissileDestroyer3")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_BuildMissileDestroyer2")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_BuildMissileDestroyer3", "Watch_Mission09_MissionFlow_BuildMissileDestroyer2")
	Init_Mission09_MissionFlow_BuildMissileDestroyer3(TeamName)
	return
	end 
	if (KAS_GameMessageReceived({"Game_BandBoxFocus", "Game_ClickFocus", "KB_CancelFocus", "KB_Focus", "KB_Sensors", "TB_SensorsManager"}) ~= 0) then     --kasfTutGameSentMessage("Game_BandBoxFocus,Game_ClickFocus,KB_CancelFocus,KB_Focus,KB_Sensors,TB_SensorsManager")
	
	if (PlayerChangedFocus2[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus2[TeamName] = 1 --created,set
	end 
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow BuildMissileDestroyer3 state
--
function Init_Mission09_MissionFlow_BuildMissileDestroyer3(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(TimerID_G_GoBackToPreviousFocus, 1)
	KASTimer_Start(TimerID_G_StartUnLetterbox, 2)
	KASTimer_Start(TimerID_G_WaitForLBXOutToFinish, 4)
	
end 


--
--  "watch" code for Mission09 MissionFlow BuildMissileDestroyer3 state
--
function Watch_Mission09_MissionFlow_BuildMissileDestroyer3(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_GoBackToPreviousFocus) ~= 0) then 
	
	if (PlayerChangedFocus2[TeamName] == 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_StartUnLetterbox) ~= 0) then 
	
	if (PlayerChangedFocus2[TeamName] == 0) then 
	
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	PlayerChangedFocus2[TeamName] = 1 --created,set
	end 
	end 
	if (KASTimer_IsExpiredIfSoDestroy(TimerID_G_WaitForLBXOutToFinish) ~= 0) then 
	
	PlayerChangedFocus2[TeamName] = 0 --destroyed
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_BuildMissileDestroyer3")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_BuildMissileDestroyer3")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow FirstWarning state
--
function Init_Mission09_MissionFlow_FirstWarning(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60494", 3)    --kasfSpeechEvent((494 + 8192 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow FirstWarning state
--
function Watch_Mission09_MissionFlow_FirstWarning(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("RUCrazy")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_FirstWarning")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_RUCrazy", "Watch_Mission09_MissionFlow_FirstWarning")
	Init_Mission09_MissionFlow_RUCrazy(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow RUCrazy state
--
function Init_Mission09_MissionFlow_RUCrazy(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60495", 3)    --kasfSpeechEvent((495 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow RUCrazy state
--
function Watch_Mission09_MissionFlow_RUCrazy(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_RUCrazy")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_RUCrazy")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow YoureMeat state
--
function Init_Mission09_MissionFlow_YoureMeat(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_BentusiTraders, "$60496", 3)    --kasfSpeechEvent((496 + 8192 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow YoureMeat state
--
function Watch_Mission09_MissionFlow_YoureMeat(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_YoureMeat")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Watch_Mission09_MissionFlow_YoureMeat")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow AlmostDone state
--
function Init_Mission09_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	--kasJump("Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_Done", "Init_Mission09_MissionFlow_AlmostDone")
	Init_Mission09_MissionFlow_Done(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 MissionFlow AlmostDone state
--
function Watch_Mission09_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission09 MissionFlow Done state
--
function Init_Mission09_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	G_CLICK_InvestigateAnomoly = 0 --destroyed
	G_CLICK_DestroyUnknownVessel = 0 --destroyed
	G_CLICK_SalvageUnknownVessel = 0 --destroyed
	
end 


--
--  "watch" code for Mission09 MissionFlow Done state
--
function Watch_Mission09_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE007[TeamName] == 0 and (KAS_MessageReceived(TeamName, "WereAttacking") ~= 0)) then  -- "ifonce" #7    --kasfMsgReceived("WereAttacking")
	
	_VIFONCE007[TeamName] = 1 --created,set;
	--kasJump("FIDangerWillRobinson")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIDangerWillRobinson", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIDangerWillRobinson(TeamName)
	return
	end 
	if (_VIFONCE008[TeamName] == 0 and (KAS_MessageReceived(TeamName, "FirstShipUsurped") ~= 0)) then  -- "ifonce" #8    --kasfMsgReceived("FirstShipUsurped")
	
	_VIFONCE008[TeamName] = 1 --created,set;
	--kasJump("FIControlField")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIControlField", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIControlField(TeamName)
	return
	end 
	if (_VIFONCE009[TeamName] == 0 and (G_NumberOfUsurpedShips > 2)) then  -- "ifonce" #9
	
	_VIFONCE009[TeamName] = 1 --created,set;
	--kasJump("FIYoureStupidTransIn")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIYoureStupidTransIn", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIYoureStupidTransIn(TeamName)
	return
	end 
	if (_VIFONCE010[TeamName] == 0 and (G_GiveMissileTech == 1)) then  -- "ifonce" #10
	
	_VIFONCE010[TeamName] = 1 --created,set;
	KAS_FindPlayerShipsOfType("GrowSelection_PlayerMslDestroyer", "MissileDestroyer", 0)    --kasfFindEnemyShipsOfType(kasGrowSelectionPtr("PlayerMslDestroyer"), "MissileDestroyer")
	if (SobGroup_Count("GrowSelection_PlayerMslDestroyer") == 1) then     --kasfShipsCount(kasGrowSelectionPtr("PlayerMslDestroyer"))
	
	--kasJump("BuildMissileDestroyer")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_BuildMissileDestroyer", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_BuildMissileDestroyer(TeamName)
	return
	end 
	end 
	if (_VIFONCE011[TeamName] == 0 and (KAS_MessageReceived(TeamName, "_10PercentDamagetaken") ~= 0)) then  -- "ifonce" #11    --kasfMsgReceived("10%Damagetaken")
	
	_VIFONCE011[TeamName] = 1 --created,set;
	--kasJump("FIMajorFluctuations")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIMajorFluctuations", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIMajorFluctuations(TeamName)
	return
	end 
	if (_VIFONCE012[TeamName] == 0 and (KAS_MessageReceived(TeamName, "_20PercentDamagetaken") ~= 0)) then  -- "ifonce" #12    --kasfMsgReceived("20%Damagetaken")
	
	_VIFONCE012[TeamName] = 1 --created,set;
	--kasJump("FIFieldReleased")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIFieldReleased", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIFieldReleased(TeamName)
	return
	end 
	if (_VIFONCE013[TeamName] == 0 and (KAS_GameMessageReceived({"Game_TechnologyReturned"}) ~= 0)) then  -- "ifonce" #13    --kasfTutGameSentMessage("Game_TechnologyReturned")
	
	_VIFONCE013[TeamName] = 1 --created,set;
	--kasJump("FIitsOld")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIitsOld", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIitsOld(TeamName)
	return
	end 
	if (_VIFONCE014[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0)) then  -- "ifonce" #14
	
	_VIFONCE014[TeamName] = 1 --created,set;
	--kasJump("NISletIng")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_NISletIng", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_NISletIng(TeamName)
	return
	end 
	if ((G_FuckingStupid == 1) and (G_AreTheyHere < 2)) then 
	
	--kasJump("FirstWarning")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FirstWarning", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FirstWarning(TeamName)
	return
	end 
	if (_VIFONCE015[TeamName] == 0 and (KAS_MessageReceived(TeamName, "FuckingStupid") ~= 0)) then  -- "ifonce" #15    --kasfMsgReceived("FuckingStupid")
	
	_VIFONCE015[TeamName] = 1 --created,set;
	--kasJump("YoureMeat")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_YoureMeat", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_YoureMeat(TeamName)
	return
	end 
	if (_VIFONCE016[TeamName] == 0 and (KAS_MessageReceived(TeamName, "SeeYa") ~= 0)) then  -- "ifonce" #16    --kasfMsgReceived("SeeYa")
	
	_VIFONCE016[TeamName] = 1 --created,set;
	--kasJump("ItsOver")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_ItsOver", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_ItsOver(TeamName)
	return
	end 
	if (G_CLICK_InvestigateAnomoly ~= 0) then 
	
	--kasJump("GhostTransIn")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_GhostTransIn", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_GhostTransIn(TeamName)
	return
	end 
	if (G_CLICK_DestroyUnknownVessel ~= 0) then 
	
	--kasJump("FIDangerWillRobinson")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FIDangerWillRobinson", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FIDangerWillRobinson(TeamName)
	return
	end 
	if (G_CLICK_SalvageUnknownVessel ~= 0) then 
	
	--kasJump("FISendACrew")
	--KASRule_Remove("FSM_Mission09_MissionFlow", "Watch_Mission09_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission09_MissionFlow_FISendACrew", "Watch_Mission09_MissionFlow_Done")
	Init_Mission09_MissionFlow_FISendACrew(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 MissionFlow ItsOver state
--
function Init_Mission09_MissionFlow_ItsOver(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60606", 3)    --kasfSpeechEvent((606 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission09 MissionFlow ItsOver state
--
function Watch_Mission09_MissionFlow_ItsOver(TeamName)
	--FSM: FSM_Mission09_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end 
	
end 


--
--  "initialize" code for Mission09 GhostShip FSM
--
function Init_Mission09_GhostShip(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	KAS_ShipsSetRetaliation(TeamName, 0)    --kasfShipsSetNonRetaliation((&kasThisTeamPtr->shipList))
	G_ItsAlive = 1 --created,set
	G_NumberOfUsurpedShips = 0 --created,set
	KAS_TeamAttributesSet(TeamName, 1)    --kasfTeamAttributesSet(1)
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission09_GhostShip_Waiting", "Init_Mission09_GhostShip")
	Init_Mission09_GhostShip_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 GhostShip FSM
--
function Watch_Mission09_GhostShip(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	if (_VIFONCE017[TeamName] == 0 and (KAS_TeamHealth(TeamName) < 95)) then  -- "ifonce" #17    --kasfTeamHealthAverage()
	
	_VIFONCE017[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "_10PercentDamagetaken")    --kasfMsgSendAll("10%Damagetaken")
	end 
	if (KAS_TeamHealth(TeamName) < 90) then     --kasfTeamHealthAverage()
	
	KAS_MessageSendToAll(TeamName, "_20PercentDamagetaken")    --kasfMsgSendAll("20%Damagetaken")
	--kasJump("Dormant")
	--KASRule_Remove("FSM_Mission09_GhostShip", "Watch_Mission09_GhostShip")
	KASRule_Add(TeamName, "Watch_Mission09_GhostShip_Dormant", "Watch_Mission09_GhostShip")
	Init_Mission09_GhostShip_Dormant(TeamName)
	return
	end 
	if (_VIFONCE018[TeamName] == 0 and ((G_NumberOfUsurpedShips == 1) and ( not(G_NoCaps == 1)))) then  -- "ifonce" #18
	
	_VIFONCE018[TeamName] = 1 --created,set;
	G_NoCaps = 1 --created,set
	KAS_MessageSendToAll(TeamName, "FirstShipUsurped")    --kasfMsgSendAll("FirstShipUsurped")
	end 
	
end 


--
--  "initialize" code for Mission09 GhostShip Waiting state
--
function Init_Mission09_GhostShip_Waiting(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	
end 


--
--  "watch" code for Mission09 GhostShip Waiting state
--
function Watch_Mission09_GhostShip_Waiting(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	KAS_FindEnemiesInside("GhostUsurpingRange", "GrowSelection_CouldbUsurped")    --kasfFindEnemiesInside(kasVolumePtr("GhostUsurpingRange"), kasGrowSelectionPtr("CouldbUsurped"), 1000)
	CouldbUsurpedSHIPS[TeamName] = SobGroup_Count("GrowSelection_CouldbUsurped") --created,set    --kasfShipsCount(kasGrowSelectionPtr("CouldbUsurped"))
	KAS_FillShipsByCapital("GrowSelection_WillbUsurped", "GrowSelection_CouldbUsurped")    --kasfShipsSelectCapital(kasGrowSelectionPtr("WillbUsurped"), kasGrowSelectionPtr("CouldbUsurped"))
	WillbUsurpedSHIPS[TeamName] = SobGroup_Count("GrowSelection_WillbUsurped") --created,set    --kasfShipsCount(kasGrowSelectionPtr("WillbUsurped"))
	if (SobGroup_Count("GrowSelection_WillbUsurped") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("WillbUsurped"))
	
	--kasJump("Transmution")
	--KASRule_Remove("FSM_Mission09_GhostShip", "Watch_Mission09_GhostShip_Waiting")
	KASRule_Add(TeamName, "Watch_Mission09_GhostShip_Transmution", "Watch_Mission09_GhostShip_Waiting")
	Init_Mission09_GhostShip_Transmution(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 GhostShip Transmution state
--
function Init_Mission09_GhostShip_Transmution(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	G_NumberOfUsurpedShips = G_NumberOfUsurpedShips + 1
	KAS_ShipsSwitchPlayerOwner("GrowSelection_WillbUsurped")    --kasfShipsSwitchPlayerOwner(kasGrowSelectionPtr("WillbUsurped"))
	SobGroup_SobGroupAdd("UsurpTeam", "GrowSelection_WillbUsurped")    --kasfReinforceTeamWithShips(kasAITeamPtr("UsurpTeam"), kasGrowSelectionPtr("WillbUsurped"))
	SobGroup_Clear("GrowSelection_WillbUsurped")    --kasfGrowSelectionClear(kasGrowSelectionPtr("WillbUsurped"))
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission09_GhostShip_Waiting", "Init_Mission09_GhostShip_Transmution")
	Init_Mission09_GhostShip_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 GhostShip Transmution state
--
function Watch_Mission09_GhostShip_Transmution(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	
end 


--
--  "initialize" code for Mission09 GhostShip Dormant state
--
function Init_Mission09_GhostShip_Dormant(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	G_ItsAlive = 0 --set
	
end 


--
--  "watch" code for Mission09 GhostShip Dormant state
--
function Watch_Mission09_GhostShip_Dormant(TeamName)
	--FSM: FSM_Mission09_GhostShip
	--TeamName = GhostShip
	if (KAS_TeamHealth(TeamName) < 20) then     --kasfTeamHealthAverage()
	
	SobGroup_SetHealth(TeamName, 100 / 100)    --kasfTeamSetPercentDamaged(100)
	end 
	
end 


--
--  "initialize" code for Mission09 UsurpedShips FSM
--
function Init_Mission09_UsurpedShips(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission09_UsurpedShips_Waiting", "Init_Mission09_UsurpedShips")
	Init_Mission09_UsurpedShips_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission09 UsurpedShips FSM
--
function Watch_Mission09_UsurpedShips(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	if (G_ItsAlive == 0) then 
	
	--kasJump("Dormant")
	--KASRule_Remove("FSM_Mission09_UsurpedShips", "Watch_Mission09_UsurpedShips")
	KASRule_Add(TeamName, "Watch_Mission09_UsurpedShips_Dormant", "Watch_Mission09_UsurpedShips")
	Init_Mission09_UsurpedShips_Dormant(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 UsurpedShips Waiting state
--
function Init_Mission09_UsurpedShips_Waiting(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	KAS_TeamMakeCrazy(TeamName, 1)    --kasfTeamMakeCrazy(1)
	
end 


--
--  "watch" code for Mission09 UsurpedShips Waiting state
--
function Watch_Mission09_UsurpedShips_Waiting(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	KAS_FindEnemiesInside("GhostCombatRange", "GrowSelection_WillbAttacked")    --kasfFindEnemiesInside(kasVolumePtr("GhostCombatRange"), kasGrowSelectionPtr("WillbAttacked"), 1000)
	if (SobGroup_Count("GrowSelection_WillbAttacked") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("WillbAttacked"))
	
	SobGroup_Clear("GrowSelection_WillbAttacked")    --kasfGrowSelectionClear(kasGrowSelectionPtr("WillbAttacked"))
	--kasJump("Combatre")
	--KASRule_Remove("FSM_Mission09_UsurpedShips", "Watch_Mission09_UsurpedShips_Waiting")
	KASRule_Add(TeamName, "Watch_Mission09_UsurpedShips_Combatre", "Watch_Mission09_UsurpedShips_Waiting")
	Init_Mission09_UsurpedShips_Combatre(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 UsurpedShips Combatre state
--
function Init_Mission09_UsurpedShips_Combatre(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	if (_VIFONCE019[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #19
	
	_VIFONCE019[TeamName] = 1 --created,set;
	KASTimer_Start(WellGetToYouSoon[TeamName], 20)
	end 
	KAS_TeamMakeCrazy(TeamName, 0)    --kasfTeamMakeCrazy(0)
	
end 


--
--  "watch" code for Mission09 UsurpedShips Combatre state
--
function Watch_Mission09_UsurpedShips_Combatre(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	if (_VIFONCE020[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(WellGetToYouSoon[TeamName]) ~= 0)) then  -- "ifonce" #20
	
	_VIFONCE020[TeamName] = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "WereAttacking")    --kasfMsgSendAll("WereAttacking")
	end 
	KAS_FindEnemiesInside("GhostCombatRange", "GrowSelection_WillbDestroyed")    --kasfFindEnemiesInside(kasVolumePtr("GhostCombatRange"), kasGrowSelectionPtr("WillbDestroyed"), 1000)
	if (SobGroup_Count("GrowSelection_WillbDestroyed") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("WillbDestroyed"))
	
	KAS_Attack(TeamName, "GrowSelection_WillbDestroyed")    --kasfAttack(kasGrowSelectionPtr("WillbDestroyed"))
	elseif (SobGroup_Count("GrowSelection_WillbDestroyed") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("WillbDestroyed"))
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission09_UsurpedShips", "Watch_Mission09_UsurpedShips_Combatre")
	KASRule_Add(TeamName, "Watch_Mission09_UsurpedShips_Waiting", "Watch_Mission09_UsurpedShips_Combatre")
	Init_Mission09_UsurpedShips_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 UsurpedShips Dormant state
--
function Init_Mission09_UsurpedShips_Dormant(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	if ((SobGroup_Count("CapturedFrigates") > 0) or (SobGroup_Count("CapturedIonArray") > 0) or (SobGroup_Count("CapturedMissileDestroyer") > 0) or (SobGroup_Count("CapturedMultiBeam") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("CapturedMultiBeam"))    --kasfShipsCount(kasAITeamShipsPtr("CapturedMissileDestroyer"))    --kasfShipsCount(kasAITeamShipsPtr("CapturedIonArray"))    --kasfShipsCount(kasAITeamShipsPtr("CapturedFrigates"))
	
	G_FuckVariable = 1 --created,set
	end 
	if (_VIFONCE021[TeamName] == 0 and (SobGroup_Count("CapturedMissileDestroyer") > 0)) then  -- "ifonce" #21    --kasfShipsCount(kasAITeamShipsPtr("CapturedMissileDestroyer"))
	
	_VIFONCE021[TeamName] = 1 --created,set;
	KASTimer_Start(MissileTimer[TeamName], 15)
	end 
	KAS_TeamAttributesSet(TeamName, 12288)    --kasfTeamAttributesBitSet(12288)
	KAS_ShipsSwitchPlayerOwner(TeamName)    --kasfTeamSwitchPlayerOwner()
	
end 


--
--  "watch" code for Mission09 UsurpedShips Dormant state
--
function Watch_Mission09_UsurpedShips_Dormant(TeamName)
	--FSM: FSM_Mission09_UsurpedShips
	--TeamName = "CapturedFrigates"
	if (_VIFONCE022[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(MissileTimer[TeamName]) ~= 0)) then  -- "ifonce" #22
	
	_VIFONCE022[TeamName] = 1 --created,set;
	G_GiveMissileTech = 1 --created,set
	end 
	if (G_ItsAlive == 1) then 
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission09_UsurpedShips", "Watch_Mission09_UsurpedShips_Dormant")
	KASRule_Add(TeamName, "Watch_Mission09_UsurpedShips_Waiting", "Watch_Mission09_UsurpedShips_Dormant")
	Init_Mission09_UsurpedShips_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission09 mission
--
function Init_Mission09(MissionName)
	--FSM: FSM_Mission09
	--MissionName = "Mission09"
	--kasFSMCreate("GhostShip")
	KASRule_AddFSM("GhostShip", "Watch_Mission09_GhostShip", "Init_Mission09")
	Init_Mission09_GhostShip("GhostShip")
	--kasFSMCreate("MissionFlow")
	KASRule_AddFSM("DummyTeam", "Watch_Mission09_MissionFlow", "Init_Mission09")
	Init_Mission09_MissionFlow("DummyTeam")
	--kasFSMCreate("UsurpedShips")
	KASRule_AddFSM("CapturedFrigates", "Watch_Mission09_UsurpedShips", "Init_Mission09")
	Init_Mission09_UsurpedShips("CapturedFrigates")
	--kasFSMCreate("UsurpedShips")
	KASRule_AddFSM("CapturedIonArray", "Watch_Mission09_UsurpedShips", "Init_Mission09")
	Init_Mission09_UsurpedShips("CapturedIonArray")
	--kasFSMCreate("UsurpedShips")
	KASRule_AddFSM("CapturedMissileDestroyer", "Watch_Mission09_UsurpedShips", "Init_Mission09")
	Init_Mission09_UsurpedShips("CapturedMissileDestroyer")
	--kasFSMCreate("UsurpedShips")
	KASRule_AddFSM("CapturedMultiBeam", "Watch_Mission09_UsurpedShips", "Init_Mission09")
	Init_Mission09_UsurpedShips("CapturedMultiBeam")
	--kasFSMCreate("UsurpedShips")
	KASRule_AddFSM("UsurpTeam", "Watch_Mission09_UsurpedShips", "Init_Mission09")
	Init_Mission09_UsurpedShips("UsurpTeam")
	G_GetOuttaHere = 0 --created,set
	KAS_CampaignAutoSave(9, "$61450")    --kasfSaveLevel(9, LSTRING_Savegame[strCurLanguage])
	singlePlayerLocationCard("$61451", 5)    --kasfLocationCard(5000, LSTRING_LocationCard[strCurLanguage])
	
end 


--
--  "watch" code for Mission09 mission
--
function Watch_Mission09(MissionName)
	--FSM: FSM_Mission09
	--MissionName = "Mission09"
	SobGroup_Clear("GrowSelection_BadShips")    --kasfGrowSelectionClear(kasGrowSelectionPtr("BadShips"))
	KAS_ShipsAdd("GrowSelection_BadShips", "CapturedFrigates")    --kasfShipsAdd(kasGrowSelectionPtr("BadShips"), kasAITeamShipsPtr("CapturedFrigates"))
	KAS_ShipsAdd("GrowSelection_BadShips", "CapturedIonArray")    --kasfShipsAdd(kasGrowSelectionPtr("BadShips"), kasAITeamShipsPtr("CapturedIonArray"))
	KAS_ShipsAdd("GrowSelection_BadShips", "CapturedMissileDestroyer")    --kasfShipsAdd(kasGrowSelectionPtr("BadShips"), kasAITeamShipsPtr("CapturedMissileDestroyer"))
	KAS_ShipsAdd("GrowSelection_BadShips", "CapturedMultiBeam")    --kasfShipsAdd(kasGrowSelectionPtr("BadShips"), kasAITeamShipsPtr("CapturedMultiBeam"))
	if (_VIFONCE023 == 0 and (G_LetmGrav == 1)) then  -- "ifonce" #23
	
	_VIFONCE023 = 1 --created,set;
	KAS_MessageSendToAll(TeamName, "WeWarpGrav")    --kasfMsgSendAll("WeWarpGrav")
	KAS_UnrestrictResearchOption(0, "GravityGenerator")    --kasfAllowPlayerToResearch("GravityWellGeneratorTech")
	end 
	if (G_GiveMissileTech == 1) then 
	
	KAS_GrantResearchOption(0, "GuidedMissiles")    --kasfPlayerAcquiredTechnology("MissileWeapons")
	end 
	if (_VIFONCE024 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #24    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE024 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end 
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end 
	if (_VIFONCE025 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #25    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE025 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end 
	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_BadShips")
    KASSobGroup_Create("GrowSelection_CouldbUsurped")
    KASSobGroup_Create("GrowSelection_DeadPlayerShips")
    KASSobGroup_Create("GrowSelection_FuckingStupid")
    KASSobGroup_Create("GrowSelection_PlayerMothership")
    KASSobGroup_Create("GrowSelection_PlayerMslDestroyer")
    KASSobGroup_Create("GrowSelection_WillbAttacked")
    KASSobGroup_Create("GrowSelection_WillbDestroyed")
    KASSobGroup_Create("GrowSelection_WillbUsurped")
    KASSobGroup_CreateIfNotExist("CapturedFrigates")
    KASSobGroup_CreateIfNotExist("CapturedIonArray")
    KASSobGroup_CreateIfNotExist("CapturedMissileDestroyer")
    KASSobGroup_CreateIfNotExist("CapturedMultiBeam")
    KASSobGroup_CreateIfNotExist("DummyTeam")
    KASSobGroup_CreateIfNotExist("GhostShip")
    KASSobGroup_CreateIfNotExist("Traders")
    KASSobGroup_CreateIfNotExist("UsurpTeam")

    Sound_SpeechSubtitlePath("speech:missions/Mission09/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;GhostShip;DummyTeam;Traders;CapturedFrigates;CapturedIonArray;CapturedMissileDestroyer;CapturedMultiBeam;UsurpTeam;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourScheme("CapturedFrigates", 1)
    KAS_SetColourScheme("CapturedIonArray", 1)
    KAS_SetColourScheme("CapturedMissileDestroyer", 1)
    KAS_SetColourScheme("CapturedMultiBeam", 1)
    KAS_SetColourScheme("GhostShip", 1)
    Player_SetPlayerName(1, "$60607")
    Player_SetPlayerName(2, "$60608")

    singlePlayerOnStartOrLoad(09)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_WORLD_SCALE = 0.45
    KAS_RememberStartingRUs()
    singlePlayerStartGame(09)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission09", "Watch_Mission09", "OnInit")
    Init_Mission09("Mission09")
    KAS_SetLetterboxStart(1, 5, 1, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A07_mission9", MUS_Ambient )
end

