--
--  Generated\Mission10.c
--
--  Finite state machine routines for "Mission10" mission
--
--  Copyright (C) 1998 Relic Entertainment Inc.
--  All rights reserved
--
--  This code was autogenerated from Mission10.kp by KAS2C Version 2.05
--


--#include "Generated\Mission10.h"  -- prototypes and #includes for exposed game functions

--extern AITeam *CurrentTeamP;
--#define kasThisTeamPtr CurrentTeamP

--  for run-time scoping of symbols (variables, timers, etc.)

-- List of ignored functions (stubbed out to ignoredFunction()):
--kasfDisablePlayer
--kasfForceCombatStatus
--kasfSoundEvent


dofilepath("data:scripts/SCAR/SCAR_Util.lua")             --stock HW2 scripting utilities
dofilepath("data:scripts/SCAR/KASUtil.lua")               --HW1->HW2 scripting utilities
dofilepath("data:scripts/SCAR/SinglePlayerFlow.lua")      --Emulation of HW1 singleplayer functionality
dofilepath("data:scripts/SCAR/SinglePlayerNIS.lua")       --Emulation of HW1 singleplayer NIS functionality
dofilepath("data:scripts/SCAR/SinglePlayerHyperspace.lua")--Emulation of HW1 hyperspace logic
dofilepath("data:scripts/SCAR/SpecialFlags.lua")          --Emulation of HW1 SPECIAL_xxx logic


--kas global variables, including variables used in ifOnce blocks
G_CLICK_DestroyDefenceForces = 0
G_CLICK_DestroyEnemyCarrier = 0
G_CLICK_DestroyResearchOutpost = 0
G_GotProx = 0
G_HelpMeOutHere = 0
G_MiningTheField = 0
G_ProtectMe = 0
RadDam = 0
SetMediumGuns = 0
_VIFONCE008 = 0
_VIFONCE010 = 0
_VIFONCE011 = 0
_VIFONCE012 = 0
_VIFONCE013 = 0
_VIFONCE014 = 0
_VIFONCE015 = 0

--Following are global variables: created outside of the KAS structure and stubbed out here.
--G_Nis6Complete : see SinglePlayerFlow.lua, nReferences: 1
--G_PlayNis : see SinglePlayerFlow.lua, nReferences: 1

--Following are Team-Scoped variables: referenced differently than globals.
IntelEvent = {["DummyTeam"] = 0}
_VIFONCE001 = {["DummyTeam"] = 0}
_VIFONCE002 = {["DummyTeam"] = 0}
_VIFONCE003 = {["DummyTeam"] = 0}
_VIFONCE004 = {["DummyTeam"] = 0}
_VIFONCE005 = {["DummyTeam"] = 0}
_VIFONCE006 = {["DummyTeam"] = 0}
_VIFONCE007 = {["DummyTeam"] = 0}

--Following are Team-Scoped timers: referenced differently than globals.
FIOpenSensorsTimer = {["DummyTeam"] = 2}
FIRadPINGTimer = {["DummyTeam"] = 3}
FISafeOpenSensorsTimer = {["DummyTeam"] = 4}
FISafePointTimer = {["DummyTeam"] = 5}
FISafeTimer = {["DummyTeam"] = 6}
FIStopTimer = {["DummyTeam"] = 7}
FuckTimer = {["DummyTeam"] = 8}
MineTimer = {["DummyTeam"] = 9, ["MineLayingTeam1"] = 10, ["MineLayingTeam2"] = 11, ["MineLayingTeam3"] = 12}
N1MineExpiryTimer = {["MineLayingTeam1"] = 13}
N2MineExpiryTimer = {["MineLayingTeam2"] = 14}
N3MineExpiryTimer = {["MineLayingTeam3"] = 15}
TimerSafeTransOut = {["DummyTeam"] = 16}


--kas timer names, with mappings to indices
TimerID_G_MinesAreLaid = 1
TimerID_G_TimerForNikki = 0


--KAS objective names, set by KASObjective_Add
ObjectiveID_DestroyDefenceForces = 2
ObjectiveID_DestroyEnemyCarrier = 1
ObjectiveID_DestroyResearchOutpost = 0
ObjectiveID_Hyperspace = 3
ObjectiveID_Count = 4


--Pointer IDs, set by KASPointer_Add<xxx>
PointerID_RSRoutePointerPOINTER = 1
PointerID_ResearchStationPOINTER = 0


--extern sdword CurrentMissionScope;
--extern char CurrentMissionScopeName[];

--  for displaying localized strings
strCurLanguage = 1  --Naive treatement of localization language.;

LSTRING_Savegame = {  -- multilingual strings
	"10 - Super Nova Station",
	"10 - Station Super Nova",
	"10 – Supernova-Station",
	"10 - Estación Supernova",
	"10 - La stazione Super Nova", }
LSTRING_LocationCard = {  -- multilingual strings
	"Super Nova Research Station",
	"Station de Recherche Super Nova",
	"Supernova-Forschungsstation",
	"Estación de investigación Supernova",
	"Stazione di ricerca Super Nova", }
LSTRING_Objective1 = {  -- multilingual strings
	"Destroy Research Outpost",
	"Station de Recherche Super Nova",
	"Supernova-Forschungsstation zerstören",
	"Destruir puesto de investigación",
	"Distruggi l'avamposto di ricerca", }
LSTRING_Objective2 = {  -- multilingual strings
	"Destroy all defense forces",
	"Destruction totalité des forces defensives ",
	"Alle Verteidigungsstreitkräfte eliminieren.",
	"Destruir todas las fuerzas defensivas",
	"Distruggi tutte le forze di difesa", }
LSTRING_Objective3 = {  -- multilingual strings
	"Destroy Enemy Carrier",
	"Destruction transporteur ennemi",
	"Gegnerisches Trägerschiff zerstören.",
	"Destruir portanaves enemigo",
	"Distruggi il Trasporto nemico", }
LSTRING_Hyperspace = {  -- multilingual strings
	"                HYPERSPACE",
	"                HYPERESPACE",
	"        HYPERRAUMSPRUNG",
	"                    HIPERESPACIO",
	"					IPERSPAZIO", }

--
--  "initialize" code for Mission10 MissionFlow FSM
--
function Init_Mission10_MissionFlow(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FuckTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission10 MissionFlow FSM
--
function Watch_Mission10_MissionFlow(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE001[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0)) then  -- "ifonce" #1
	
	_VIFONCE001[TeamName] = 1 --created,set;
	--kasJump("Intro")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Intro", "Watch_Mission10_MissionFlow")
	Init_Mission10_MissionFlow_Intro(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow Intro state
--
function Init_Mission10_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60614", 3)    --kasfSpeechEvent((614 + 2048 + 268435456), 0)
	
end 


--
--  "watch" code for Mission10 MissionFlow Intro state
--
function Watch_Mission10_MissionFlow_Intro(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("NisIntro")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Intro")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_NisIntro", "Watch_Mission10_MissionFlow_Intro")
	Init_Mission10_MissionFlow_NisIntro(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow NisIntro state
--
function Init_Mission10_MissionFlow_NisIntro(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(FuckTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission10 MissionFlow NisIntro state
--
function Watch_Mission10_MissionFlow_NisIntro(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then 
	
	--kasJump("NISing")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_NisIntro")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_NISing", "Watch_Mission10_MissionFlow_NisIntro")
	Init_Mission10_MissionFlow_NISing(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow NISing state
--
function Init_Mission10_MissionFlow_NISing(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_FindShipsInside("ResearchStationVolume", "GrowSelection_HideTemp")    --kasfFindShipsInside(kasVolumePtr("ResearchStationVolume"), kasGrowSelectionPtr("HideTemp"))
	KAS_ShipsSelectByPlayer("GrowSelection_FriendlyHideTemp", "GrowSelection_HideTemp", 1)    --kasfShipsSelectFriendly(kasGrowSelectionPtr("FriendlyHideTemp"), kasGrowSelectionPtr("HideTemp"))
	SobGroup_FillSubtract("GrowSelection_FriendlyHideTemp", "GrowSelection_FriendlyHideTemp", "ResearchStation")    --kasfShipsRemove(kasGrowSelectionPtr("FriendlyHideTemp"), kasAITeamShipsPtr("ResearchStation"))
	KAS_SetHidden("GrowSelection_FriendlyHideTemp", 1)    --kasfHideShips(kasGrowSelectionPtr("FriendlyHideTemp"))
	KAS_ShipsAdd("GrowSelection_NisCentreShip", "ResearchStation")    --kasfShipsAdd(kasGrowSelectionPtr("NisCentreShip"), kasAITeamShipsPtr("ResearchStation"))
	KAS_UniversePause(1)    --kasfUniversePause()
	G_PlayNis = 6 --created,set
    SobGroup_SetInherentVisibility("ResearchStation", 0, VisFull)
    SobGroup_SetGhost("ResearchStation", 1)
	--kasfForceFISensors()
	
end 


--
--  "watch" code for Mission10 MissionFlow NISing state
--
function Watch_Mission10_MissionFlow_NISing(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (G_Nis6Complete ~= 0) then 
	
	Camera_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	KAS_SensorsToggle(1, 1)    --kasfForceFISensors()
    SobGroup_SetGhost("ResearchStation", 0)
	KAS_SetHidden("GrowSelection_FriendlyHideTemp", 0)    --kasfUnhideShips(kasGrowSelectionPtr("FriendlyHideTemp"))
	KAS_ResetShipRenderedFlags("ResearchStation")    --kasfResetShipRenderFlags(kasAITeamShipsPtr("ResearchStation"))
	KAS_PingAddShips("ResearchStation", "Research_Station", "$60628")    --kasfPingAddShips(kasAITeamShipsPtr("ResearchStation"), "Research Station")
	--kasJump("FIRadPING")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_NISing")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FIRadPING", "Watch_Mission10_MissionFlow_NISing")
	Init_Mission10_MissionFlow_FIRadPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FIRadPING state
--
function Init_Mission10_MissionFlow_FIRadPING(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60617", 3)    --kasfSpeechEvent((617 + 4096 + 268435456), 0)
	if (_VIFONCE002[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #2
	
	_VIFONCE002[TeamName] = 1 --created,set;
	KASObjective_Add(ObjectiveID_DestroyResearchOutpost, "$61502", OT_Primary)    --kasfObjectiveCreate("DestroyResearchOutpost", LSTRING_Objective1[strCurLanguage], LSTRING_Objective1[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyResearchOutpost, "$60833")
	end 
	KASTimer_Start(FIRadPINGTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FIRadPING state
--
function Watch_Mission10_MissionFlow_FIRadPING(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRadPING")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FIRadPING")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	elseif (KASTimer_IsExpiredIfSoDestroy(FIRadPINGTimer[TeamName]) ~= 0) then 
	
	--kasJump("FIRadPointer")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRadPING")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FIRadPointer", "Watch_Mission10_MissionFlow_FIRadPING")
	Init_Mission10_MissionFlow_FIRadPointer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FIRadPointer state
--
function Init_Mission10_MissionFlow_FIRadPointer(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_ResearchStationPOINTER = KASPointer_AddShip("ResearchStation")    --kasfTutSetPointerTargetShip("ResearchStationPOINTER", kasAITeamShipsPtr("ResearchStation"))
	if (G_CLICK_DestroyResearchOutpost ~= 0) then 
	
	KASTimer_Start(FIRadPINGTimer[TeamName], 3)
	else
	
	KASTimer_Start(FIRadPINGTimer[TeamName], 7)
	end 
	
end 


--
--  "watch" code for Mission10 MissionFlow FIRadPointer state
--
function Watch_Mission10_MissionFlow_FIRadPointer(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (IntelEvent[TeamName] == 2) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRadPointer")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FIRadPointer")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	elseif (KASTimer_IsExpiredIfSoDestroy(FIRadPINGTimer[TeamName]) ~= 0) then 
	
	if (G_CLICK_DestroyResearchOutpost ~= 0) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRadPointer")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FIRadPointer")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	else
	
	--kasJump("FIRad")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRadPointer")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FIRad", "Watch_Mission10_MissionFlow_FIRadPointer")
	Init_Mission10_MissionFlow_FIRad(TeamName)
	return
	end 
	end 
	

	if (IntelEvent[TeamName] ~= 0) then 
    
        SobGroup_SetInherentVisibility("ResearchStation", 0, VisNone)
    end 
end 


--
--  "initialize" code for Mission10 MissionFlow FIRad state
--
function Init_Mission10_MissionFlow_FIRad(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_SubtitleAddOnce(Actor_HW1_FleetCommand, "$60615", 3)    --kasfSpeechEvent((615 + 2048 + 268435456), 0)
	
end 


--
--  "watch" code for Mission10 MissionFlow FIRad state
--
function Watch_Mission10_MissionFlow_FIRad(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("FIRad2")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRad")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FIRad2", "Watch_Mission10_MissionFlow_FIRad")
	Init_Mission10_MissionFlow_FIRad2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FIRad2 state
--
function Init_Mission10_MissionFlow_FIRad2(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60616", 3)    --kasfSpeechEvent((616 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission10 MissionFlow FIRad2 state
--
function Watch_Mission10_MissionFlow_FIRad2(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FIRad2")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Done", "Watch_Mission10_MissionFlow_FIRad2")
	Init_Mission10_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ClickRad state
--
function Init_Mission10_MissionFlow_ClickRad(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 1)    --kasfWideScreenIn(30)
	KASTimer_Start(FIOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow ClickRad state
--
function Watch_Mission10_MissionFlow_ClickRad(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FIRadPING")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ClickRad")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FIRadPING", "Watch_Mission10_MissionFlow_ClickRad")
	Init_Mission10_MissionFlow_FIRadPING(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ResearchSensors state
--
function Init_Mission10_MissionFlow_ResearchSensors(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60621", 3)    --kasfSpeechEvent((621 + 4096 + 268435456), 0)
	G_GotProx = 1 --created,set
	
end 


--
--  "watch" code for Mission10 MissionFlow ResearchSensors state
--
function Watch_Mission10_MissionFlow_ResearchSensors(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ResearchSensors")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_ResearchSensors")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow SafeTransIn state
--
function Init_Mission10_MissionFlow_SafeTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	--kasJump("SafeOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_SafeOpenSensors", "Init_Mission10_MissionFlow_SafeTransIn")
	Init_Mission10_MissionFlow_SafeOpenSensors(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MissionFlow SafeTransIn state
--
function Watch_Mission10_MissionFlow_SafeTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission10 MissionFlow SafeOpenSensors state
--
function Init_Mission10_MissionFlow_SafeOpenSensors(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KASTimer_Start(FISafeOpenSensorsTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow SafeOpenSensors state
--
function Watch_Mission10_MissionFlow_SafeOpenSensors(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafeOpenSensorsTimer[TeamName]) ~= 0) then 
	
	KAS_SensorsToggle(1, 1)    --kasfOpenSensors(1)
	KAS_UniversePause(1)    --kasfUniversePause()
	--kasJump("FISafe")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_SafeOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafe", "Watch_Mission10_MissionFlow_SafeOpenSensors")
	Init_Mission10_MissionFlow_FISafe(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_SafeOpenSensors")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_SafeOpenSensors")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafe state
--
function Init_Mission10_MissionFlow_FISafe(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60781", 3)    --kasfSpeechEvent((781 + 4096 + 268435456), 0)
	KASTimer_Start(FISafeTimer[TeamName], 4)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafe state
--
function Watch_Mission10_MissionFlow_FISafe(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafeTimer[TeamName]) ~= 0) then 
	
	--kasJump("FISafePointer1")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafe")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointer1", "Watch_Mission10_MissionFlow_FISafe")
	Init_Mission10_MissionFlow_FISafePointer1(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafe")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafe")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointer1 state
--
function Init_Mission10_MissionFlow_FISafePointer1(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_RSRoutePointerPOINTER = KASPointer_AddVolume("HighZone3")    --kasfTutSetPointerTargetAIVolume("RSRoutePointerPOINTER", kasVolumePtr("HighZone3"))
	KASTimer_Start(FISafePointTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointer1 state
--
function Watch_Mission10_MissionFlow_FISafePointer1(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FISafePointer2")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer1")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointer2", "Watch_Mission10_MissionFlow_FISafePointer1")
	Init_Mission10_MissionFlow_FISafePointer2(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer1")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointer1")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointer2 state
--
function Init_Mission10_MissionFlow_FISafePointer2(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_RSRoutePointerPOINTER = KASPointer_AddVolume("HighZone5a")    --kasfTutSetPointerTargetAIVolume("RSRoutePointerPOINTER", kasVolumePtr("HighZone5a"))
	KASTimer_Start(FISafePointTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointer2 state
--
function Watch_Mission10_MissionFlow_FISafePointer2(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FISafePointer3")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer2")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointer3", "Watch_Mission10_MissionFlow_FISafePointer2")
	Init_Mission10_MissionFlow_FISafePointer3(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer2")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointer2")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointer3 state
--
function Init_Mission10_MissionFlow_FISafePointer3(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_RSRoutePointerPOINTER = KASPointer_AddVolume("HighZone6")    --kasfTutSetPointerTargetAIVolume("RSRoutePointerPOINTER", kasVolumePtr("HighZone6"))
	KASTimer_Start(FISafePointTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointer3 state
--
function Watch_Mission10_MissionFlow_FISafePointer3(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FISafePointer4")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer3")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointer4", "Watch_Mission10_MissionFlow_FISafePointer3")
	Init_Mission10_MissionFlow_FISafePointer4(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer3")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointer3")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointer4 state
--
function Init_Mission10_MissionFlow_FISafePointer4(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_RSRoutePointerPOINTER = KASPointer_AddVolume("HighZone8")    --kasfTutSetPointerTargetAIVolume("RSRoutePointerPOINTER", kasVolumePtr("HighZone8"))
	KASTimer_Start(FISafePointTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointer4 state
--
function Watch_Mission10_MissionFlow_FISafePointer4(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FISafePointer5")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer4")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointer5", "Watch_Mission10_MissionFlow_FISafePointer4")
	Init_Mission10_MissionFlow_FISafePointer5(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer4")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointer4")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointer5 state
--
function Init_Mission10_MissionFlow_FISafePointer5(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_RSRoutePointerPOINTER = KASPointer_AddVolume("HighZone10")    --kasfTutSetPointerTargetAIVolume("RSRoutePointerPOINTER", kasVolumePtr("HighZone10"))
	KASTimer_Start(FISafePointTimer[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointer5 state
--
function Watch_Mission10_MissionFlow_FISafePointer5(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	--kasJump("FISafePointerStation")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer5")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_FISafePointerStation", "Watch_Mission10_MissionFlow_FISafePointer5")
	Init_Mission10_MissionFlow_FISafePointerStation(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointer5")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointer5")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow FISafePointerStation state
--
function Init_Mission10_MissionFlow_FISafePointerStation(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	PointerID_ResearchStationPOINTER = KASPointer_AddShip("ResearchStation")    --kasfTutSetPointerTargetShip("ResearchStationPOINTER", kasAITeamShipsPtr("ResearchStation"))
	KASTimer_Start(FISafePointTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission10 MissionFlow FISafePointerStation state
--
function Watch_Mission10_MissionFlow_FISafePointerStation(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	IntelEvent[TeamName] = 0 --destroyed
	IntelEvent[TeamName] = Subtitle_IsDoneOrSkipped(Actor_FleetIntel) --created,set    --kasfIntelEventEnded()
	if (KASTimer_IsExpiredIfSoDestroy(FISafePointTimer[TeamName]) ~= 0) then 
	
	--kasJump("SafeTransOut")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointerStation")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_SafeTransOut", "Watch_Mission10_MissionFlow_FISafePointerStation")
	Init_Mission10_MissionFlow_SafeTransOut(TeamName)
	return
	elseif (IntelEvent[TeamName] == 2) then 
	
	KAS_SetLetterboxState(0, 1)    --kasfWideScreenOut(30)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_FISafePointerStation")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_FISafePointerStation")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow SafeTransOut state
--
function Init_Mission10_MissionFlow_SafeTransOut(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(0, 2)    --kasfWideScreenOut(60)
	KASTimer_Start(TimerSafeTransOut[TeamName], 1)
	
end 


--
--  "watch" code for Mission10 MissionFlow SafeTransOut state
--
function Watch_Mission10_MissionFlow_SafeTransOut(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(TimerSafeTransOut[TeamName]) ~= 0) then 
	
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_SafeTransOut")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_SafeTransOut")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow StopTransIn state
--
function Init_Mission10_MissionFlow_StopTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 3)    --kasfWideScreenIn(90)
	KASTimer_Start(FuckTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission10 MissionFlow StopTransIn state
--
function Watch_Mission10_MissionFlow_StopTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FuckTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("EliteCarrier")    --kasfTutCameraFocus(kasAITeamShipsPtr("EliteCarrier"))
	KAS_FocusShips("EliteCarrier")    --kasfTutCameraFocus(kasAITeamShipsPtr("EliteCarrier"))
	--kasJump("StopFocusFI")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_StopTransIn")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_StopFocusFI", "Watch_Mission10_MissionFlow_StopTransIn")
	Init_Mission10_MissionFlow_StopFocusFI(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow StopFocusFI state
--
function Init_Mission10_MissionFlow_StopFocusFI(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (ignoredFunction(0) == 0) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60624", 3)    --kasfSpeechEvent((624 + 4096 + 268435456), 0)
	elseif (ignoredFunction(0) == 1) then     --kasfRaceOfHuman()
	
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60625", 3)    --kasfSpeechEvent((625 + 4096 + 268435456), 0)
	end 
	KASObjective_Add(ObjectiveID_DestroyEnemyCarrier, "$61504", OT_Primary)    --kasfObjectiveCreate("DestroyEnemyCarrier", LSTRING_Objective3[strCurLanguage], LSTRING_Objective3[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyEnemyCarrier, "$60834")
	KAS_PingAddShips("EliteCarrier", "EscapingCarrier", "$60629")    --kasfPingAddShips(kasAITeamShipsPtr("EliteCarrier"), "EscapingCarrier")
	KASTimer_Start(FIStopTimer[TeamName], 3)
	
end 


--
--  "watch" code for Mission10 MissionFlow StopFocusFI state
--
function Watch_Mission10_MissionFlow_StopFocusFI(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(FIStopTimer[TeamName]) ~= 0) then 
	
	KAS_SetLetterboxState(0, 1.5)    --kasfWideScreenOut(45)
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_StopFocusFI")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Done", "Watch_Mission10_MissionFlow_StopFocusFI")
	Init_Mission10_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ATimeToKill state
--
function Init_Mission10_MissionFlow_ATimeToKill(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60623", 3)    --kasfSpeechEvent((623 + 4096 + 268435456), 0)
	KAS_MessageSendToAll(TeamName, "WereOuttaHere")    --kasfMsgSendAll("WereOuttaHere")
	KASTimer_Start(TimerID_G_TimerForNikki, (RandomIntRange(30, 50)))    --kasfRandom(30, 50)
	KASObjective_Add(ObjectiveID_DestroyDefenceForces, "$61503", OT_Primary)    --kasfObjectiveCreate("DestroyDefenceForces", LSTRING_Objective2[strCurLanguage], LSTRING_Objective2[strCurLanguage])
	Objective_SetDescription(ObjectiveID_DestroyDefenceForces, "$60835")
	
end 


--
--  "watch" code for Mission10 MissionFlow ATimeToKill state
--
function Watch_Mission10_MissionFlow_ATimeToKill(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	KAS_MusicPlayType("data:sound/music/battle/B04_EvilEmpire", MUS_Ambient)    --kasfMusicPlay(15)
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ATimeToKill")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Done", "Watch_Mission10_MissionFlow_ATimeToKill")
	Init_Mission10_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ResourceBetter state
--
function Init_Mission10_MissionFlow_ResourceBetter(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60620", 3)    --kasfSpeechEvent((620 + 4096 + 268435456), 0)
	
end 


--
--  "watch" code for Mission10 MissionFlow ResourceBetter state
--
function Watch_Mission10_MissionFlow_ResourceBetter(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
	--kasJump("Done")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ResourceBetter")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Done", "Watch_Mission10_MissionFlow_ResourceBetter")
	Init_Mission10_MissionFlow_Done(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ResearchMineLayerTransIn state
--
function Init_Mission10_MissionFlow_ResearchMineLayerTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SetLetterboxState(2, 1.5)    --kasfWideScreenIn(45)
	KASTimer_Start(MineTimer[TeamName], 2)
	
end 


--
--  "watch" code for Mission10 MissionFlow ResearchMineLayerTransIn state
--
function Watch_Mission10_MissionFlow_ResearchMineLayerTransIn(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	ignoredFunction()    --kasfDisablePlayer(1)
	ignoredFunction()    --kasfSoundEvent(262)
    SobGroup_SetInherentVisibility("MineLayingTeam1", 0, VisFull)
	KAS_FocusShips("MineLayingTeam1")    --kasfTutCameraFocus(kasAITeamShipsPtr("MineLayingTeam1"))
	KAS_FocusShips("MineLayingTeam1")    --kasfTutCameraFocus(kasAITeamShipsPtr("MineLayingTeam1"))
	--kasJump("ResearchMineLayer")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ResearchMineLayerTransIn")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ResearchMineLayer", "Watch_Mission10_MissionFlow_ResearchMineLayerTransIn")
	Init_Mission10_MissionFlow_ResearchMineLayer(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow ResearchMineLayer state
--
function Init_Mission10_MissionFlow_ResearchMineLayer(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60622", 3)    --kasfSpeechEvent((622 + 4096 + 268435456), 0)
	G_MiningTheField = 1 --created,set
	
end 


--
--  "watch" code for Mission10 MissionFlow ResearchMineLayer state
--
function Watch_Mission10_MissionFlow_ResearchMineLayer(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (Subtitle_IsDoneOrSkipped(Actor_FleetIntel) ~= 0) then     --kasfIntelEventEnded()
	
    SobGroup_SetInherentVisibility("MineLayingTeam1", 0, VisNone)
	KAS_SetLetterboxState(0, 1.5)    --kasfWideScreenOut(45)
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	KAS_FocusCancel()    --kasfTutCameraFocusCancel()
	ignoredFunction()    --kasfDisablePlayer(0)
	--kasJump("AlmostDone")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_ResearchMineLayer")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_AlmostDone", "Watch_Mission10_MissionFlow_ResearchMineLayer")
	Init_Mission10_MissionFlow_AlmostDone(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MissionFlow AlmostDone state
--
function Init_Mission10_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	KASPointer_RemoveAll()    --kasfTutRemoveAllPointers()
	KAS_UniversePause(0)    --kasfUniverseUnpause()
	KAS_SensorsToggle(0, 1)    --kasfCloseSensors(1)
	--kasJump("Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_Done", "Init_Mission10_MissionFlow_AlmostDone")
	Init_Mission10_MissionFlow_Done(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MissionFlow AlmostDone state
--
function Watch_Mission10_MissionFlow_AlmostDone(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	
end 


--
--  "initialize" code for Mission10 MissionFlow Done state
--
function Init_Mission10_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	G_CLICK_DestroyResearchOutpost = 0 --destroyed
	G_CLICK_DestroyEnemyCarrier = 0 --destroyed
	G_CLICK_DestroyDefenceForces = 0 --destroyed
	
end 


--
--  "watch" code for Mission10 MissionFlow Done state
--
function Watch_Mission10_MissionFlow_Done(TeamName)
	--FSM: FSM_Mission10_MissionFlow
	--TeamName = "DummyTeam"
	if (_VIFONCE003[TeamName] == 0 and (1 ~= 0)) then  -- "ifonce" #3
	
	_VIFONCE003[TeamName] = 1 --created,set;
	--kasJump("ResearchSensors")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ResearchSensors", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_ResearchSensors(TeamName)
	return
	end 
	if (_VIFONCE004[TeamName] == 0 and (SobGroup_Count("GrowSelection_PlayerDamaged") > 0)) then  -- "ifonce" #4    --kasfShipsCount(kasGrowSelectionPtr("PlayerDamaged"))
	
	_VIFONCE004[TeamName] = 1 --created,set;
	--kasJump("SafeTransIn")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_SafeTransIn", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_SafeTransIn(TeamName)
	return
	end 
	if (_VIFONCE005[TeamName] == 0 and (KAS_FindEnemiesInside("ResearchStationVolume", "GrowSelection_FuckShips") ~= 0 or SobGroup_Count("ResearchStation") == 0)) then  -- "ifonce" #5    --kasfFindEnemiesInside(kasVolumePtr("ResearchStationVolume"), kasGrowSelectionPtr("FuckShips"), 1000)    --kasfShipsCount(kasAITeamShipsPtr("ResearchStation"))
	
	_VIFONCE005[TeamName] = 1 --created,set;
	--kasJump("ATimeToKill")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ATimeToKill", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_ATimeToKill(TeamName)
	return
	end 
	if (_VIFONCE006[TeamName] == 0 and (KAS_MessageReceived(TeamName, "HelpMeOutHere") ~= 0)) then  -- "ifonce" #6    --kasfMsgReceived("HelpMeOutHere")
	
	_VIFONCE006[TeamName] = 1 --created,set;
	--kasJump("StopTransIn")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_StopTransIn", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_StopTransIn(TeamName)
	return
	end 
	if (_VIFONCE007[TeamName] == 0 and (KASTimer_IsExpiredIfSoDestroy(TimerID_G_MinesAreLaid) ~= 0)) then  -- "ifonce" #7
	
	_VIFONCE007[TeamName] = 1 --created,set;
	
	--kasJump("ResearchMineLayerTransIn")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ResearchMineLayerTransIn", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_ResearchMineLayerTransIn(TeamName)
	return
	end 
	if (G_CLICK_DestroyResearchOutpost ~= 0) then 
	
	--kasJump("ClickRad")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ClickRad", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_ClickRad(TeamName)
	return
	end 
	if (G_CLICK_DestroyEnemyCarrier ~= 0) then 
	
	--kasJump("StopTransIn")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_StopTransIn", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_StopTransIn(TeamName)
	return
	end 
	if (G_CLICK_DestroyDefenceForces ~= 0) then 
	
	--kasJump("ATimeToKill")
	--KASRule_Remove("FSM_Mission10_MissionFlow", "Watch_Mission10_MissionFlow_Done")
	KASRule_Add(TeamName, "Watch_Mission10_MissionFlow_ATimeToKill", "Watch_Mission10_MissionFlow_Done")
	Init_Mission10_MissionFlow_ATimeToKill(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 EliteCarrier FSM
--
function Init_Mission10_EliteCarrier(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	G_HelpMeOutHere = 0 --created,set
	--kasJump("WaitState")
	KASRule_Add(TeamName, "Watch_Mission10_EliteCarrier_WaitState", "Init_Mission10_EliteCarrier")
	Init_Mission10_EliteCarrier_WaitState(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 EliteCarrier FSM
--
function Watch_Mission10_EliteCarrier(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	KAS_UnderAttack(TeamName, "GrowSelection_AttackCarrier")    --kasfUnderAttack(kasGrowSelectionPtr("AttackCarrier"))
	if ((SobGroup_Count("GrowSelection_AttackCarrier") > 0) or (KASTimer_IsExpired(TimerID_G_TimerForNikki) ~= 0)) then     --kasfShipsCount(kasGrowSelectionPtr("AttackCarrier"))
	
	KAS_MessageSendToAll(TeamName, "HelpMeOutHere")    --kasfMsgSendAll("HelpMeOutHere")
	G_HelpMeOutHere = 1 --set
	elseif (SobGroup_Count("GrowSelection_AttackCarrier") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("AttackCarrier"))
	
	G_HelpMeOutHere = 0 --set
	end 
	
end 


--
--  "initialize" code for Mission10 EliteCarrier WaitState state
--
function Init_Mission10_EliteCarrier_WaitState(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	
end 


--
--  "watch" code for Mission10 EliteCarrier WaitState state
--
function Watch_Mission10_EliteCarrier_WaitState(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	if (KAS_MessageReceived(TeamName, "WereOuttaHere") ~= 0) then     --kasfMsgReceived("WereOuttaHere")
	
	--kasJump("TakeOffState")
	--KASRule_Remove("FSM_Mission10_EliteCarrier", "Watch_Mission10_EliteCarrier_WaitState")
	KASRule_Add(TeamName, "Watch_Mission10_EliteCarrier_TakeOffState", "Watch_Mission10_EliteCarrier_WaitState")
	Init_Mission10_EliteCarrier_TakeOffState(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 EliteCarrier TakeOffState state
--
function Init_Mission10_EliteCarrier_TakeOffState(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	SobGroup_FollowPath(TeamName, "CarrierFuckOffRoute1", 1, 1, 0)    --kasfPatrolPath(kasPathPtr("CarrierFuckOffRoute1"))
	
end 


--
--  "watch" code for Mission10 EliteCarrier TakeOffState state
--
function Watch_Mission10_EliteCarrier_TakeOffState(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	if (SobGroup_GetNextPathPoint(TeamName) == 0) then     --kasfPathNextPoint()
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("YouLose"))    --kasfMoveTo(kasVectorPtr("YouLose"))
	--kasJump("SolongSucker")
	--KASRule_Remove("FSM_Mission10_EliteCarrier", "Watch_Mission10_EliteCarrier_TakeOffState")
	KASRule_Add(TeamName, "Watch_Mission10_EliteCarrier_SolongSucker", "Watch_Mission10_EliteCarrier_TakeOffState")
	Init_Mission10_EliteCarrier_SolongSucker(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 EliteCarrier SolongSucker state
--
function Init_Mission10_EliteCarrier_SolongSucker(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	
end 


--
--  "watch" code for Mission10 EliteCarrier SolongSucker state
--
function Watch_Mission10_EliteCarrier_SolongSucker(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	if (SobGroup_IsShipNearPoint(TeamName, "YouLose", 350) ~= 0) then     --kasfNearby(kasVectorPtr("YouLose"), 1000)
	
	--kasJump("ItsOver")
	--KASRule_Remove("FSM_Mission10_EliteCarrier", "Watch_Mission10_EliteCarrier_SolongSucker")
	KASRule_Add(TeamName, "Watch_Mission10_EliteCarrier_ItsOver", "Watch_Mission10_EliteCarrier_SolongSucker")
	Init_Mission10_EliteCarrier_ItsOver(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 EliteCarrier ItsOver state
--
function Init_Mission10_EliteCarrier_ItsOver(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	ignoredFunction()    --kasfSoundEvent(262)
	KAS_FocusShips("EliteCarrier")    --kasfTutCameraFocus(kasAITeamShipsPtr("EliteCarrier"))
	KAS_FocusShips("EliteCarrier")    --kasfTutCameraFocus(kasAITeamShipsPtr("EliteCarrier"))
	KAS_TeamHyperspaceOut(TeamName)    --kasfTeamHyperspaceOut()
	KAS_MissionFailed()    --kasfMissionFailed()
	
end 


--
--  "watch" code for Mission10 EliteCarrier ItsOver state
--
function Watch_Mission10_EliteCarrier_ItsOver(TeamName)
	--FSM: FSM_Mission10_EliteCarrier
	--TeamName = EliteCarrier
	
end 


--
--  "initialize" code for Mission10 AttackBomberTeam FSM
--
function Init_Mission10_AttackBomberTeam(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	SobGroup_DockSobGroupInstant(TeamName, "EliteCarrier")    --kasfDockInstant(kasAITeamPtr("EliteCarrier"))
	--kasJump("Docking")
	KASRule_Add(TeamName, "Watch_Mission10_AttackBomberTeam_Docking", "Init_Mission10_AttackBomberTeam")
	Init_Mission10_AttackBomberTeam_Docking(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 AttackBomberTeam FSM
--
function Watch_Mission10_AttackBomberTeam(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	
end 


--
--  "initialize" code for Mission10 AttackBomberTeam Attack state
--
function Init_Mission10_AttackBomberTeam_Attack(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission10 AttackBomberTeam Attack state
--
function Watch_Mission10_AttackBomberTeam_Attack(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	SobGroup_Clear("GrowSelection_AttCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("AttCarrier"))
	SobGroup_Clear("GrowSelection_CapsAttCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("CapsAttCarrier"))
	SobGroup_Clear("GrowSelection_DamagedCapsAttCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamagedCapsAttCarrier"))
	SobGroup_Clear("GrowSelection_NearAb")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearAb"))
	SobGroup_Clear("GrowSelection_StrkNearAb")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkNearAb"))
	SobGroup_Clear("GrowSelection_InjuredNearAb")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredNearAb"))
	KAS_UnderAttack("EliteCarrier", "GrowSelection_AttCarrier")    --kasfUnderAttackElsewhere(kasAITeamPtr("EliteCarrier"), kasGrowSelectionPtr("AttCarrier"))
	KAS_FillShipsByCapital("GrowSelection_CapsAttCarrier", "GrowSelection_AttCarrier")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsAttCarrier"), kasGrowSelectionPtr("AttCarrier"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamagedCapsAttCarrier", "GrowSelection_CapsAttCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamagedCapsAttCarrier"), kasGrowSelectionPtr("CapsAttCarrier"), 99)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearAb", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearAb"), 15000)
	KAS_FillShipsByCapital("GrowSelection_CapsNearAb", "GrowSelection_NearAb")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsNearAb"), kasGrowSelectionPtr("NearAb"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredNearAb", "GrowSelection_NearAb", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredNearAb"), kasGrowSelectionPtr("NearAb"), 99)
	if (SobGroup_Count("GrowSelection_DamagedCapsAttCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamagedCapsAttCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamagedCapsAttCarrier")    --kasfAttack(kasGrowSelectionPtr("DamagedCapsAttCarrier"))
	elseif (SobGroup_Count("GrowSelection_CapsAttCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsAttCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_CapsAttCarrier")    --kasfAttack(kasGrowSelectionPtr("CapsAttCarrier"))
	elseif (SobGroup_Count("GrowSelection_AttCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_AttCarrier")    --kasfAttack(kasGrowSelectionPtr("AttCarrier"))
	elseif (SobGroup_Count("GrowSelection_CapsNearAb") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsNearAb"))
	
	KAS_Attack(TeamName, "GrowSelection_CapsNearAb")    --kasfAttack(kasGrowSelectionPtr("CapsNearAb"))
	elseif (SobGroup_Count("GrowSelection_InjuredNearAb") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredNearAb"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredNearAb")    --kasfAttack(kasGrowSelectionPtr("InjuredNearAb"))
	elseif (SobGroup_Count("GrowSelection_NearAb") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearAb"))
	
	KAS_Attack(TeamName, "GrowSelection_NearAb")    --kasfAttack(kasGrowSelectionPtr("NearAb"))
	elseif ((SobGroup_Count("GrowSelection_AttCarrier") < 1) and (SobGroup_Count("GrowSelection_NearAb") < 1) and (SobGroup_Count("EliteCarrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("EliteCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("NearAb"))    --kasfShipsCount(kasGrowSelectionPtr("AttCarrier"))
	
	--kasJump("Docking")
	--KASRule_Remove("FSM_Mission10_AttackBomberTeam", "Watch_Mission10_AttackBomberTeam_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_AttackBomberTeam_Docking", "Watch_Mission10_AttackBomberTeam_Attack")
	Init_Mission10_AttackBomberTeam_Docking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 AttackBomberTeam Docking state
--
function Init_Mission10_AttackBomberTeam_Docking(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	SobGroup_DockSobGroupAndStayDocked(TeamName, "EliteCarrier")    --kasfDockStay(kasAITeamPtr("EliteCarrier"))
	
end 


--
--  "watch" code for Mission10 AttackBomberTeam Docking state
--
function Watch_Mission10_AttackBomberTeam_Docking(TeamName)
	--FSM: FSM_Mission10_AttackBomberTeam
	--TeamName = AttackBomberTeam
	if (G_HelpMeOutHere == 1) then 
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_AttackBomberTeam", "Watch_Mission10_AttackBomberTeam_Docking")
	KASRule_Add(TeamName, "Watch_Mission10_AttackBomberTeam_Attack", "Watch_Mission10_AttackBomberTeam_Docking")
	Init_Mission10_AttackBomberTeam_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MultigunCorvetteTeam FSM
--
function Init_Mission10_MultigunCorvetteTeam(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	SobGroup_DockSobGroupInstant(TeamName, "EliteCarrier")    --kasfDockInstant(kasAITeamPtr("EliteCarrier"))
	--kasJump("Docking")
	KASRule_Add(TeamName, "Watch_Mission10_MultigunCorvetteTeam_Docking", "Init_Mission10_MultigunCorvetteTeam")
	Init_Mission10_MultigunCorvetteTeam_Docking(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MultigunCorvetteTeam FSM
--
function Watch_Mission10_MultigunCorvetteTeam(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	
end 


--
--  "initialize" code for Mission10 MultigunCorvetteTeam Attack state
--
function Init_Mission10_MultigunCorvetteTeam_Attack(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	KAS_Launch(TeamName)    --kasfLaunch()
	
end 


--
--  "watch" code for Mission10 MultigunCorvetteTeam Attack state
--
function Watch_Mission10_MultigunCorvetteTeam_Attack(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	SobGroup_Clear("GrowSelection_AttackingCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("AttackingCarrier"))
	SobGroup_Clear("GrowSelection_StrkAttackingCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkAttackingCarrier"))
	SobGroup_Clear("GrowSelection_DamagedStrkAttackingCarrier")    --kasfGrowSelectionClear(kasGrowSelectionPtr("DamagedStrkAttackingCarrier"))
	SobGroup_Clear("GrowSelection_NearMg")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearMg"))
	SobGroup_Clear("GrowSelection_StrkNearMg")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkNearMg"))
	SobGroup_Clear("GrowSelection_InjuredNearMg")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredNearMg"))
	KAS_UnderAttack("EliteCarrier", "GrowSelection_AttackingCarrier")    --kasfUnderAttackElsewhere(kasAITeamPtr("EliteCarrier"), kasGrowSelectionPtr("AttackingCarrier"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkAttackingCarrier", "GrowSelection_AttackingCarrier")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkAttackingCarrier"), kasGrowSelectionPtr("AttackingCarrier"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamagedStrkAttackingCarrier", "GrowSelection_StrkAttackingCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamagedStrkAttackingCarrier"), kasGrowSelectionPtr("StrkAttackingCarrier"), 99)
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_NearMg", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("NearMg"), 15000)
	KAS_FillShipsByNonCapital("GrowSelection_StrkNearMg", "GrowSelection_NearMg")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkNearMg"), kasGrowSelectionPtr("NearMg"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredNearMg", "GrowSelection_NearMg", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredNearMg"), kasGrowSelectionPtr("NearMg"), 99)
	if (SobGroup_Count("GrowSelection_DamagedStrkAttackingCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamagedStrkAttackingCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamagedStrkAttackingCarrier")    --kasfAttack(kasGrowSelectionPtr("DamagedStrkAttackingCarrier"))
	elseif (SobGroup_Count("GrowSelection_StrkAttackingCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkAttackingCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkAttackingCarrier")    --kasfAttack(kasGrowSelectionPtr("StrkAttackingCarrier"))
	elseif (SobGroup_Count("GrowSelection_AttackingCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_AttackingCarrier")    --kasfAttack(kasGrowSelectionPtr("AttackingCarrier"))
	elseif (SobGroup_Count("GrowSelection_StrkNearMg") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkNearMg"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkNearMg")    --kasfAttack(kasGrowSelectionPtr("StrkNearMg"))
	elseif (SobGroup_Count("GrowSelection_InjuredNearMg") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredNearMg"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredNearMg")    --kasfAttack(kasGrowSelectionPtr("InjuredNearMg"))
	elseif (SobGroup_Count("GrowSelection_NearMg") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearMg"))
	
	KAS_Attack(TeamName, "GrowSelection_NearMg")    --kasfAttack(kasGrowSelectionPtr("NearMg"))
	elseif ((SobGroup_Count("GrowSelection_AttackingCarrier") < 1) and (SobGroup_Count("GrowSelection_NearMg") < 1) and (SobGroup_Count("EliteCarrier") > 0)) then     --kasfShipsCount(kasAITeamShipsPtr("EliteCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("NearMg"))    --kasfShipsCount(kasGrowSelectionPtr("AttackingCarrier"))
	
	--kasJump("Docking")
	--KASRule_Remove("FSM_Mission10_MultigunCorvetteTeam", "Watch_Mission10_MultigunCorvetteTeam_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_MultigunCorvetteTeam_Docking", "Watch_Mission10_MultigunCorvetteTeam_Attack")
	Init_Mission10_MultigunCorvetteTeam_Docking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MultigunCorvetteTeam Docking state
--
function Init_Mission10_MultigunCorvetteTeam_Docking(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	SobGroup_DockSobGroupAndStayDocked(TeamName, "EliteCarrier")    --kasfDockStay(kasAITeamPtr("EliteCarrier"))
	
end 


--
--  "watch" code for Mission10 MultigunCorvetteTeam Docking state
--
function Watch_Mission10_MultigunCorvetteTeam_Docking(TeamName)
	--FSM: FSM_Mission10_MultigunCorvetteTeam
	--TeamName = MultigunCorvetteTeam
	if (G_HelpMeOutHere == 1) then 
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_MultigunCorvetteTeam", "Watch_Mission10_MultigunCorvetteTeam_Docking")
	KASRule_Add(TeamName, "Watch_Mission10_MultigunCorvetteTeam_Attack", "Watch_Mission10_MultigunCorvetteTeam_Docking")
	Init_Mission10_MultigunCorvetteTeam_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 CarrierTeam FSM
--
function Init_Mission10_CarrierTeam(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierTeam_Wait", "Init_Mission10_CarrierTeam")
	Init_Mission10_CarrierTeam_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 CarrierTeam FSM
--
function Watch_Mission10_CarrierTeam(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	
end 


--
--  "initialize" code for Mission10 CarrierTeam Wait state
--
function Init_Mission10_CarrierTeam_Wait(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	KAS_ShipsAdd("GrowSelection_CGuardTemp", "GrowSelection_RDamaged")    --kasfShipsAdd(kasGrowSelectionPtr("CGuardTemp"), kasGrowSelectionPtr("RDamaged"))
	SobGroup_FillSubtract("GrowSelection_CGuardTemp", "GrowSelection_CGuardTemp", TeamName)    --kasfShipsRemove(kasGrowSelectionPtr("CGuardTemp"), (&kasThisTeamPtr->shipList))
	if ((SobGroup_Count("GrowSelection_CGuardTemp")) < (SobGroup_Count("GrowSelection_RDamaged"))) then     --kasfShipsCount(kasGrowSelectionPtr("RDamaged"))    --kasfShipsCount(kasGrowSelectionPtr("CGuardTemp"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("CarrierPoint"))    --kasfMoveTo(kasVectorPtr("CarrierPoint"))
	end 
	
end 


--
--  "watch" code for Mission10 CarrierTeam Wait state
--
function Watch_Mission10_CarrierTeam_Wait(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_WantMyCarrier", 5250) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("WantMyCarrier"), 15000)
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission10_CarrierTeam", "Watch_Mission10_CarrierTeam_Wait")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierTeam_Guard", "Watch_Mission10_CarrierTeam_Wait")
	Init_Mission10_CarrierTeam_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 CarrierTeam Guard state
--
function Init_Mission10_CarrierTeam_Guard(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	
end 


--
--  "watch" code for Mission10 CarrierTeam Guard state
--
function Watch_Mission10_CarrierTeam_Guard(TeamName)
	--FSM: FSM_Mission10_CarrierTeam
	--TeamName = CarrierTeam
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_WantMyCarrier", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("WantMyCarrier"), 15000)
	KAS_FillShipsByCapital("GrowSelection_CapsWantMyCarrier", "GrowSelection_WantMyCarrier")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsWantMyCarrier"), kasGrowSelectionPtr("WantMyCarrier"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkWantMyCarrier", "GrowSelection_WantMyCarrier")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkWantMyCarrier"), kasGrowSelectionPtr("WantMyCarrier"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkWantMyCarrier", "GrowSelection_StrkWantMyCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkWantMyCarrier"), kasGrowSelectionPtr("StrkWantMyCarrier"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamCapsWantMyCarrier", "GrowSelection_CapsWantMyCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamCapsWantMyCarrier"), kasGrowSelectionPtr("CapsWantMyCarrier"), 99)
	if (SobGroup_Count("GrowSelection_DamCapsWantMyCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamCapsWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_DamCapsWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_CapsWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("CapsWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_CapsWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("CapsWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_CapsWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_DamStrkWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("CapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("DamStrkWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_DamStrkWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_StrkWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("StrkWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("DamStrkWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("StrkWantMyCarrier"))
	elseif (SobGroup_Count("GrowSelection_WantMyCarrier") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("WantMyCarrier"))
	
	--kasJump("Wait")
	--KASRule_Remove("FSM_Mission10_CarrierTeam", "Watch_Mission10_CarrierTeam_Guard")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierTeam_Wait", "Watch_Mission10_CarrierTeam_Guard")
	Init_Mission10_CarrierTeam_Wait(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 CarrierGuardTeam FSM
--
function Init_Mission10_CarrierGuardTeam(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	--kasJump("Wait")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierGuardTeam_Wait", "Init_Mission10_CarrierGuardTeam")
	Init_Mission10_CarrierGuardTeam_Wait(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 CarrierGuardTeam FSM
--
function Watch_Mission10_CarrierGuardTeam(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	
end 


--
--  "initialize" code for Mission10 CarrierGuardTeam Wait state
--
function Init_Mission10_CarrierGuardTeam_Wait(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	KAS_ShipsAdd("GrowSelection_CGuardTemp", "GrowSelection_RDamaged")    --kasfShipsAdd(kasGrowSelectionPtr("CGuardTemp"), kasGrowSelectionPtr("RDamaged"))
	SobGroup_FillSubtract("GrowSelection_CGuardTemp", "GrowSelection_CGuardTemp", TeamName)    --kasfShipsRemove(kasGrowSelectionPtr("CGuardTemp"), (&kasThisTeamPtr->shipList))
	if ((SobGroup_Count("GrowSelection_CGuardTemp")) < (SobGroup_Count("GrowSelection_RDamaged"))) then     --kasfShipsCount(kasGrowSelectionPtr("RDamaged"))    --kasfShipsCount(kasGrowSelectionPtr("CGuardTemp"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("CarrierPoint"))    --kasfMoveTo(kasVectorPtr("CarrierPoint"))
	end 
	
end 


--
--  "watch" code for Mission10 CarrierGuardTeam Wait state
--
function Watch_Mission10_CarrierGuardTeam_Wait(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_WantMyCarrier", 5250) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("WantMyCarrier"), 15000)
	
	--kasJump("Guard")
	--KASRule_Remove("FSM_Mission10_CarrierGuardTeam", "Watch_Mission10_CarrierGuardTeam_Wait")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierGuardTeam_Guard", "Watch_Mission10_CarrierGuardTeam_Wait")
	Init_Mission10_CarrierGuardTeam_Guard(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 CarrierGuardTeam Guard state
--
function Init_Mission10_CarrierGuardTeam_Guard(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	
end 


--
--  "watch" code for Mission10 CarrierGuardTeam Guard state
--
function Watch_Mission10_CarrierGuardTeam_Guard(TeamName)
	--FSM: FSM_Mission10_CarrierGuardTeam
	--TeamName = CarrierGuardTeam
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_WantMyCarrier", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("WantMyCarrier"), 15000)
	KAS_FillShipsByCapital("GrowSelection_CapsWantMyCarrier", "GrowSelection_WantMyCarrier")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsWantMyCarrier"), kasGrowSelectionPtr("WantMyCarrier"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkWantMyCarrier", "GrowSelection_WantMyCarrier")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkWantMyCarrier"), kasGrowSelectionPtr("WantMyCarrier"))
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamStrkWantMyCarrier", "GrowSelection_StrkWantMyCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamStrkWantMyCarrier"), kasGrowSelectionPtr("StrkWantMyCarrier"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamCapsWantMyCarrier", "GrowSelection_CapsWantMyCarrier", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamCapsWantMyCarrier"), kasGrowSelectionPtr("CapsWantMyCarrier"), 99)
	if (SobGroup_Count("GrowSelection_DamCapsWantMyCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamCapsWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_DamCapsWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_CapsWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("CapsWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("DamCapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_CapsWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("CapsWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_CapsWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_DamStrkWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("DamStrkWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("CapsWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_DamStrkWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("DamStrkWantMyCarrier"))
	elseif ((SobGroup_Count("GrowSelection_DamStrkWantMyCarrier") < 1) and (SobGroup_Count("GrowSelection_StrkWantMyCarrier") > 0)) then     --kasfShipsCount(kasGrowSelectionPtr("StrkWantMyCarrier"))    --kasfShipsCount(kasGrowSelectionPtr("DamStrkWantMyCarrier"))
	
	KAS_Attack(TeamName, "GrowSelection_StrkWantMyCarrier")    --kasfAttack(kasGrowSelectionPtr("StrkWantMyCarrier"))
	elseif (SobGroup_Count("GrowSelection_WantMyCarrier") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("WantMyCarrier"))
	
	--kasJump("Wait")
	--KASRule_Remove("FSM_Mission10_CarrierGuardTeam", "Watch_Mission10_CarrierGuardTeam_Guard")
	KASRule_Add(TeamName, "Watch_Mission10_CarrierGuardTeam_Wait", "Watch_Mission10_CarrierGuardTeam_Guard")
	Init_Mission10_CarrierGuardTeam_Wait(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 FSM
--
function Init_Mission10_MineLayingTeam1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	--kasJump("Move1")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Move1", "Init_Mission10_MineLayingTeam1")
	Init_Mission10_MineLayingTeam1_Move1(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 FSM
--
function Watch_Mission10_MineLayingTeam1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Move1 state
--
function Init_Mission10_MineLayingTeam1_Move1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint1"))    --kasfMoveTo(kasVectorPtr("MinePoint1"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Move1 state
--
function Watch_Mission10_MineLayingTeam1_Move1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint1", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint1"), 500)
	
	--kasJump("Laying1")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Move1")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Laying1", "Watch_Mission10_MineLayingTeam1_Move1")
	Init_Mission10_MineLayingTeam1_Laying1(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Laying1 state
--
function Init_Mission10_MineLayingTeam1_Laying1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Laying1 state
--
function Watch_Mission10_MineLayingTeam1_Laying1(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	KASTimer_Start(N1MineExpiryTimer[TeamName], 900)
	--kasJump("Move2")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Laying1")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Move2", "Watch_Mission10_MineLayingTeam1_Laying1")
	Init_Mission10_MineLayingTeam1_Move2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Move2 state
--
function Init_Mission10_MineLayingTeam1_Move2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint2"))    --kasfMoveTo(kasVectorPtr("MinePoint2"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Move2 state
--
function Watch_Mission10_MineLayingTeam1_Move2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint2", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint2"), 500)
	
	--kasJump("Laying2")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Move2")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Laying2", "Watch_Mission10_MineLayingTeam1_Move2")
	Init_Mission10_MineLayingTeam1_Laying2(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Laying2 state
--
function Init_Mission10_MineLayingTeam1_Laying2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(TimerID_G_MinesAreLaid, 10)
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Laying2 state
--
function Watch_Mission10_MineLayingTeam1_Laying2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move3")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Laying2")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Move3", "Watch_Mission10_MineLayingTeam1_Laying2")
	Init_Mission10_MineLayingTeam1_Move3(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Move3 state
--
function Init_Mission10_MineLayingTeam1_Move3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint3"))    --kasfMoveTo(kasVectorPtr("MinePoint3"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Move3 state
--
function Watch_Mission10_MineLayingTeam1_Move3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint3", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint3"), 500)
	
	--kasJump("Laying3")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Move3")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Laying3", "Watch_Mission10_MineLayingTeam1_Move3")
	Init_Mission10_MineLayingTeam1_Laying3(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam1 Laying3 state
--
function Init_Mission10_MineLayingTeam1_Laying3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission10 MineLayingTeam1 Laying3 state
--
function Watch_Mission10_MineLayingTeam1_Laying3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam1
	--TeamName = MineLayingTeam1
	if (KASTimer_IsExpiredIfSoDestroy(N1MineExpiryTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move1")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam1", "Watch_Mission10_MineLayingTeam1_Laying3")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam1_Move1", "Watch_Mission10_MineLayingTeam1_Laying3")
	Init_Mission10_MineLayingTeam1_Move1(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 FSM
--
function Init_Mission10_MineLayingTeam2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	--kasJump("Move4")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Move4", "Init_Mission10_MineLayingTeam2")
	Init_Mission10_MineLayingTeam2_Move4(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 FSM
--
function Watch_Mission10_MineLayingTeam2(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Move4 state
--
function Init_Mission10_MineLayingTeam2_Move4(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint4"))    --kasfMoveTo(kasVectorPtr("MinePoint4"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Move4 state
--
function Watch_Mission10_MineLayingTeam2_Move4(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint4", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint4"), 500)
	
	--kasJump("Laying4")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Move4")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Laying4", "Watch_Mission10_MineLayingTeam2_Move4")
	Init_Mission10_MineLayingTeam2_Laying4(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Laying4 state
--
function Init_Mission10_MineLayingTeam2_Laying4(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Laying4 state
--
function Watch_Mission10_MineLayingTeam2_Laying4(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	KASTimer_Start(N2MineExpiryTimer[TeamName], 900)
	--kasJump("Move5")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Laying4")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Move5", "Watch_Mission10_MineLayingTeam2_Laying4")
	Init_Mission10_MineLayingTeam2_Move5(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Move5 state
--
function Init_Mission10_MineLayingTeam2_Move5(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint5"))    --kasfMoveTo(kasVectorPtr("MinePoint5"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Move5 state
--
function Watch_Mission10_MineLayingTeam2_Move5(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint5", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint5"), 500)
	
	--kasJump("Laying5")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Move5")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Laying5", "Watch_Mission10_MineLayingTeam2_Move5")
	Init_Mission10_MineLayingTeam2_Laying5(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Laying5 state
--
function Init_Mission10_MineLayingTeam2_Laying5(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Laying5 state
--
function Watch_Mission10_MineLayingTeam2_Laying5(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move5")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Laying5")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Move5", "Watch_Mission10_MineLayingTeam2_Laying5")
	Init_Mission10_MineLayingTeam2_Move5(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Move6 state
--
function Init_Mission10_MineLayingTeam2_Move6(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint6"))    --kasfMoveTo(kasVectorPtr("MinePoint6"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Move6 state
--
function Watch_Mission10_MineLayingTeam2_Move6(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint6", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint6"), 500)
	
	--kasJump("Laying6")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Move6")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Laying6", "Watch_Mission10_MineLayingTeam2_Move6")
	Init_Mission10_MineLayingTeam2_Laying6(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam2 Laying6 state
--
function Init_Mission10_MineLayingTeam2_Laying6(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission10 MineLayingTeam2 Laying6 state
--
function Watch_Mission10_MineLayingTeam2_Laying6(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam2
	--TeamName = MineLayingTeam2
	if (KASTimer_IsExpiredIfSoDestroy(N2MineExpiryTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move4")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam2", "Watch_Mission10_MineLayingTeam2_Laying6")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam2_Move4", "Watch_Mission10_MineLayingTeam2_Laying6")
	Init_Mission10_MineLayingTeam2_Move4(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 FSM
--
function Init_Mission10_MineLayingTeam3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	--kasJump("Move7")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Move7", "Init_Mission10_MineLayingTeam3")
	Init_Mission10_MineLayingTeam3_Move7(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 FSM
--
function Watch_Mission10_MineLayingTeam3(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Move7 state
--
function Init_Mission10_MineLayingTeam3_Move7(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint7"))    --kasfMoveTo(kasVectorPtr("MinePoint7"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Move7 state
--
function Watch_Mission10_MineLayingTeam3_Move7(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint7", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint7"), 500)
	
	--kasJump("Laying7")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Move7")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Laying7", "Watch_Mission10_MineLayingTeam3_Move7")
	Init_Mission10_MineLayingTeam3_Laying7(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Laying7 state
--
function Init_Mission10_MineLayingTeam3_Laying7(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Laying7 state
--
function Watch_Mission10_MineLayingTeam3_Laying7(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	KASTimer_Start(N3MineExpiryTimer[TeamName], 900)
	--kasJump("Move8")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Laying7")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Move8", "Watch_Mission10_MineLayingTeam3_Laying7")
	Init_Mission10_MineLayingTeam3_Move8(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Move8 state
--
function Init_Mission10_MineLayingTeam3_Move8(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint8"))    --kasfMoveTo(kasVectorPtr("MinePoint8"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Move8 state
--
function Watch_Mission10_MineLayingTeam3_Move8(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint8", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint8"), 500)
	
	--kasJump("Laying8")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Move8")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Laying8", "Watch_Mission10_MineLayingTeam3_Move8")
	Init_Mission10_MineLayingTeam3_Laying8(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Laying8 state
--
function Init_Mission10_MineLayingTeam3_Laying8(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Laying8 state
--
function Watch_Mission10_MineLayingTeam3_Laying8(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move9")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Laying8")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Move9", "Watch_Mission10_MineLayingTeam3_Laying8")
	Init_Mission10_MineLayingTeam3_Move9(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Move9 state
--
function Init_Mission10_MineLayingTeam3_Move9(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint9"))    --kasfMoveTo(kasVectorPtr("MinePoint9"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Move9 state
--
function Watch_Mission10_MineLayingTeam3_Move9(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint9", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint9"), 500)
	
	--kasJump("Laying9")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Move9")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Laying9", "Watch_Mission10_MineLayingTeam3_Move9")
	Init_Mission10_MineLayingTeam3_Laying9(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Laying9 state
--
function Init_Mission10_MineLayingTeam3_Laying9(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	KASTimer_Start(MineTimer[TeamName], 120)
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Laying9 state
--
function Watch_Mission10_MineLayingTeam3_Laying9(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (KASTimer_IsExpiredIfSoDestroy(MineTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move10")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Laying9")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Move10", "Watch_Mission10_MineLayingTeam3_Laying9")
	Init_Mission10_MineLayingTeam3_Move10(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Move10 state
--
function Init_Mission10_MineLayingTeam3_Move10(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MinePoint10"))    --kasfMoveTo(kasVectorPtr("MinePoint10"))
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Move10 state
--
function Watch_Mission10_MineLayingTeam3_Move10(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (SobGroup_IsShipNearPoint(TeamName, "MinePoint10", 175) ~= 0) then     --kasfNearby(kasVectorPtr("MinePoint10"), 500)
	
	--kasJump("Laying10")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Move10")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Laying10", "Watch_Mission10_MineLayingTeam3_Move10")
	Init_Mission10_MineLayingTeam3_Laying10(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MineLayingTeam3 Laying10 state
--
function Init_Mission10_MineLayingTeam3_Laying10(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	KAS_SpecialToggle(TeamName)    --kasfSpecialToggle()
	
end 


--
--  "watch" code for Mission10 MineLayingTeam3 Laying10 state
--
function Watch_Mission10_MineLayingTeam3_Laying10(TeamName)
	--FSM: FSM_Mission10_MineLayingTeam3
	--TeamName = MineLayingTeam3
	if (KASTimer_IsExpiredIfSoDestroy(N3MineExpiryTimer[TeamName]) ~= 0) then 
	
	--kasJump("Move7")
	--KASRule_Remove("FSM_Mission10_MineLayingTeam3", "Watch_Mission10_MineLayingTeam3_Laying10")
	KASRule_Add(TeamName, "Watch_Mission10_MineLayingTeam3_Move7", "Watch_Mission10_MineLayingTeam3_Laying10")
	Init_Mission10_MineLayingTeam3_Move7(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 HeavyCorvettes FSM
--
function Init_Mission10_HeavyCorvettes(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyCorvettes_Waiting", "Init_Mission10_HeavyCorvettes")
	Init_Mission10_HeavyCorvettes_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 HeavyCorvettes FSM
--
function Watch_Mission10_HeavyCorvettes(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	
end 


--
--  "initialize" code for Mission10 HeavyCorvettes Attack state
--
function Init_Mission10_HeavyCorvettes_Attack(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	
end 


--
--  "watch" code for Mission10 HeavyCorvettes Attack state
--
function Watch_Mission10_HeavyCorvettes_Attack(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GettingHammered", 7000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GettingHammered"), 20000)
	SobGroup_FillSubtract("GrowSelection_GettingHammered", "GrowSelection_GettingHammered", "GrowSelection_RDamaged")    --kasfShipsRemove(kasGrowSelectionPtr("GettingHammered"), kasGrowSelectionPtr("RDamaged"))
	KAS_UnderAttack(TeamName, "GrowSelection_AttHCs")    --kasfUnderAttack(kasGrowSelectionPtr("AttHCs"))
	KAS_ShipsAdd("GrowSelection_GettingHammered", "GrowSelection_AttHCs")    --kasfShipsAdd(kasGrowSelectionPtr("GettingHammered"), kasGrowSelectionPtr("AttHCs"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkGettingHammered", "GrowSelection_GettingHammered")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkGettingHammered"), kasGrowSelectionPtr("GettingHammered"))
	if (SobGroup_Count("GrowSelection_StrkGettingHammered") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StrkGettingHammered"))
	
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamagedStrkGettingHammered", "GrowSelection_StrkGettingHammered", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamagedStrkGettingHammered"), kasGrowSelectionPtr("StrkGettingHammered"), 99)
	if (SobGroup_Count("GrowSelection_DamagedStrkGettingHammered") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamagedStrkGettingHammered"))
	
	KAS_Attack(TeamName, "GrowSelection_DamagedStrkGettingHammered")    --kasfAttack(kasGrowSelectionPtr("DamagedStrkGettingHammered"))
	else
	
	KAS_Attack(TeamName, "GrowSelection_StrkGettingHammered")    --kasfAttack(kasGrowSelectionPtr("StrkGettingHammered"))
	end 
	elseif (SobGroup_Count("GrowSelection_GettingHammered") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GettingHammered"))
	
	KAS_Attack(TeamName, "GrowSelection_GettingHammered")    --kasfAttack(kasGrowSelectionPtr("GettingHammered"))
	else
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission10_HeavyCorvettes", "Watch_Mission10_HeavyCorvettes_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyCorvettes_Waiting", "Watch_Mission10_HeavyCorvettes_Attack")
	Init_Mission10_HeavyCorvettes_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 HeavyCorvettes Waiting state
--
function Init_Mission10_HeavyCorvettes_Waiting(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	KAS_ShipsAdd("GrowSelection_HCorvTemp", "GrowSelection_RDamaged")    --kasfShipsAdd(kasGrowSelectionPtr("HCorvTemp"), kasGrowSelectionPtr("RDamaged"))
	SobGroup_FillSubtract("GrowSelection_HCorvTemp", "GrowSelection_HCorvTemp", TeamName)    --kasfShipsRemove(kasGrowSelectionPtr("HCorvTemp"), (&kasThisTeamPtr->shipList))
	if ((SobGroup_Count("GrowSelection_HCorvTemp")) < (SobGroup_Count("GrowSelection_RDamaged"))) then     --kasfShipsCount(kasGrowSelectionPtr("RDamaged"))    --kasfShipsCount(kasGrowSelectionPtr("HCorvTemp"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("HighZone5"))    --kasfMoveTo(kasVolumeVectorPtr("HighZone5"))
	end 
	
end 


--
--  "watch" code for Mission10 HeavyCorvettes Waiting state
--
function Watch_Mission10_HeavyCorvettes_Waiting(TeamName)
	--FSM: FSM_Mission10_HeavyCorvettes
	--TeamName = HeavyCorvettes
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GettingHammered", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GettingHammered"), 15000)
	if (SobGroup_Count("GrowSelection_GettingHammered") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GettingHammered"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_HeavyCorvettes", "Watch_Mission10_HeavyCorvettes_Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyCorvettes_Attack", "Watch_Mission10_HeavyCorvettes_Waiting")
	Init_Mission10_HeavyCorvettes_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 HeavyInterceptorTeam FSM
--
function Init_Mission10_HeavyInterceptorTeam(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyInterceptorTeam_Waiting", "Init_Mission10_HeavyInterceptorTeam")
	Init_Mission10_HeavyInterceptorTeam_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 HeavyInterceptorTeam FSM
--
function Watch_Mission10_HeavyInterceptorTeam(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	
end 


--
--  "initialize" code for Mission10 HeavyInterceptorTeam Attack state
--
function Init_Mission10_HeavyInterceptorTeam_Attack(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	
end 


--
--  "watch" code for Mission10 HeavyInterceptorTeam Attack state
--
function Watch_Mission10_HeavyInterceptorTeam_Attack(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GettingMined", 7000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GettingMined"), 20000)
	SobGroup_FillSubtract("GrowSelection_GettingMined", "GrowSelection_GettingMined", "GrowSelection_RDamaged")    --kasfShipsRemove(kasGrowSelectionPtr("GettingMined"), kasGrowSelectionPtr("RDamaged"))
	KAS_UnderAttack(TeamName, "GrowSelection_AttHIs")    --kasfUnderAttack(kasGrowSelectionPtr("AttHIs"))
	KAS_ShipsAdd("GrowSelection_GettingMined", "GrowSelection_AttHIs")    --kasfShipsAdd(kasGrowSelectionPtr("GettingMined"), kasGrowSelectionPtr("AttHIs"))
	KAS_FillShipsByCapital("GrowSelection_CapsGettingMined", "GrowSelection_GettingMined")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsGettingMined"), kasGrowSelectionPtr("GettingMined"))
	if (SobGroup_Count("GrowSelection_CapsGettingMined") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsGettingMined"))
	
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_DamagedCapsGettingMined", "GrowSelection_CapsGettingMined", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("DamagedCapsGettingMined"), kasGrowSelectionPtr("CapsGettingMined"), 99)
	if (SobGroup_Count("GrowSelection_DamagedCapsGettingMined") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamagedCapsGettingMined"))
	
	KAS_Attack(TeamName, "GrowSelection_DamagedCapsGettingMined")    --kasfAttack(kasGrowSelectionPtr("DamagedCapsGettingMined"))
	else
	
	KAS_Attack(TeamName, "GrowSelection_CapsGettingMined")    --kasfAttack(kasGrowSelectionPtr("CapsGettingMined"))
	end 
	elseif (SobGroup_Count("GrowSelection_GettingMined") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GettingMined"))
	
	KAS_Attack(TeamName, "GrowSelection_GettingMined")    --kasfAttack(kasGrowSelectionPtr("GettingMined"))
	else
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission10_HeavyInterceptorTeam", "Watch_Mission10_HeavyInterceptorTeam_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyInterceptorTeam_Waiting", "Watch_Mission10_HeavyInterceptorTeam_Attack")
	Init_Mission10_HeavyInterceptorTeam_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 HeavyInterceptorTeam Waiting state
--
function Init_Mission10_HeavyInterceptorTeam_Waiting(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	KAS_ShipsAdd("GrowSelection_HInteceptTemp", "GrowSelection_RDamaged")    --kasfShipsAdd(kasGrowSelectionPtr("HInteceptTemp"), kasGrowSelectionPtr("RDamaged"))
	SobGroup_FillSubtract("GrowSelection_HInteceptTemp", "GrowSelection_HInteceptTemp", TeamName)    --kasfShipsRemove(kasGrowSelectionPtr("HInteceptTemp"), (&kasThisTeamPtr->shipList))
	if ((SobGroup_Count("GrowSelection_HInteceptTemp")) < (SobGroup_Count("GrowSelection_RDamaged"))) then     --kasfShipsCount(kasGrowSelectionPtr("RDamaged"))    --kasfShipsCount(kasGrowSelectionPtr("HInteceptTemp"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("HighZone5"))    --kasfMoveTo(kasVolumeVectorPtr("HighZone5"))
	end 
	
end 


--
--  "watch" code for Mission10 HeavyInterceptorTeam Waiting state
--
function Watch_Mission10_HeavyInterceptorTeam_Waiting(TeamName)
	--FSM: FSM_Mission10_HeavyInterceptorTeam
	--TeamName = HeavyInterceptorTeam
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GettingMined", 5250)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GettingMined"), 15000)
	if (SobGroup_Count("GrowSelection_GettingMined") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GettingMined"))
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_HeavyInterceptorTeam", "Watch_Mission10_HeavyInterceptorTeam_Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_HeavyInterceptorTeam_Attack", "Watch_Mission10_HeavyInterceptorTeam_Waiting")
	Init_Mission10_HeavyInterceptorTeam_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 ResearchStation FSM
--
function Init_Mission10_ResearchStation(TeamName)
	--FSM: FSM_Mission10_ResearchStation
	--TeamName = ResearchStation
	G_ProtectMe = 0 --created,set
	--kasJump("Nothing")
	KASRule_Add(TeamName, "Watch_Mission10_ResearchStation_Nothing", "Init_Mission10_ResearchStation")
	Init_Mission10_ResearchStation_Nothing(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 ResearchStation FSM
--
function Watch_Mission10_ResearchStation(TeamName)
	--FSM: FSM_Mission10_ResearchStation
	--TeamName = ResearchStation
	
end 


--
--  "initialize" code for Mission10 ResearchStation Nothing state
--
function Init_Mission10_ResearchStation_Nothing(TeamName)
	--FSM: FSM_Mission10_ResearchStation
	--TeamName = ResearchStation
	
end 


--
--  "watch" code for Mission10 ResearchStation Nothing state
--
function Watch_Mission10_ResearchStation_Nothing(TeamName)
	--FSM: FSM_Mission10_ResearchStation
	--TeamName = ResearchStation
	if ((KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_PlayerAttacking", 8750) > 0) and (G_ProtectMe == 0)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("PlayerAttacking"), 25000)
	
	G_ProtectMe = 1 --set
	elseif ((KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_PlayerAttacking", 8750) < 1) and (G_ProtectMe == 1)) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("PlayerAttacking"), 25000)
	
	G_ProtectMe = 0 --set
	end 
	
end 


--
--  "initialize" code for Mission10 DefenseFighterTeam FSM
--
function Init_Mission10_DefenseFighterTeam(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	SobGroup_SetMaxSpeed(TeamName, 0)    --kasfTeamSetMaxVelocity(0)
	--kasJump("Sitting")
	KASRule_Add(TeamName, "Watch_Mission10_DefenseFighterTeam_Sitting", "Init_Mission10_DefenseFighterTeam")
	Init_Mission10_DefenseFighterTeam_Sitting(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 DefenseFighterTeam FSM
--
function Watch_Mission10_DefenseFighterTeam(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	if (SobGroup_Count(TeamName) < 1) then     --kasfTeamCount()
	
	--kasJump("Dead")
	--KASRule_Remove("FSM_Mission10_DefenseFighterTeam", "Watch_Mission10_DefenseFighterTeam")
	KASRule_Add(TeamName, "Watch_Mission10_DefenseFighterTeam_Dead", "Watch_Mission10_DefenseFighterTeam")
	Init_Mission10_DefenseFighterTeam_Dead(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 DefenseFighterTeam Sitting state
--
function Init_Mission10_DefenseFighterTeam_Sitting(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	SobGroup_Stop(SobGroup_GetPlayerOwner(TeamName), TeamName)    --kasfStop()
	
end 


--
--  "watch" code for Mission10 DefenseFighterTeam Sitting state
--
function Watch_Mission10_DefenseFighterTeam_Sitting(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	if (SobGroup_Count("GrowSelection_StationDefTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StationDefTargets"))
	
	--kasJump("Attacking")
	--KASRule_Remove("FSM_Mission10_DefenseFighterTeam", "Watch_Mission10_DefenseFighterTeam_Sitting")
	KASRule_Add(TeamName, "Watch_Mission10_DefenseFighterTeam_Attacking", "Watch_Mission10_DefenseFighterTeam_Sitting")
	Init_Mission10_DefenseFighterTeam_Attacking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 DefenseFighterTeam Attacking state
--
function Init_Mission10_DefenseFighterTeam_Attacking(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	
end 


--
--  "watch" code for Mission10 DefenseFighterTeam Attacking state
--
function Watch_Mission10_DefenseFighterTeam_Attacking(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	SobGroup_Clear("GrowSelection_AttackingRS")    --kasfGrowSelectionClear(kasGrowSelectionPtr("AttackingRS"))
	SobGroup_Clear("GrowSelection_InjuredAttackingRS")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredAttackingRS"))
	SobGroup_FillProximityPoint("GrowSelection_AttackingRS", "GrowSelection_StationDefTargets", KAS_TeamCentrePoint(TeamName), 2275)    --kasfShipsSelectNearby(kasGrowSelectionPtr("AttackingRS"), kasGrowSelectionPtr("StationDefTargets"), kasThisTeamsVectorPtr(), 6500)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredAttackingRS", "GrowSelection_AttackingRS", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredAttackingRS"), kasGrowSelectionPtr("AttackingRS"), 99)
	if (SobGroup_Count("GrowSelection_InjuredAttackingRS") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredAttackingRS"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredAttackingRS")    --kasfAttack(kasGrowSelectionPtr("InjuredAttackingRS"))
	elseif (SobGroup_Count("GrowSelection_AttackingRS") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingRS"))
	
	KAS_Attack(TeamName, "GrowSelection_AttackingRS")    --kasfAttack(kasGrowSelectionPtr("AttackingRS"))
	elseif (SobGroup_Count("GrowSelection_AttackingRS") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingRS"))
	
	--kasJump("Sitting")
	--KASRule_Remove("FSM_Mission10_DefenseFighterTeam", "Watch_Mission10_DefenseFighterTeam_Attacking")
	KASRule_Add(TeamName, "Watch_Mission10_DefenseFighterTeam_Sitting", "Watch_Mission10_DefenseFighterTeam_Attacking")
	Init_Mission10_DefenseFighterTeam_Sitting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 DefenseFighterTeam Dead state
--
function Init_Mission10_DefenseFighterTeam_Dead(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	
end 


--
--  "watch" code for Mission10 DefenseFighterTeam Dead state
--
function Watch_Mission10_DefenseFighterTeam_Dead(TeamName)
	--FSM: FSM_Mission10_DefenseFighterTeam
	--TeamName = "DefenseFighterTeam1"
	
end 


--
--  "initialize" code for Mission10 StationDefFrig FSM
--
function Init_Mission10_StationDefFrig(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	--kasJump("Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_StationDefFrig_Waiting", "Init_Mission10_StationDefFrig")
	Init_Mission10_StationDefFrig_Waiting(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 StationDefFrig FSM
--
function Watch_Mission10_StationDefFrig(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	
end 


--
--  "initialize" code for Mission10 StationDefFrig Waiting state
--
function Init_Mission10_StationDefFrig_Waiting(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	if (KAS_TeamNamesEqual(TeamName, "StationDefFrig1") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("StationDefFrig1"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("FrigPoint1"))    --kasfMoveTo(kasVectorPtr("FrigPoint1"))
	elseif (KAS_TeamNamesEqual(TeamName, "StationDefFrig2") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("StationDefFrig2"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("FrigPoint2"))    --kasfMoveTo(kasVectorPtr("FrigPoint2"))
	elseif (KAS_TeamNamesEqual(TeamName, "StationDefFrig3") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("StationDefFrig3"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("FrigPoint3"))    --kasfMoveTo(kasVectorPtr("FrigPoint3"))
	elseif (KAS_TeamNamesEqual(TeamName, "StationDefFrig4") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("StationDefFrig4"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("FrigPoint4"))    --kasfMoveTo(kasVectorPtr("FrigPoint4"))
	elseif (KAS_TeamNamesEqual(TeamName, "StationDefFrig5") ~= 0) then     --kasfThisTeamIs(kasAITeamPtr("StationDefFrig5"))
	
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("FrigPoint5"))    --kasfMoveTo(kasVectorPtr("FrigPoint5"))
	end 
	
end 


--
--  "watch" code for Mission10 StationDefFrig Waiting state
--
function Watch_Mission10_StationDefFrig_Waiting(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	if (SobGroup_Count("GrowSelection_StationDefTargets") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("StationDefTargets"))
	
	--kasJump("Attacking")
	--KASRule_Remove("FSM_Mission10_StationDefFrig", "Watch_Mission10_StationDefFrig_Waiting")
	KASRule_Add(TeamName, "Watch_Mission10_StationDefFrig_Attacking", "Watch_Mission10_StationDefFrig_Waiting")
	Init_Mission10_StationDefFrig_Attacking(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 StationDefFrig Attacking state
--
function Init_Mission10_StationDefFrig_Attacking(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	
end 


--
--  "watch" code for Mission10 StationDefFrig Attacking state
--
function Watch_Mission10_StationDefFrig_Attacking(TeamName)
	--FSM: FSM_Mission10_StationDefFrig
	--TeamName = "StationDefFrig1"
	SobGroup_Clear("GrowSelection_AttackingRS")    --kasfGrowSelectionClear(kasGrowSelectionPtr("AttackingRS"))
	SobGroup_Clear("GrowSelection_InjuredAttackingRS")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredAttackingRS"))
	SobGroup_Clear("GrowSelection_NearFrigs")    --kasfGrowSelectionClear(kasGrowSelectionPtr("NearFrigs"))
	SobGroup_Clear("GrowSelection_InjuredNearFrigs")    --kasfGrowSelectionClear(kasGrowSelectionPtr("InjuredNearFrigs"))
	KAS_UnderAttack("ResearchStation", "GrowSelection_AttackingRS")    --kasfUnderAttackElsewhere(kasAITeamPtr("ResearchStation"), kasGrowSelectionPtr("AttackingRS"))
	SobGroup_FillProximityPoint("GrowSelection_NearFrigs", "GrowSelection_StationDefTargets", KAS_TeamCentrePoint(TeamName), 2450)    --kasfShipsSelectNearby(kasGrowSelectionPtr("NearFrigs"), kasGrowSelectionPtr("StationDefTargets"), kasThisTeamsVectorPtr(), 7000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredAttackingRS", "GrowSelection_AttackingRS", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredAttackingRS"), kasGrowSelectionPtr("AttackingRS"), 99)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredNearFrigs", "GrowSelection_NearFrigs", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredNearFrigs"), kasGrowSelectionPtr("NearFrigs"), 99)
	if (SobGroup_Count("GrowSelection_InjuredAttackingRS") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredAttackingRS"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredAttackingRS")    --kasfAttack(kasGrowSelectionPtr("InjuredAttackingRS"))
	elseif (SobGroup_Count("GrowSelection_AttackingRS") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("AttackingRS"))
	
	KAS_Attack(TeamName, "GrowSelection_AttackingRS")    --kasfAttack(kasGrowSelectionPtr("AttackingRS"))
	elseif (SobGroup_Count("GrowSelection_InjuredNearFrigs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredNearFrigs"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredNearFrigs")    --kasfAttack(kasGrowSelectionPtr("InjuredNearFrigs"))
	elseif (SobGroup_Count("GrowSelection_NearFrigs") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("NearFrigs"))
	
	KAS_Attack(TeamName, "GrowSelection_NearFrigs")    --kasfAttack(kasGrowSelectionPtr("NearFrigs"))
	else
	
	--kasJump("Waiting")
	--KASRule_Remove("FSM_Mission10_StationDefFrig", "Watch_Mission10_StationDefFrig_Attacking")
	KASRule_Add(TeamName, "Watch_Mission10_StationDefFrig_Waiting", "Watch_Mission10_StationDefFrig_Attacking")
	Init_Mission10_StationDefFrig_Waiting(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MiddleAmbushTeam FSM
--
function Init_Mission10_MiddleAmbushTeam(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	--kasJump("Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_MiddleAmbushTeam_Waitin", "Init_Mission10_MiddleAmbushTeam")
	Init_Mission10_MiddleAmbushTeam_Waitin(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 MiddleAmbushTeam FSM
--
function Watch_Mission10_MiddleAmbushTeam(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	
end 


--
--  "initialize" code for Mission10 MiddleAmbushTeam Waitin state
--
function Init_Mission10_MiddleAmbushTeam_Waitin(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("MidRouteGuard"))    --kasfMoveTo(kasVectorPtr("MidRouteGuard"))
	
end 


--
--  "watch" code for Mission10 MiddleAmbushTeam Waitin state
--
function Watch_Mission10_MiddleAmbushTeam_Waitin(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	if (G_ProtectMe == 1) then 
	
	--kasJump("GoingToWork")
	--KASRule_Remove("FSM_Mission10_MiddleAmbushTeam", "Watch_Mission10_MiddleAmbushTeam_Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_MiddleAmbushTeam_GoingToWork", "Watch_Mission10_MiddleAmbushTeam_Waitin")
	Init_Mission10_MiddleAmbushTeam_GoingToWork(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GoinMid", 4375) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GoinMid"), 12500)
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_MiddleAmbushTeam", "Watch_Mission10_MiddleAmbushTeam_Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_MiddleAmbushTeam_Attack", "Watch_Mission10_MiddleAmbushTeam_Waitin")
	Init_Mission10_MiddleAmbushTeam_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MiddleAmbushTeam Attack state
--
function Init_Mission10_MiddleAmbushTeam_Attack(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	
end 


--
--  "watch" code for Mission10 MiddleAmbushTeam Attack state
--
function Watch_Mission10_MiddleAmbushTeam_Attack(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GoinMid", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GoinMid"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredGoinMid", "GrowSelection_GoinMid", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredGoinMid"), kasGrowSelectionPtr("GoinMid"), 99)
	if (SobGroup_Count("GrowSelection_InjuredGoinMid") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredGoinMid"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredGoinMid")    --kasfAttack(kasGrowSelectionPtr("InjuredGoinMid"))
	elseif (SobGroup_Count("GrowSelection_GoinMid") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GoinMid"))
	
	KAS_Attack(TeamName, "GrowSelection_GoinMid")    --kasfAttack(kasGrowSelectionPtr("GoinMid"))
	elseif (SobGroup_Count("GrowSelection_GoinMid") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("GoinMid"))
	
	--kasJump("Waitin")
	--KASRule_Remove("FSM_Mission10_MiddleAmbushTeam", "Watch_Mission10_MiddleAmbushTeam_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_MiddleAmbushTeam_Waitin", "Watch_Mission10_MiddleAmbushTeam_Attack")
	Init_Mission10_MiddleAmbushTeam_Waitin(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 MiddleAmbushTeam GoingToWork state
--
function Init_Mission10_MiddleAmbushTeam_GoingToWork(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	KAS_Attack(TeamName, "GrowSelection_PlayerAttacking")    --kasfAttack(kasGrowSelectionPtr("PlayerAttacking"))
	
end 


--
--  "watch" code for Mission10 MiddleAmbushTeam GoingToWork state
--
function Watch_Mission10_MiddleAmbushTeam_GoingToWork(TeamName)
	--FSM: FSM_Mission10_MiddleAmbushTeam
	--TeamName = MiddleAmbushTeam
	if (G_ProtectMe == 0) then 
	
	--kasJump("Waitin")
	--KASRule_Remove("FSM_Mission10_MiddleAmbushTeam", "Watch_Mission10_MiddleAmbushTeam_GoingToWork")
	KASRule_Add(TeamName, "Watch_Mission10_MiddleAmbushTeam_Waitin", "Watch_Mission10_MiddleAmbushTeam_GoingToWork")
	Init_Mission10_MiddleAmbushTeam_Waitin(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 LowPathGuard FSM
--
function Init_Mission10_LowPathGuard(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	--kasJump("Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_LowPathGuard_Waitin", "Init_Mission10_LowPathGuard")
	Init_Mission10_LowPathGuard_Waitin(TeamName)
	return
	
end 


--
--  "watch" code for Mission10 LowPathGuard FSM
--
function Watch_Mission10_LowPathGuard(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	
end 


--
--  "initialize" code for Mission10 LowPathGuard Waitin state
--
function Init_Mission10_LowPathGuard_Waitin(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	SobGroup_MoveToPoint(SobGroup_GetPlayerOwner(TeamName), TeamName, Volume_GetPosition("LowRouteGuard"))    --kasfMoveTo(kasVectorPtr("LowRouteGuard"))
	
end 


--
--  "watch" code for Mission10 LowPathGuard Waitin state
--
function Watch_Mission10_LowPathGuard_Waitin(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	if (G_ProtectMe == 1) then 
	
	--kasJump("GoingToWork")
	--KASRule_Remove("FSM_Mission10_LowPathGuard", "Watch_Mission10_LowPathGuard_Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_LowPathGuard_GoingToWork", "Watch_Mission10_LowPathGuard_Waitin")
	Init_Mission10_LowPathGuard_GoingToWork(TeamName)
	return
	end 
	if (KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GoinLow", 4375) > 0) then     --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GoinLow"), 12500)
	
	--kasJump("Attack")
	--KASRule_Remove("FSM_Mission10_LowPathGuard", "Watch_Mission10_LowPathGuard_Waitin")
	KASRule_Add(TeamName, "Watch_Mission10_LowPathGuard_Attack", "Watch_Mission10_LowPathGuard_Waitin")
	Init_Mission10_LowPathGuard_Attack(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 LowPathGuard Attack state
--
function Init_Mission10_LowPathGuard_Attack(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	
end 


--
--  "watch" code for Mission10 LowPathGuard Attack state
--
function Watch_Mission10_LowPathGuard_Attack(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_GoinLow", 3500)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("GoinLow"), 10000)
	SobGroup_FillSobGroupByHealthBelow("GrowSelection_InjuredGoinLow", "GrowSelection_GoinLow", 99 / 100)    --kasfShipsSelectDamaged(kasGrowSelectionPtr("InjuredGoinLow"), kasGrowSelectionPtr("GoinLow"), 99)
	if (SobGroup_Count("GrowSelection_InjuredGoinLow") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("InjuredGoinLow"))
	
	KAS_Attack(TeamName, "GrowSelection_InjuredGoinLow")    --kasfAttack(kasGrowSelectionPtr("InjuredGoinLow"))
	elseif (SobGroup_Count("GrowSelection_GoinLow") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("GoinLow"))
	
	KAS_Attack(TeamName, "GrowSelection_GoinLow")    --kasfAttack(kasGrowSelectionPtr("GoinLow"))
	elseif (SobGroup_Count("GrowSelection_GoinLow") < 1) then     --kasfShipsCount(kasGrowSelectionPtr("GoinLow"))
	
	--kasJump("Waitin")
	--KASRule_Remove("FSM_Mission10_LowPathGuard", "Watch_Mission10_LowPathGuard_Attack")
	KASRule_Add(TeamName, "Watch_Mission10_LowPathGuard_Waitin", "Watch_Mission10_LowPathGuard_Attack")
	Init_Mission10_LowPathGuard_Waitin(TeamName)
	return
	end 
	
end 


--
--  "initialize" code for Mission10 LowPathGuard GoingToWork state
--
function Init_Mission10_LowPathGuard_GoingToWork(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	KAS_Attack(TeamName, "GrowSelection_PlayerAttacking")    --kasfAttack(kasGrowSelectionPtr("PlayerAttacking"))
	
end 


--
--  "watch" code for Mission10 LowPathGuard GoingToWork state
--
function Watch_Mission10_LowPathGuard_GoingToWork(TeamName)
	--FSM: FSM_Mission10_LowPathGuard
	--TeamName = LowPathGuard
	if (G_ProtectMe == 0) then 
	
        if (SobGroup_Count("ResearchStation") < 1) then     --kasfShipsCount(kasAITeamShipsPtr("ResearchStation"))
        
            --ResearchStation is dead!  Oh no.  Attack?
            --...find somebody attacking carrier.

            if (SobGroup_Count("GrowSelection_DamagedCapsAttCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("DamagedCapsAttCarrier"))
            
                KAS_Attack(TeamName, "GrowSelection_DamagedCapsAttCarrier")    --kasfAttack(kasGrowSelectionPtr("DamagedCapsAttCarrier"))
            elseif (SobGroup_Count("GrowSelection_CapsAttCarrier") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("CapsAttCarrier"))
            
                KAS_Attack(TeamName, "GrowSelection_CapsAttCarrier")    --kasfAttack(kasGrowSelectionPtr("CapsAttCarrier"))
            else
            
                --nobody attacking carrier; attack whatever capships nearest
                SobGroup_Clear("GrowSelection_LastDitchTargets")    --kasfGrowSelectionClear(kasGrowSelectionPtr("LastDitchTargets"))
                SobGroup_Clear("GrowSelection_LastDitchTargetsCapital")    --kasfGrowSelectionClear(kasGrowSelectionPtr("LastDitchTargetsCapital"))

                KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_LastDitchTargets", 7000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("LastDitchTargets"), 20000)
                KAS_FillShipsByCapital("GrowSelection_LastDitchTargetsCapital", "GrowSelection_LastDitchTargets")    --kasfShipsSelectCapital(kasGrowSelectionPtr("LastDitchTargetsCapital"), kasGrowSelectionPtr("LastDitchTargets"))

                if (SobGroup_Count("GrowSelection_LastDitchTargetsCapital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                
                    KAS_Attack(TeamName, "GrowSelection_LastDitchTargetsCapital")    --kasfAttack(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                else
                
                    KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_LastDitchTargets", 14000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("LastDitchTargets"), 40000)
                    KAS_FillShipsByCapital("GrowSelection_LastDitchTargetsCapital", "GrowSelection_LastDitchTargets")    --kasfShipsSelectCapital(kasGrowSelectionPtr("LastDitchTargetsCapital"), kasGrowSelectionPtr("LastDitchTargets"))
                    if (SobGroup_Count("GrowSelection_LastDitchTargetsCapital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                    
                        KAS_Attack(TeamName, "GrowSelection_LastDitchTargetsCapital")    --kasfAttack(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                    else
                    
                        KAS_FindEnemiesNearTeam(TeamName, "GrowSelection_LastDitchTargets", 21000)    --kasfFindEnemiesNearTeam(kasGrowSelectionPtr("LastDitchTargets"), 60000)
                        KAS_FillShipsByCapital("GrowSelection_LastDitchTargetsCapital", "GrowSelection_LastDitchTargets")    --kasfShipsSelectCapital(kasGrowSelectionPtr("LastDitchTargetsCapital"), kasGrowSelectionPtr("LastDitchTargets"))
                        if (SobGroup_Count("GrowSelection_LastDitchTargetsCapital") > 0) then     --kasfShipsCount(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                        
                            KAS_Attack(TeamName, "GrowSelection_LastDitchTargetsCapital")    --kasfAttack(kasGrowSelectionPtr("LastDitchTargetsCapital"))
                        else
                        
                            --...else attack mothership
                            SobGroup_Clear("GrowSelection_PlayerMothership")    --kasfGrowSelectionClear(kasGrowSelectionPtr("PlayerMothership"))
                            KAS_FindPlayerShipsOfClass("GrowSelection_PlayerMothership", "Mothership", 0)    --kasfFindEnemyShipsOfClass(kasGrowSelectionPtr("PlayerMothership"), "CLASS_Mothership")
                            KAS_Attack(TeamName, "GrowSelection_PlayerMothership")    --kasfAttack(kasGrowSelectionPtr("PlayerMothership"))
                        end --35000
                    end  --25000
                end  --15000
            end 
        else --G_ProtectMe
        
        	--kasJump("Waitin")
        	--KASRule_Remove("FSM_Mission10_LowPathGuard", "Watch_Mission10_LowPathGuard_GoingToWork")
        	KASRule_Add(TeamName, "Watch_Mission10_LowPathGuard_Waitin", "Watch_Mission10_LowPathGuard_GoingToWork")
        	Init_Mission10_LowPathGuard_Waitin(TeamName)
	        return
        end 
	end 
	
end 


--
--  "initialize" code for Mission10 mission
--
function Init_Mission10(MissionName)
	--FSM: FSM_Mission10
	--MissionName = "Mission10"
	--kasFSMCreate("EliteCarrier")
	KASRule_AddFSM("EliteCarrier", "Watch_Mission10_EliteCarrier", "Init_Mission10")
	Init_Mission10_EliteCarrier("EliteCarrier")
	--kasFSMCreate("AttackBomberTeam")
	KASRule_AddFSM("AttackBomberTeam", "Watch_Mission10_AttackBomberTeam", "Init_Mission10")
	Init_Mission10_AttackBomberTeam("AttackBomberTeam")
	--kasFSMCreate("MultigunCorvetteTeam")
	KASRule_AddFSM("MultigunCorvetteTeam", "Watch_Mission10_MultigunCorvetteTeam", "Init_Mission10")
	Init_Mission10_MultigunCorvetteTeam("MultigunCorvetteTeam")
	--kasFSMCreate("CarrierTeam")
	KASRule_AddFSM("CarrierTeam", "Watch_Mission10_CarrierTeam", "Init_Mission10")
	Init_Mission10_CarrierTeam("CarrierTeam")
	--kasFSMCreate("CarrierGuardTeam")
	KASRule_AddFSM("CarrierGuardTeam", "Watch_Mission10_CarrierGuardTeam", "Init_Mission10")
	Init_Mission10_CarrierGuardTeam("CarrierGuardTeam")
	--kasFSMCreate("MiddleAmbushTeam")
	KASRule_AddFSM("MiddleAmbushTeam", "Watch_Mission10_MiddleAmbushTeam", "Init_Mission10")
	Init_Mission10_MiddleAmbushTeam("MiddleAmbushTeam")
	--kasFSMCreate("HeavyInterceptorTeam")
	KASRule_AddFSM("HeavyInterceptorTeam", "Watch_Mission10_HeavyInterceptorTeam", "Init_Mission10")
	Init_Mission10_HeavyInterceptorTeam("HeavyInterceptorTeam")
	--kasFSMCreate("MineLayingTeam1")
	KASRule_AddFSM("MineLayingTeam1", "Watch_Mission10_MineLayingTeam1", "Init_Mission10")
	Init_Mission10_MineLayingTeam1("MineLayingTeam1")
	--kasFSMCreate("MineLayingTeam2")
	KASRule_AddFSM("MineLayingTeam2", "Watch_Mission10_MineLayingTeam2", "Init_Mission10")
	Init_Mission10_MineLayingTeam2("MineLayingTeam2")
	--kasFSMCreate("MineLayingTeam3")
	KASRule_AddFSM("MineLayingTeam3", "Watch_Mission10_MineLayingTeam3", "Init_Mission10")
	Init_Mission10_MineLayingTeam3("MineLayingTeam3")
	--kasFSMCreate("HeavyCorvettes")
	KASRule_AddFSM("HeavyCorvettes", "Watch_Mission10_HeavyCorvettes", "Init_Mission10")
	Init_Mission10_HeavyCorvettes("HeavyCorvettes")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam1", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam1")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam2", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam2")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam3", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam3")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam4", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam4")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam5", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam5")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam6", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam6")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam7", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam7")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam8", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam8")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam9", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam9")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam10", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam10")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam11", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam11")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam12", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam12")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam13", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam13")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam14", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam14")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam15", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam15")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam16", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam16")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam17", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam17")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam18", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam18")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam19", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam19")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam20", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam20")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam21", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam21")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam22", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam22")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam23", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam23")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam24", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam24")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam25", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam25")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam26", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam26")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam27", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam27")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam28", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam28")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam29", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam29")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam30", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam30")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam31", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam31")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam32", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam32")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam33", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam33")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam34", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam34")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam35", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam35")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam36", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam36")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam37", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam37")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam38", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam38")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam39", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam39")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam40", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam40")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam41", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam41")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam42", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam42")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam43", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam43")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam44", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam44")
	--kasFSMCreate("DefenseFighterTeam")
	KASRule_AddFSM("DefenseFighterTeam45", "Watch_Mission10_DefenseFighterTeam", "Init_Mission10")
	Init_Mission10_DefenseFighterTeam("DefenseFighterTeam45")
	--kasFSMCreate("ResearchStation")
	KASRule_AddFSM("ResearchStation", "Watch_Mission10_ResearchStation", "Init_Mission10")
	Init_Mission10_ResearchStation("ResearchStation")
	--kasFSMCreate("StationDefFrig")
	KASRule_AddFSM("StationDefFrig1", "Watch_Mission10_StationDefFrig", "Init_Mission10")
	Init_Mission10_StationDefFrig("StationDefFrig1")
	--kasFSMCreate("StationDefFrig")
	KASRule_AddFSM("StationDefFrig2", "Watch_Mission10_StationDefFrig", "Init_Mission10")
	Init_Mission10_StationDefFrig("StationDefFrig2")
	--kasFSMCreate("StationDefFrig")
	KASRule_AddFSM("StationDefFrig3", "Watch_Mission10_StationDefFrig", "Init_Mission10")
	Init_Mission10_StationDefFrig("StationDefFrig3")
	--kasFSMCreate("StationDefFrig")
	KASRule_AddFSM("StationDefFrig4", "Watch_Mission10_StationDefFrig", "Init_Mission10")
	Init_Mission10_StationDefFrig("StationDefFrig4")
	--kasFSMCreate("StationDefFrig")
	KASRule_AddFSM("StationDefFrig5", "Watch_Mission10_StationDefFrig", "Init_Mission10")
	Init_Mission10_StationDefFrig("StationDefFrig5")
	--kasFSMCreate("LowPathGuard")
	KASRule_AddFSM("LowPathGuard", "Watch_Mission10_LowPathGuard", "Init_Mission10")
	Init_Mission10_LowPathGuard("LowPathGuard")
	--kasFSMCreate("MissionFlow")
	KASRule_AddFSM("DummyTeam", "Watch_Mission10_MissionFlow", "Init_Mission10")
	Init_Mission10_MissionFlow("DummyTeam")
	RadDam = 0 --created,set
	KAS_CampaignAutoSave(10, "$61500")    --kasfSaveLevel(10, LSTRING_Savegame[strCurLanguage])
	singlePlayerLocationCard("$61501", 10)    --kasfLocationCard(10000, LSTRING_LocationCard[strCurLanguage])
	
end 


--
--  "watch" code for Mission10 mission
--
function Watch_Mission10(MissionName)
	--FSM: FSM_Mission10
	--MissionName = "Mission10"
	KAS_FindShipsInside("WorldVolume", "GrowSelection_AllShips")    --kasfFindShipsInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("AllShips"))
	KAS_ShipsSelectByPlayer("GrowSelection_PlayersFleet", "GrowSelection_AllShips", 0)    --kasfShipsSelectEnemy(kasGrowSelectionPtr("PlayersFleet"), kasGrowSelectionPtr("AllShips"))
	KAS_ShipsSelectByPlayer("GrowSelection_BadShips", "GrowSelection_AllShips", 1)    --kasfShipsSelectFriendly(kasGrowSelectionPtr("BadShips"), kasGrowSelectionPtr("AllShips"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam1")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam1"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam2")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam2"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam3")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam3"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam4")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam4"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam5")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam5"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam6")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam6"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam7")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam7"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam8")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam8"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam9")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam9"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam10")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam10"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam11")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam11"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam12")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam12"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam13")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam13"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam14")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam14"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam15")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam15"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam16")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam16"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam17")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam17"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam18")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam18"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam19")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam19"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam20")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam20"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam21")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam21"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam22")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam22"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam23")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam23"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam24")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam24"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam25")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam25"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam26")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam26"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam27")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam27"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam28")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam28"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam29")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam29"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam30")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam30"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam31")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam31"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam32")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam32"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam33")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam33"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam34")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam34"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam35")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam35"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam36")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam36"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam37")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam37"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam38")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam38"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam39")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam39"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam40")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam40"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam41")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam41"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam42")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam42"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam43")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam43"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam44")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam44"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "DefenseFighterTeam45")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("DefenseFighterTeam45"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "StationDefFrig1")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("StationDefFrig1"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "StationDefFrig2")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("StationDefFrig2"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "StationDefFrig3")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("StationDefFrig3"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "StationDefFrig4")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("StationDefFrig4"))
	KAS_ShipsAdd("GrowSelection_DefendStation", "StationDefFrig5")    --kasfShipsAdd(kasGrowSelectionPtr("DefendStation"), kasAITeamShipsPtr("StationDefFrig5"))
	KAS_FindEnemiesInside("ResearchStationDefense", "GrowSelection_StationDefTargets")    --kasfFindEnemiesInside(kasVolumePtr("ResearchStationDefense"), kasGrowSelectionPtr("StationDefTargets"), 2000)
	if (_VIFONCE008 == 0 and (SobGroup_Count("ResearchStation") < 1)) then  -- "ifonce" #8    --kasfShipsCount(kasAITeamShipsPtr("ResearchStation"))
	
	_VIFONCE008 = 1 --created,set;
	KASObjective_SetState(ObjectiveID_DestroyResearchOutpost, 1)    --kasfObjectiveSet("DestroyResearchOutpost", 1)
	KAS_MusicStop(15)    --kasfMusicStop(15)
	end 
	if ((SobGroup_Count("GrowSelection_DefendStation") < 1)) then  -- "ifonce" #9    --kasfShipsCount(kasGrowSelectionPtr("DefendStation"))
	
	--___KAS_SCOPED_VAR_____VIFONCE009_ = 1 --created,set;
	KASObjective_SetState(ObjectiveID_DestroyDefenceForces, 1)    --kasfObjectiveSet("DestroyDefenceForces", 1)
	end 
	if (_VIFONCE010 == 0 and (SobGroup_Count("EliteCarrier") < 1)) then  -- "ifonce" #10    --kasfShipsCount(kasAITeamShipsPtr("EliteCarrier"))
	
	_VIFONCE010 = 1 --created,set;
	KAS_PingRemove("EscapingCarrier", "$60629")    --kasfPingRemove("EscapingCarrier")
	KASObjective_SetState(ObjectiveID_DestroyEnemyCarrier, 1)    --kasfObjectiveSet("DestroyEnemyCarrier", 1)
	end 
	if (_VIFONCE011 == 0 and ((KASObjective_GetState(ObjectiveID_DestroyResearchOutpost) == 1) and (KASObjective_GetState(ObjectiveID_DestroyDefenceForces) == 1) and (KASObjective_GetState(ObjectiveID_DestroyEnemyCarrier) == 1))) then  -- "ifonce" #11    --kasfObjectiveGet("DestroyEnemyCarrier")    --kasfObjectiveGet("DestroyDefenceForces")    --kasfObjectiveGet("DestroyResearchOutpost")
	
	_VIFONCE011 = 1 --created,set;
	KAS_SubtitleAddOnce(Actor_HW1_FleetIntel, "$60626", 3)    --kasfSpeechEvent((626 + 4096 + 268435456), 0)
	KASObjective_Add(ObjectiveID_Hyperspace, "Hyperspace", OT_Primary)    --kasfObjectiveCreate("Hyperspace", LSTRING_Hyperspace[strCurLanguage], LSTRING_Hyperspace[strCurLanguage])
	Objective_SetDescription(ObjectiveID_Hyperspace, "hyperspace")
	end 
	RadDam = RadDam + 1
	if (RadDam == 4) then 
	
	SobGroup_Clear("GrowSelection_CapsDamaged")    --kasfGrowSelectionClear(kasGrowSelectionPtr("CapsDamaged"))
	SobGroup_Clear("GrowSelection_StrkDamaged")    --kasfGrowSelectionClear(kasGrowSelectionPtr("StrkDamaged"))
	SobGroup_Clear("GrowSelection_Damaged")    --kasfGrowSelectionClear(kasGrowSelectionPtr("Damaged"))
	SobGroup_Clear("GrowSelection_RDamaged")    --kasfGrowSelectionClear(kasGrowSelectionPtr("RDamaged"))
	KAS_FindShipsInside("WorldVolume", "GrowSelection_Damaged")    --kasfFindShipsInside(kasVolumePtr("WorldVolume"), kasGrowSelectionPtr("Damaged"))
	KAS_FindShipsInside("Safe1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe8", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe8"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("Safe9", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("Safe9"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe8", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe8"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe9", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe9"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe10", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe10"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe11", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe11"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe12", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe12"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe13", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe13"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe14", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe14"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe15", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe15"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe16", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe16"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("BottomSafe17", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("BottomSafe17"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("ResearchStationVolume", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("ResearchStationVolume"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_All", "GrowSelection_All", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("All"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("StationZone7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("StationZone7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone8", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone8"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone9", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone9"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone10", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone10"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone11", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone11"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone12", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone12"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone13", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone13"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone14", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone14"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone15", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone15"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone16", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone16"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone17", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone17"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone18", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone18"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone19", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone19"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone20", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone20"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone21", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone21"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone22", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone22"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("LowZone23", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("LowZone23"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("SideSafe8", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("SideSafe8"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone2", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone2"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone3", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone3"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone4", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone4"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone5", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone5"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone5a", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone5a"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone6", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone6"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone7", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone7"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone8", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone8"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone9", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone9"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone10", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone10"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone11", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone11"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone12", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone12"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("HighZone13", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("HighZone13"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FindShipsInside("AloneSafe1", "GrowSelection_Exclude")    --kasfFindShipsInside(kasVolumePtr("AloneSafe1"), kasGrowSelectionPtr("Exclude"))
	SobGroup_FillSubtract("GrowSelection_Damaged", "GrowSelection_Damaged", "GrowSelection_Exclude")    --kasfShipsRemove(kasGrowSelectionPtr("Damaged"), kasGrowSelectionPtr("Exclude"))
	KAS_FillShipsByType_Normal("GrowSelection_ResourcersTemp", "GrowSelection_Damaged", "ResourceCollector")    --kasfShipsSelectType(kasGrowSelectionPtr("ResourcersTemp"), kasGrowSelectionPtr("Damaged"), "ResourceCollector")
	KAS_FillShipsByCapital("GrowSelection_CapsDamaged", "GrowSelection_Damaged")    --kasfShipsSelectCapital(kasGrowSelectionPtr("CapsDamaged"), kasGrowSelectionPtr("Damaged"))
	KAS_FillShipsByNonCapital("GrowSelection_StrkDamaged", "GrowSelection_Damaged")    --kasfShipsSelectNonCapital(kasGrowSelectionPtr("StrkDamaged"), kasGrowSelectionPtr("Damaged"))
	SobGroup_FillSubtract("GrowSelection_StrkDamaged", "GrowSelection_StrkDamaged", "GrowSelection_ResourcersTemp")    --kasfShipsRemove(kasGrowSelectionPtr("StrkDamaged"), kasGrowSelectionPtr("ResourcersTemp"))
	KAS_ShipsAdd("GrowSelection_CapsDamaged", "GrowSelection_ResourcersTemp")    --kasfShipsAdd(kasGrowSelectionPtr("CapsDamaged"), kasGrowSelectionPtr("ResourcersTemp"))
	ignoredFunction()    --kasfForceCombatStatus(kasGrowSelectionPtr("Damaged"), 1)
	SobGroup_TakeDamageAbsolute("GrowSelection_CapsDamaged", (RandomIntRange(180, 220)))    --kasfRandom(180, 220)    --kasfShipsDamage(kasGrowSelectionPtr("CapsDamaged"), (RandomIntRange(180, 220)))
	SobGroup_TakeDamageAbsolute("GrowSelection_StrkDamaged", (RandomIntRange(50, 80)))    --kasfRandom(50, 80)    --kasfShipsDamage(kasGrowSelectionPtr("StrkDamaged"), (RandomIntRange(50, 80)))
	SobGroup_SetInRadiation("GrowSelection_CapsDamaged")    --kasfSpawnEffect(kasGrowSelectionPtr("CapsDamaged"), "damageRadiation.ebg", 4)
	SobGroup_SetInRadiation("GrowSelection_StrkDamaged")    --kasfSpawnEffect(kasGrowSelectionPtr("StrkDamaged"), "damageRadiation.ebg", 4)
	KAS_ShipsSelectByPlayer("GrowSelection_PlayerDamaged", "GrowSelection_Damaged", 0)    --kasfShipsSelectEnemy(kasGrowSelectionPtr("PlayerDamaged"), kasGrowSelectionPtr("Damaged"))
	RadDam = 0 --set
	end 
	if (_VIFONCE012 == 0 and (G_MiningTheField ~= 0)) then  -- "ifonce" #12
	
	_VIFONCE012 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "MinelayingTech")    --kasfAllowPlayerToResearch("MineLayerTech")
	end 
	if (_VIFONCE013 == 0 and (G_GotProx ~= 0)) then  -- "ifonce" #13
	
	_VIFONCE013 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "ProximitySensor")    --kasfAllowPlayerToResearch("ProximityDetector")
	end 
	if (_VIFONCE014 == 0 and (KAS_PlayerHasResearch(0, "CorvetteDrive") ~= 0)) then  -- "ifonce" #14    --kasfDoesPlayerHave("MassDrive10Kt")
	
	_VIFONCE014 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteChassis")    --kasfAllowPlayerToResearch("Chassis2")
	end 
	if ((KAS_PlayerHasResearch(0, "CorvetteChassis") ~= 0) and (SetMediumGuns == 0)) then     --kasfDoesPlayerHave("Chassis2")
	
	KAS_UnrestrictResearchOption(0, "HeavyCorvetteUpgrade")    --kasfAllowPlayerToResearch("MediumGuns")
	SetMediumGuns = 1 --created,set
	end 
	if (_VIFONCE015 == 0 and (KAS_PlayerHasResearch(0, "FighterChassis") ~= 0)) then  -- "ifonce" #15    --kasfDoesPlayerHave("Chassis1")
	
	_VIFONCE015 = 1 --created,set;
	KAS_UnrestrictResearchOption(0, "CorvetteDrive")    --kasfAllowPlayerToResearch("MassDrive10Kt")
	end 
	
end 

function OnStartOrLoad()
    print("OnStartOrLoad issued")

    --Mission-global GrowSelections/SobGroups
    KASSobGroup_Create("GrowSelection_All")
    KASSobGroup_Create("GrowSelection_AllShips")
    KASSobGroup_Create("GrowSelection_AttCarrier")
    KASSobGroup_Create("GrowSelection_AttHCs")
    KASSobGroup_Create("GrowSelection_AttHIs")
    KASSobGroup_Create("GrowSelection_AttackCarrier")
    KASSobGroup_Create("GrowSelection_AttackingCarrier")
    KASSobGroup_Create("GrowSelection_AttackingRS")
    KASSobGroup_Create("GrowSelection_BadShips")
    KASSobGroup_Create("GrowSelection_CGuardTemp")
    KASSobGroup_Create("GrowSelection_CapsAttCarrier")
    KASSobGroup_Create("GrowSelection_CapsDamaged")
    KASSobGroup_Create("GrowSelection_CapsGettingMined")
    KASSobGroup_Create("GrowSelection_CapsNearAb")
    KASSobGroup_Create("GrowSelection_CapsWantMyCarrier")
    KASSobGroup_Create("GrowSelection_DamCapsWantMyCarrier")
    KASSobGroup_Create("GrowSelection_DamStrkWantMyCarrier")
    KASSobGroup_Create("GrowSelection_Damaged")
    KASSobGroup_Create("GrowSelection_DamagedCapsAttCarrier")
    KASSobGroup_Create("GrowSelection_DamagedCapsGettingMined")
    KASSobGroup_Create("GrowSelection_DamagedStrkAttackingCarrier")
    KASSobGroup_Create("GrowSelection_DamagedStrkGettingHammered")
    KASSobGroup_Create("GrowSelection_DefendStation")
    KASSobGroup_Create("GrowSelection_Exclude")
    KASSobGroup_Create("GrowSelection_FriendlyHideTemp")
    KASSobGroup_Create("GrowSelection_FuckShips")
    KASSobGroup_Create("GrowSelection_GettingHammered")
    KASSobGroup_Create("GrowSelection_GettingMined")
    KASSobGroup_Create("GrowSelection_GoinLow")
    KASSobGroup_Create("GrowSelection_GoinMid")
    KASSobGroup_Create("GrowSelection_HCorvTemp")
    KASSobGroup_Create("GrowSelection_HInteceptTemp")
    KASSobGroup_Create("GrowSelection_HideTemp")
    KASSobGroup_Create("GrowSelection_InjuredAttackingRS")
    KASSobGroup_Create("GrowSelection_InjuredGoinLow")
    KASSobGroup_Create("GrowSelection_InjuredGoinMid")
    KASSobGroup_Create("GrowSelection_InjuredNearAb")
    KASSobGroup_Create("GrowSelection_InjuredNearFrigs")
    KASSobGroup_Create("GrowSelection_InjuredNearMg")
    KASSobGroup_Create("GrowSelection_LastDitchTargets")
    KASSobGroup_Create("GrowSelection_LastDitchTargetsCapital")
    KASSobGroup_Create("GrowSelection_NearAb")
    KASSobGroup_Create("GrowSelection_NearFrigs")
    KASSobGroup_Create("GrowSelection_NearMg")
    KASSobGroup_Create("GrowSelection_NisCentreShip")
    KASSobGroup_Create("GrowSelection_PlayerAttacking")
    KASSobGroup_Create("GrowSelection_PlayerDamaged")
    KASSobGroup_Create("GrowSelection_PlayerMothership")
    KASSobGroup_Create("GrowSelection_PlayersFleet")
    KASSobGroup_Create("GrowSelection_RDamaged")
    KASSobGroup_Create("GrowSelection_ResourcersTemp")
    KASSobGroup_Create("GrowSelection_StationDefTargets")
    KASSobGroup_Create("GrowSelection_StrkAttackingCarrier")
    KASSobGroup_Create("GrowSelection_StrkDamaged")
    KASSobGroup_Create("GrowSelection_StrkGettingHammered")
    KASSobGroup_Create("GrowSelection_StrkNearAb")
    KASSobGroup_Create("GrowSelection_StrkNearMg")
    KASSobGroup_Create("GrowSelection_StrkWantMyCarrier")
    KASSobGroup_Create("GrowSelection_WantMyCarrier")
    KASSobGroup_CreateIfNotExist("AttackBomberTeam")
    KASSobGroup_CreateIfNotExist("CarrierGuardTeam")
    KASSobGroup_CreateIfNotExist("CarrierTeam")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam1")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam10")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam11")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam12")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam13")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam14")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam15")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam16")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam17")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam18")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam19")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam2")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam20")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam21")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam22")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam23")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam24")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam25")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam26")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam27")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam28")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam29")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam3")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam30")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam31")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam32")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam33")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam34")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam35")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam36")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam37")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam38")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam39")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam4")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam40")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam41")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam42")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam43")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam44")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam45")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam5")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam6")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam7")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam8")
    KASSobGroup_CreateIfNotExist("DefenseFighterTeam9")
    KASSobGroup_CreateIfNotExist("DummyTeam")
    KASSobGroup_CreateIfNotExist("EliteCarrier")
    KASSobGroup_CreateIfNotExist("HeavyCorvettes")
    KASSobGroup_CreateIfNotExist("HeavyInterceptorTeam")
    KASSobGroup_CreateIfNotExist("LowPathGuard")
    KASSobGroup_CreateIfNotExist("MiddleAmbushTeam")
    KASSobGroup_CreateIfNotExist("MineLayingTeam1")
    KASSobGroup_CreateIfNotExist("MineLayingTeam2")
    KASSobGroup_CreateIfNotExist("MineLayingTeam3")
    KASSobGroup_CreateIfNotExist("MultigunCorvetteTeam")
    KASSobGroup_CreateIfNotExist("ResearchStation")
    KASSobGroup_CreateIfNotExist("StationDefFrig1")
    KASSobGroup_CreateIfNotExist("StationDefFrig2")
    KASSobGroup_CreateIfNotExist("StationDefFrig3")
    KASSobGroup_CreateIfNotExist("StationDefFrig4")
    KASSobGroup_CreateIfNotExist("StationDefFrig5")

    Sound_SpeechSubtitlePath("speech:missions/Mission10/")
    Scar_TracesEnable("SGAction, SGQuery, Camera, ATI, Player")

    LCWatcher_SpecifyLocalFilter(LC_Scar, "_VIFONCE;AttackBomberTeam;CarrierGuardTeam;CarrierTeam;DefenseFighterTeam1;DefenseFighterTeam10;DefenseFighterTeam11;DefenseFighterTeam12;DefenseFighterTeam13;DefenseFighterTeam14;DefenseFighterTeam15;DefenseFighterTeam16;DefenseFighterTeam17;DefenseFighterTeam18;DefenseFighterTeam19;DefenseFighterTeam2;DefenseFighterTeam20;DefenseFighterTeam21;DefenseFighterTeam22;DefenseFighterTeam23;DefenseFighterTeam24;DefenseFighterTeam25;DefenseFighterTeam26;DefenseFighterTeam27;DefenseFighterTeam28;DefenseFighterTeam29;DefenseFighterTeam3;DefenseFighterTeam30;DefenseFighterTeam31;DefenseFighterTeam32;DefenseFighterTeam33;DefenseFighterTeam34;DefenseFighterTeam35;DefenseFighterTeam36;DefenseFighterTeam37;DefenseFighterTeam38;DefenseFighterTeam39;DefenseFighterTeam4;DefenseFighterTeam40;DefenseFighterTeam41;DefenseFighterTeam42;DefenseFighterTeam43;DefenseFighterTeam44;DefenseFighterTeam45;DefenseFighterTeam5;DefenseFighterTeam6;DefenseFighterTeam7;DefenseFighterTeam8;DefenseFighterTeam9;EliteCarrier;HeavyCorvettes;HeavyInterceptorTeam;LowPathGuard;MiddleAmbushTeam;MineLayingTeam1;MineLayingTeam2;MineLayingTeam3;DummyTeam;MultigunCorvetteTeam;ResearchStation;StationDefFrig1;StationDefFrig2;StationDefFrig3;StationDefFrig4;StationDefFrig5;")
    KAS_SetColourSchemeColours(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(1, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    Player_SetTeamColourTheme(3, {1,0.823529411764706,0}, {1, 0, 0}, "DATA:Badges/Taiidan.tga", {0.921,0.75,0.419}, "data:/effect/trails/tai_trail_clr.tga")
    KAS_SetColourScheme("AttackBomberTeam", 1)
    KAS_SetColourScheme("CarrierGuardTeam", 1)
    KAS_SetColourScheme("CarrierTeam", 1)
    KAS_SetColourScheme("DefenseFighterTeam1", 1)
    KAS_SetColourScheme("DefenseFighterTeam10", 1)
    KAS_SetColourScheme("DefenseFighterTeam11", 1)
    KAS_SetColourScheme("DefenseFighterTeam12", 1)
    KAS_SetColourScheme("DefenseFighterTeam13", 1)
    KAS_SetColourScheme("DefenseFighterTeam14", 1)
    KAS_SetColourScheme("DefenseFighterTeam15", 1)
    KAS_SetColourScheme("DefenseFighterTeam16", 1)
    KAS_SetColourScheme("DefenseFighterTeam17", 1)
    KAS_SetColourScheme("DefenseFighterTeam18", 1)
    KAS_SetColourScheme("DefenseFighterTeam19", 1)
    KAS_SetColourScheme("DefenseFighterTeam2", 1)
    KAS_SetColourScheme("DefenseFighterTeam20", 1)
    KAS_SetColourScheme("DefenseFighterTeam21", 1)
    KAS_SetColourScheme("DefenseFighterTeam22", 1)
    KAS_SetColourScheme("DefenseFighterTeam23", 1)
    KAS_SetColourScheme("DefenseFighterTeam24", 1)
    KAS_SetColourScheme("DefenseFighterTeam25", 1)
    KAS_SetColourScheme("DefenseFighterTeam26", 1)
    KAS_SetColourScheme("DefenseFighterTeam27", 1)
    KAS_SetColourScheme("DefenseFighterTeam28", 1)
    KAS_SetColourScheme("DefenseFighterTeam29", 1)
    KAS_SetColourScheme("DefenseFighterTeam3", 1)
    KAS_SetColourScheme("DefenseFighterTeam30", 1)
    KAS_SetColourScheme("DefenseFighterTeam31", 1)
    KAS_SetColourScheme("DefenseFighterTeam32", 1)
    KAS_SetColourScheme("DefenseFighterTeam33", 1)
    KAS_SetColourScheme("DefenseFighterTeam34", 1)
    KAS_SetColourScheme("DefenseFighterTeam35", 1)
    KAS_SetColourScheme("DefenseFighterTeam36", 1)
    KAS_SetColourScheme("DefenseFighterTeam37", 1)
    KAS_SetColourScheme("DefenseFighterTeam38", 1)
    KAS_SetColourScheme("DefenseFighterTeam39", 1)
    KAS_SetColourScheme("DefenseFighterTeam4", 1)
    KAS_SetColourScheme("DefenseFighterTeam40", 1)
    KAS_SetColourScheme("DefenseFighterTeam41", 1)
    KAS_SetColourScheme("DefenseFighterTeam42", 1)
    KAS_SetColourScheme("DefenseFighterTeam43", 1)
    KAS_SetColourScheme("DefenseFighterTeam44", 1)
    KAS_SetColourScheme("DefenseFighterTeam45", 1)
    KAS_SetColourScheme("DefenseFighterTeam5", 1)
    KAS_SetColourScheme("DefenseFighterTeam6", 1)
    KAS_SetColourScheme("DefenseFighterTeam7", 1)
    KAS_SetColourScheme("DefenseFighterTeam8", 1)
    KAS_SetColourScheme("DefenseFighterTeam9", 1)
    KAS_SetColourScheme("EliteCarrier", 1)
    KAS_SetColourScheme("HeavyCorvettes", 1)
    KAS_SetColourScheme("HeavyInterceptorTeam", 1)
    KAS_SetColourScheme("LowPathGuard", 1)
    KAS_SetColourScheme("MiddleAmbushTeam", 1)
    KAS_SetColourScheme("MineLayingTeam1", 1)
    KAS_SetColourScheme("MultigunCorvetteTeam", 1)
    KAS_SetColourScheme("ResearchStation", 1)
    KAS_SetColourScheme("StationDefFrig1", 1)
    KAS_SetColourScheme("StationDefFrig2", 1)
    KAS_SetColourScheme("StationDefFrig3", 1)
    KAS_SetColourScheme("StationDefFrig4", 1)
    KAS_SetColourScheme("StationDefFrig5", 1)
    Player_SetPlayerName(1, "$60627")
    Player_SetPlayerName(3, "$60627")

    singlePlayerOnStartOrLoad(10)
end

function OnInit()
    print("OnInit issued")

    Player_RestrictAllResearch(0, 1)
    SobGroup_LoadPersistantData("Kus_Mothership")
    Camera_Interpolate('here', 'Camera_Startpos', 0)
    KAS_RememberStartingRUs()
    singlePlayerStartGame(10)
    KAS_CPUPlayerInit()

    KASRule_Add("Mission10", "Watch_Mission10", "OnInit")
    Init_Mission10("Mission10")
    KAS_SetLetterboxStart(1, 5, 1, 0)
    singlePlayerPauseUntilHyperspaceComplete("OnInit_Finish()")
	HW2_ReactiveInfo() --Added for info in log file
end

function OnInit_Finish()
    print("OnInit_Finish issued")

    KAS_MusicPlayType( "data:sound/music/ambient/A08_mission10", MUS_Ambient )
    KAS_SetFormation("CarrierGuardTeam", "Delta")
    KAS_SetFormation("HeavyCorvettes", "Claw")
    KAS_SetFormation("HeavyInterceptorTeam", "Claw")
    KAS_SetFormation("LowPathGuard", "Claw")
    KAS_SetFormation("MiddleAmbushTeam", "Broad")
    KAS_SetFormation("MineLayingTeam1", "Delta3D")
    KAS_SetFormation("StationDefFrig5", "Broad")
end

